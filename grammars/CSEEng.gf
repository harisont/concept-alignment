concrete CSEEng of CSE = ExtractEng, CoursePlansSynEng ** open MorphoDictEng, ParadigmsEng, MakeStructuralEng in { -- Eng
lin Operat_system_Operativsystem_CN = AdjCN (PositA Operat_A) (UseN system_N) ; -- Eng
oper Operat_A = mkA "Operat" ; -- Eng
lin artificial_intelligence_Intellig_Artificiell_CN = AdjCN (PositA artificial_A) (UseN intelligence_N) ; -- Eng
lin basic_concept_grundläggande_begrepp_CN = AdjCN (PositA basic_A) (UseN concept_N) ; -- Eng
lin circuit_technique_kretstekniker_CN = AdjCN (PositA circuit_A) (UseN technique_N) ; -- Eng
oper circuit_A = mkA "circuit" ; -- Eng
lin compulsory_element_inklusive_obligatorisk_moment_CN = AdjCN (PositA compulsory_A) (UseN element_N) ; -- Eng
lin functional_program_possess_funktionell_program_CN = AdjCN (PositA functional_A) (UseN program_N) ; -- Eng
lin high_code_quality_hög_kodkvalitet_CN = AdjCN (PositA high_A) (UseN (CompoundN code_N quality_N)) ; -- Eng
lin other_programme_languag_annan_programspråk_CN = AdjCN (PositA other_A) (UseN (CompoundN programme_N languag_N)) ; -- Eng
oper languag_N = mkN "languag" ; -- Eng
lin parallel_program_for_a_dela_adressutrymme_CN = AdjCN (PositA parallel_A) (UseN program_N) ; -- Eng
lin possible_topics_Kurs_CN = AdjCN (PositA possible_A) (UseN topics_N) ; -- Eng
oper topics_N = mkN "topics" ; -- Eng
lin relevant_program_library_relevant_programbibliotek_CN = AdjCN (PositA relevant_A) (UseN (CompoundN program_N library_N)) ; -- Eng
lin sample_program_exempelprogram_CN = AdjCN (PositA sample_A) (UseN program_N) ; -- Eng
oper sample_A = mkA "sample" ; -- Eng
lin Automatic_Automatisk_A = Automatic_A ; -- Eng
oper Automatic_A = mkA "Automatic" ; -- Eng
lin Bayesian_Bayesiansk_A = Bayesian_A ; -- Eng
oper Bayesian_A = mkA "Bayesian" ; -- Eng
lin Concrete_specifik_A = Concrete_A ; -- Eng
oper Concrete_A = mkA "Concrete" ; -- Eng
lin Concurrent_parallell_A = Concurrent_A ; -- Eng
oper Concurrent_A = mkA "Concurrent" ; -- Eng
lin a_basic_sound_knowledge_in_logic_grundläggande_kunskap_in_logik_NP = DetCN a_Det (AdjCN (PositA basic_A) (PrepCN (UseN (CompoundN sound_N knowledge_N)) (PrepNP in_Prep (MassNP (UseN logic_N))))) ; -- Eng
lin a_comprehensive_knowledge_possess_the_language_omfattande_kunskap_NP = DetCN a_Det (AdjCN (PositA comprehensive_A) (PrepCN (UseN knowledge_N) (PrepNP possess_Prep (DetCN the_Det (UseN language_N))))) ; -- Eng
lin a_contemporary_object_a_objektorienterad_modernt_programmeringsspråk_NP = DetCN a_Det (AdjCN (PositA contemporary_A) (UseN object_N)) ; -- Eng
lin a_scientific_text_possess_a_vetenskaplig_text_NP = DetCN a_Det (AdjCN (PositA scientific_A) (UseN text_N)) ; -- Eng
lin a_sound_basis_a_sund_grund_NP = DetCN a_Det (UseN (CompoundN sound_N basis_N)) ; -- Eng
lin a_function_a_funktion_NP = DetCN a_Det (UseN function_N) ; -- Eng
lin a_introduction_a_inledning_NP = DetCN a_Det (UseN introduction_N) ; -- Eng
lin a_introduction_a_introduktion_NP = DetCN a_Det (UseN introduction_N) ; -- Eng
lin a_topic_possess_a_ämnesområde_NP = DetCN a_Det (UseN topic_N) ; -- Eng
lin all_mandatory_assignment_all_obligatorisk_uppgift_NP = DetCN all_Det (AdjCN (PositA mandatory_A) (UseN assignment_N)) ; -- Eng
oper all_Det = mkDet "all" ; -- Eng
lin that_cause_power_som_NP = DetCN that_Det (UseN (CompoundN cause_N power_N)) ; -- Eng
lin the_available_method_vetenskaplig_litteratur_NP = DetCN the_Det (AdjCN (PositA available_A) (UseN method_N)) ; -- Eng
lin the_basic_skill_den_grundläggande_färdighet_NP = DetCN the_Det (AdjCN (PositA basic_A) (UseN skill_N)) ; -- Eng
lin the_core_functionality_possess_modern_operat_system_grundläggande_funktion_in_modern_operativsystem_NP = DetCN the_Det (AdjCN (PositA core_A) (PrepCN (UseN functionality_N) (PrepNP possess_Prep (PluralNP (AdjCN (PositA modern_A) (AdjCN (PositA operat_A) (UseN system_N))))))) ; -- Eng
oper core_A = mkA "core" ; -- Eng
oper operat_A = mkA "operat" ; -- Eng
lin the_course_demonstrate_den_NP = DetCN the_Det (AdjCN (PositA course_A) (UseN demonstrate_N)) ; -- Eng
oper course_A = mkA "course" ; -- Eng
oper demonstrate_N = mkN "demonstrate" ; -- Eng
lin the_course_material_a_skriftlig_tentamen_NP = DetCN the_Det (AdjCN (PositA course_A) (UseN material_N)) ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin the_dual_form_possess_dual_former_NP = DetCN the_Det (AdjCN (PositA dual_A) (UseN form_N)) ; -- Eng
lin the_energy_consumption_possess_different_system_energiförbrukning_for_olik_systemkonfiguration_NP = DetCN the_Det (AdjCN (PositA energy_A) (PrepCN (UseN consumption_N) (PrepNP possess_Prep (MassNP (AdjCN (PositA different_A) (UseN system_N)))))) ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin the_energy_consumption_possess_certain_component_in_the_system_energiförbrukning_for_viss_komponent_NP = DetCN the_Det (AdjCN (PositA energy_A) (PrepCN (UseN consumption_N) (PrepNP possess_Prep (PluralNP (PrepCN (AdjCN (PositA certain_A) (UseN component_N)) (PrepNP in_Prep (DetCN the_Det (UseN system_N)))))))) ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin the_energy_consumption_possess_computer_system_arkitektur_NP = DetCN the_Det (AdjCN (PositA energy_A) (PrepCN (UseN consumption_N) (PrepNP possess_Prep (PluralNP (UseN (CompoundN computer_N system_N)))))) ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin the_follow_concepts_följande_begrepp_NP = DetCN the_Det (AdjCN (PositA follow_A) (UseN concepts_N)) ; -- Eng
oper follow_A = mkA "follow" ; -- Eng
oper concepts_N = mkN "concepts" ; -- Eng
lin the_follow_topic_följande_ämne_NP = DetCN the_Det (AdjCN (PositA follow_A) (UseN topic_N)) ; -- Eng
oper follow_A = mkA "follow" ; -- Eng
lin the_follow_topics_följande_moment_NP = DetCN the_Det (AdjCN (PositA follow_A) (UseN topics_N)) ; -- Eng
oper follow_A = mkA "follow" ; -- Eng
oper topics_N = mkN "topics" ; -- Eng
lin the_functional_approach_funktionell_programmering_NP = DetCN the_Det (AdjCN (PositA functional_A) (UseN approach_N)) ; -- Eng
lin the_scientific_literature_tillgänglig_metod_NP = DetCN the_Det (AdjCN (PositA scientific_A) (UseN literature_N)) ; -- Eng
lin the_upper_limit_for_a_parallell_program_NP = DetCN the_Det (AdjCN (PositA upper_A) (UseN limit_N)) ; -- Eng
lin the_development_possess_parallel_program_for_address_space_parallell_program_for_distribuerad_adressutrymme_NP = DetCN the_Det (PrepCN (UseN development_N) (PrepNP possess_Prep (PluralNP (PrepCN (AdjCN (PositA parallel_A) (UseN program_N)) (PrepNP for_Prep (MassNP (UseN (CompoundN address_N space_N)))))))) ; -- Eng
lin the_essential_possess_the_real_problem_den_NP = DetCN the_Det (PrepCN (UseN essential_N) (PrepNP possess_Prep (DetCN the_Det (AdjCN (PositA real_A) (UseN problem_N))))) ; -- Eng
lin the_principle_behind_a_modern_microprocessor_for_princip_bakom_a_modern_mikroprocessa_NP = DetCN the_Det (PrepCN (UseN principle_N) (PrepNP behind_Prep (DetCN a_Det (AdjCN (PositA modern_A) (UseN microprocessor_N))))) ; -- Eng
lin the_software_possess_a_embed_system_mjukvara_in_a_inbygg_system_NP = DetCN the_Det (PrepCN (UseN software_N) (PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA embed_A) (UseN system_N))))) ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin the_topic_possess_the_course_Kurs_NP = DetCN the_Det (PrepCN (UseN topic_N) (PrepNP possess_Prep (DetCN the_Det (UseN course_N)))) ; -- Eng
lin the_course_cover_Kurs_NP = DetCN the_Det (UseN (CompoundN course_N cover_N)) ; -- Eng
lin the_ae_in_synnerhet_NP = DetCN the_Det (UseN ae_N) ; -- Eng
oper ae_N = mkN "ae" ; -- Eng
lin the_bottleneck_flaskhals_NP = DetCN the_Det (UseN bottleneck_N) ; -- Eng
lin the_content_Kursinnehåll_NP = DetCN the_Det (UseN content_N) ; -- Eng
lin the_course_Kurs_NP = DetCN the_Det (UseN course_N) ; -- Eng
lin the_course_kurs_NP = DetCN the_Det (UseN course_N) ; -- Eng
lin the_language_språk_NP = DetCN the_Det (UseN language_N) ; -- Eng
lin the_lecture_Föreläsning_NP = DetCN the_Det (UseN lecture_N) ; -- Eng
lin the_method_optimering_NP = DetCN the_Det (UseN method_N) ; -- Eng
lin the_participant_Student_NP = DetCN the_Det (UseN participant_N) ; -- Eng
lin the_participant_Undervisning_NP = DetCN the_Det (UseN participant_N) ; -- Eng
lin the_student_Studenten_NP = DetCN the_Det (UseN student_N) ; -- Eng
lin the_student_elev_NP = DetCN the_Det (UseN student_N) ; -- Eng
lin the_student_student_NP = DetCN the_Det (UseN student_N) ; -- Eng
lin the_topic_deltagare_NP = DetCN the_Det (UseN topic_N) ; -- Eng
lin this_part_cover_denna_del_NP = DetCN this_Det (UseN (CompoundN part_N cover_N)) ; -- Eng
lin this_approach_Uppdelning_in_process_NP = DetCN this_Det (UseN approach_N) ; -- Eng
lin this_bottleneck_effektivitet_NP = DetCN this_Det (UseN bottleneck_N) ; -- Eng
lin this_course_denna_kurs_NP = DetCN this_Det (UseN course_N) ; -- Eng
lin this_course_in_kurs_NP = DetCN this_Det (UseN course_N) ; -- Eng
lin this_course_Kurs_NP = DetCN this_Det (UseN course_N) ; -- Eng
lin this_function_denna_funktion_NP = DetCN this_Det (UseN function_N) ; -- Eng
lin this_technique_denna_princip_NP = DetCN this_Det (UseN technique_N) ; -- Eng
lin Formulate_inbyggd_A = Formulate_A ; -- Eng
oper Formulate_A = mkA "Formulate" ; -- Eng
lin Functional_Funktionell_A = Functional_A ; -- Eng
oper Functional_A = mkA "Functional" ; -- Eng
lin Lexical_lexikal_A = Lexical_A ; -- Eng
oper Lexical_A = mkA "Lexical" ; -- Eng
lin Logic_logik_Adv = Logic_Adv ; -- Eng
oper Logic_Adv = mkAdv "Logic" ; -- Eng
lin Logistic_Övervakad_A = Logistic_A ; -- Eng
oper Logistic_A = mkA "Logistic" ; -- Eng
lin Mathematical_Matematisk_A = Mathematical_A ; -- Eng
oper Mathematical_A = mkA "Mathematical" ; -- Eng
lin Methodological_Metodologisk_A = Methodological_A ; -- Eng
oper Methodological_A = mkA "Methodological" ; -- Eng
lin Moore_först_A = Moore_A ; -- Eng
oper Moore_A = mkA "Moore" ; -- Eng
lin NLP_språkteknologisk_A = NLP_A ; -- Eng
oper NLP_A = mkA "NLP" ; -- Eng
lin Operat_stationär_A = Operat_A ; -- Eng
oper Operat_A = mkA "Operat" ; -- Eng
lin Operational_stark_A = Operational_A ; -- Eng
oper Operational_A = mkA "Operational" ; -- Eng
lin natural_language_process_grundläggande_språkteknologi_Cl = PredVP (PluralNP (AdjCN (PositA natural_A) (UseN language_N))) (UseV process_V) ; -- Eng
lin Examination_include_compulsory_element_Examination_inklusive_obligatorisk_moment_Cl = PredVP (PluralNP (UseN Examination_N)) (ComplV include_V (PluralNP (AdjCN (PositA compulsory_A) (UseN element_N)))) ; -- Eng
oper Examination_N = mkN "Examination" ; -- Eng
lin Reinforcement_learn_Reinforcement_learning_Cl = PredVP (PluralNP (UseN Reinforcement_N)) (UseV learn_V) ; -- Eng
oper Reinforcement_N = mkN "Reinforcement" ; -- Eng
lin Machine_learn_Maskininlärning_Cl = PredVP (UsePN Machine_PN) (UseV learn_V) ; -- Eng
oper Machine_PN = mkPN "Machine" ; -- Eng
lin energy_measure_consumption_possess_the_whole_system_energiförbrukning_in_hel_system_CN = PrepCN (AdjCN (PositA energy_A) (AdjCN (PositA measure_A) (UseN consumption_N))) (PrepNP possess_Prep (DetCN the_Det (AdjCN (PositA whole_A) (UseN system_N)))) ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
oper measure_A = mkA "measure" ; -- Eng
lin interpret_requirement_on_the_architecture_possess_computer_system_tolken_omvärld_CN = PrepCN (AdjCN (PositA interpret_A) (UseN requirement_N)) (PrepNP on_Prep (DetCN the_Det (PrepCN (UseN architecture_N) (PrepNP possess_Prep (PluralNP (UseN (CompoundN computer_N system_N))))))) ; -- Eng
oper interpret_A = mkA "interpret" ; -- Eng
lin about_literature_om_litteratur_PP = PrepNP about_Prep (MassNP (UseN literature_N)) ; -- Eng
lin after_the_course_efter_kurs_PP = PrepNP after_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin after_successful_completion_possess_the_course_participant_student_PP = PrepNP after_Prep (MassNP (PrepCN (AdjCN (PositA successful_A) (UseN completion_N)) (PrepNP possess_Prep (DetCN the_Det (AdjCN (PositA course_A) (UseN participant_N)))))) ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin as_Gpus_on_accelerator_PP = PrepNP as_Prep (PluralNP (UseN Gpus_N)) ; -- Eng
oper Gpus_N = mkN "Gpus" ; -- Eng
lin at_the_system_level_on_systemnivå_PP = PrepNP at_Prep (DetCN the_Det (UseN (CompoundN system_N level_N))) ; -- Eng
lin for_the_course_to_kurs_PP = PrepNP for_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin for_approximation_for_approximation_PP = PrepNP for_Prep (MassNP (UseN approximation_N)) ; -- Eng
lin for_data_for_data_PP = PrepNP for_Prep (MassNP (UseN data_N)) ; -- Eng
lin for_future_operativsyste_PP = PrepNP for_Prep (MassNP (UseN future_N)) ; -- Eng
lin for_improvement_to_förbättring_PP = PrepNP for_Prep (MassNP (UseN improvement_N)) ; -- Eng
lin for_instance_enkel_PP = PrepNP for_Prep (MassNP (UseN instance_N)) ; -- Eng
lin for_sustainability_possess_hållbarhet_PP = PrepNP for_Prep (MassNP (UseN sustainability_N)) ; -- Eng
lin for_text_for_sekvensdata_PP = PrepNP for_Prep (MassNP (UseN text_N)) ; -- Eng
lin from_the_second_cycle_utöver_grundläggande_behörighet_PP = PrepNP from_Prep (DetCN the_Det (AdjCN (PositA second_A) (UseN cycle_N))) ; -- Eng
oper second_A = mkA "second" ; -- Eng
lin in_a_crucial_way_on_logical_technique_on_a_avgörande_sätt_in_logisk_tekniker_PP = PrepNP in_Prep (DetCN a_Det (PrepCN (AdjCN (PositA crucial_A) (UseN way_N)) (PrepNP on_Prep (PluralNP (AdjCN (PositA logical_A) (UseN technique_N)))))) ; -- Eng
lin in_any_technical_system_almost_in_all_teknisk_system_idag_nästan_PP = PrepNP in_Prep (DetCN any_Det (AdvCN (AdjCN (PositA technical_A) (UseN system_N)) almost_Adv)) ; -- Eng
oper any_Det = mkDet "any" ; -- Eng
lin in_the_parallel_implementation_possess_the_program_in_parallell_implementering_possess_program_PP = PrepNP in_Prep (DetCN the_Det (PrepCN (AdjCN (PositA parallel_A) (UseN implementation_N)) (PrepNP possess_Prep (DetCN the_Det (UseN program_N))))) ; -- Eng
lin in_the_execution_possess_a_parallel_program_vid_exekverande_possess_a_parallell_program_PP = PrepNP in_Prep (DetCN the_Det (PrepCN (UseN execution_N) (PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA parallel_A) (UseN program_N)))))) ; -- Eng
lin in_the_course_under_kurs_PP = PrepNP in_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin in_the_course_Kurs_PP = PrepNP in_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin in_the_field_inom_område_PP = PrepNP in_Prep (DetCN the_Det (UseN field_N)) ; -- Eng
lin in_the_lecture_under_föreläsning_PP = PrepNP in_Prep (DetCN the_Det (UseN lecture_N)) ; -- Eng
lin in_the_system_in_system_PP = PrepNP in_Prep (DetCN the_Det (UseN system_N)) ; -- Eng
lin in_the_system_possess_process_PP = PrepNP in_Prep (DetCN the_Det (UseN system_N)) ; -- Eng
lin in_this_course_in_kurs_PP = PrepNP in_Prep (DetCN this_Det (UseN course_N)) ; -- Eng
lin in_this_field_inom_denna_område_PP = PrepNP in_Prep (DetCN this_Det (UseN field_N)) ; -- Eng
lin in_computer_science_for_datavetenskap_PP = PrepNP in_Prep (MassNP (UseN (CompoundN computer_N science_N))) ; -- Eng
lin in_industry_inom_industri_PP = PrepNP in_Prep (MassNP (UseN industry_N)) ; -- Eng
lin in_logic_in_logik_PP = PrepNP in_Prep (MassNP (UseN logic_N)) ; -- Eng
lin in_optimization_in_optimering_PP = PrepNP in_Prep (MassNP (UseN optimization_N)) ; -- Eng
lin in_parallel_on_pipelining_PP = PrepNP in_Prep (MassNP (UseN parallel_N)) ; -- Eng
lin in_software_a_miljard_PP = PrepNP in_Prep (MassNP (UseN software_N)) ; -- Eng
lin in_practical_application_in_praktisk_tillämpning_PP = PrepNP in_Prep (PluralNP (AdjCN (PositA practical_A) (UseN application_N))) ; -- Eng
lin in_mathematics_igenom_grundläggande_matematisk_begrepp_PP = PrepNP in_Prep (PluralNP (UseN mathematics_N)) ; -- Eng
lin in_NLP_inom_NLP_PP = PrepNP in_Prep (UsePN NLP_PN) ; -- Eng
oper NLP_PN = mkPN "NLP" ; -- Eng
lin in_c_in_c_PP = PrepNP in_Prep (UsePN c_PN) ; -- Eng
oper c_PN = mkPN "c" ; -- Eng
lin into_the_follow_part_in_följande_del_PP = PrepNP into_Prep (DetCN the_Det (AdjCN (PositA follow_A) (UseN part_N))) ; -- Eng
oper follow_A = mkA "follow" ; -- Eng
lin into_multiple_in_multipla_PP = PrepNP into_Prep (MassNP (UseN multiple_N)) ; -- Eng
lin next_the_course_därefter_PP = PrepNP next_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin on_a_write_exam_utifrån_a_skriftlig_tentamen_PP = PrepNP on_Prep (DetCN a_Det (AdjCN (PositA write_A) (UseN exam_N))) ; -- Eng
oper write_A = mkA "write" ; -- Eng
lin on_a_chip_on_a_chip_PP = PrepNP on_Prep (DetCN a_Det (UseN chip_N)) ; -- Eng
lin on_the_result_on_the_write_exam_on_resultat_possess_den_skriftlig_tentamen_PP = PrepNP on_Prep (DetCN the_Det (PrepCN (UseN result_N) (PrepNP on_Prep (DetCN the_Det (AdjCN (PositA write_A) (UseN exam_N)))))) ; -- Eng
oper write_A = mkA "write" ; -- Eng
lin on_the_model_on_modell_PP = PrepNP on_Prep (DetCN the_Det (UseN model_N)) ; -- Eng
lin on_performance_on_prestanda_PP = PrepNP on_Prep (MassNP (UseN performance_N)) ; -- Eng
lin on_technology_on_teknik_PP = PrepNP on_Prep (MassNP (UseN technology_N)) ; -- Eng
lin over_the_last_several_decade_in_själv_verk_PP = PrepNP over_Prep (DetCN the_Det (AdjCN (PositA last_A) (AdjCN (PositA several_A) (UseN decade_N)))) ; -- Eng
oper several_A = mkA "several" ; -- Eng
lin possess_a_embed_system_in_a_inbygg_system_PP = PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA embed_A) (UseN system_N))) ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin possess_a_operat_system_for_kommande_kurs_PP = PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA operat_A) (UseN system_N))) ; -- Eng
oper operat_A = mkA "operat" ; -- Eng
lin possess_a_task_for_a_process_PP = PrepNP possess_Prep (DetCN a_Det (UseN task_N)) ; -- Eng
lin possess_the_whole_system_in_hel_system_PP = PrepNP possess_Prep (DetCN the_Det (AdjCN (PositA whole_A) (UseN system_N))) ; -- Eng
lin possess_the_course_som_praktik_PP = PrepNP possess_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin possess_the_course_Kurs_PP = PrepNP possess_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin possess_the_course_kurs_PP = PrepNP possess_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin possess_the_course_programspråk_PP = PrepNP possess_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin possess_the_course_fullgjord_PP = PrepNP possess_Prep (DetCN the_Det (UseN course_N)) ; -- Eng
lin possess_the_discussion_possess_diskussion_PP = PrepNP possess_Prep (DetCN the_Det (UseN discussion_N)) ; -- Eng
lin possess_the_lab_pedagogisk_PP = PrepNP possess_Prep (DetCN the_Det (UseN lab_N)) ; -- Eng
lin possess_the_program_possess_program_PP = PrepNP possess_Prep (DetCN the_Det (UseN program_N)) ; -- Eng
lin possess_the_system_system_PP = PrepNP possess_Prep (DetCN the_Det (UseN system_N)) ; -- Eng
lin possess_this_cross_disciplinary_area_for_denna_tvärvetenskaplig_område_PP = PrepNP possess_Prep (DetCN this_Det (AdjCN (PositA cross_A) (AdjCN (PositA disciplinary_A) (UseN area_N)))) ; -- Eng
lin possess_this_kind_possess_denna_slag_PP = PrepNP possess_Prep (DetCN this_Det (UseN kind_N)) ; -- Eng
lin possess_this_problem_hos_sådan_problem_PP = PrepNP possess_Prep (DetCN this_Det (UseN problem_N)) ; -- Eng
lin possess_different_system_for_olik_systemkonfiguration_PP = PrepNP possess_Prep (MassNP (AdjCN (PositA different_A) (UseN system_N))) ; -- Eng
lin possess_parallel_program_possess_parallell_programsystem_PP = PrepNP possess_Prep (MassNP (AdjCN (PositA parallel_A) (UseN program_N))) ; -- Eng
lin possess_code_quality_begrepp_PP = PrepNP possess_Prep (MassNP (UseN (CompoundN code_N quality_N))) ; -- Eng
lin possess_english_in_engelska_PP = PrepNP possess_Prep (MassNP (UseN english_N)) ; -- Eng
oper english_N = mkN "english" ; -- Eng
lin possess_reference_possess_datorteknik_PP = PrepNP possess_Prep (MassNP (UseN reference_N)) ; -- Eng
lin possess_different_architectural_component_for_olik_arkitekturell_komponent_PP = PrepNP possess_Prep (PluralNP (AdjCN (PositA different_A) (AdjCN (PositA architectural_A) (UseN component_N)))) ; -- Eng
lin possess_modern_operat_system_in_modern_operativsystem_PP = PrepNP possess_Prep (PluralNP (AdjCN (PositA modern_A) (AdjCN (PositA operat_A) (UseN system_N)))) ; -- Eng
oper operat_A = mkA "operat" ; -- Eng
lin possess_operat_system_possess_operativsystem_PP = PrepNP possess_Prep (PluralNP (AdjCN (PositA operat_A) (UseN system_N))) ; -- Eng
oper operat_A = mkA "operat" ; -- Eng
lin possess_parallel_architecture_a_rad_PP = PrepNP possess_Prep (PluralNP (AdjCN (PositA parallel_A) (UseN architecture_N))) ; -- Eng
lin possess_parallel_program_possess_parallell_program_PP = PrepNP possess_Prep (PluralNP (AdjCN (PositA parallel_A) (UseN program_N))) ; -- Eng
lin possess_certain_component_in_the_system_for_viss_komponent_PP = PrepNP possess_Prep (PluralNP (PrepCN (AdjCN (PositA certain_A) (UseN component_N)) (PrepNP in_Prep (DetCN the_Det (UseN system_N))))) ; -- Eng
lin possess_parallel_program_for_address_space_for_distribuerad_adressutrymme_PP = PrepNP possess_Prep (PluralNP (PrepCN (AdjCN (PositA parallel_A) (UseN program_N)) (PrepNP for_Prep (MassNP (UseN (CompoundN address_N space_N)))))) ; -- Eng
lin possess_algorithm_possess_algoritmer_PP = PrepNP possess_Prep (PluralNP (UseN algorithm_N)) ; -- Eng
lin possess_application_inom_data_PP = PrepNP possess_Prep (PluralNP (UseN application_N)) ; -- Eng
lin possess_component_possess_mjukvarukomponent_PP = PrepNP possess_Prep (PluralNP (UseN component_N)) ; -- Eng
lin possess_computer_dator_PP = PrepNP possess_Prep (PluralNP (UseN computer_N)) ; -- Eng
lin possess_feature_possess_särdrag_PP = PrepNP possess_Prep (PluralNP (UseN feature_N)) ; -- Eng
lin possess_lab_possess_laboration_PP = PrepNP possess_Prep (PluralNP (UseN lab_N)) ; -- Eng
lin possess_program_possess_program_PP = PrepNP possess_Prep (PluralNP (UseN program_N)) ; -- Eng
lin possess_protocol_possess_protokoll_PP = PrepNP possess_Prep (PluralNP (UseN protocol_N)) ; -- Eng
lin possess_task_bakom_systemarkitektur_PP = PrepNP possess_Prep (PluralNP (UseN task_N)) ; -- Eng
lin possess_task_for_a_mängd_PP = PrepNP possess_Prep (PluralNP (UseN task_N)) ; -- Eng
lin possess_topic_possess_ämne_PP = PrepNP possess_Prep (PluralNP (UseN topic_N)) ; -- Eng
lin possess_AI_possess_AI_PP = PrepNP possess_Prep (UsePN AI_PN) ; -- Eng
oper AI_PN = mkPN "AI" ; -- Eng
lin to_a_course_a_kurs_PP = PrepNP to_Prep (DetCN a_Det (UseN course_N)) ; -- Eng
lin to_data_science_Introduktion_to_data_PP = PrepNP to_Prep (MassNP (UseN (CompoundN data_N science_N))) ; -- Eng
lin to_different_audience_to_olik_målgrupp_PP = PrepNP to_Prep (PluralNP (AdjCN (PositA different_A) (UseN audience_N))) ; -- Eng
lin to_function_to_funktion_PP = PrepNP to_Prep (PluralNP (UseN function_N)) ; -- Eng
lin with_memory_hierarchie_om_minneshierarki_PP = PrepNP with_Prep (PluralNP (UseN (CompoundN memory_N hierarchie_N))) ; -- Eng
oper hierarchie_N = mkN "hierarchie" ; -- Eng
lin Statistical_Statistisk_A = Statistical_A ; -- Eng
oper Statistical_A = mkA "Statistical" ; -- Eng
lin Statistical_statistisk_A = Statistical_A ; -- Eng
oper Statistical_A = mkA "Statistical" ; -- Eng
lin Summary_om_kurs_kort_Adv = Summary_Adv ; -- Eng
oper Summary_Adv = mkAdv "Summary" ; -- Eng
lin Syntactic_syntaktisk_A = Syntactic_A ; -- Eng
oper Syntactic_A = mkA "Syntactic" ; -- Eng
lin area_networks_Lan_protokoll_to_medium_for_access_CN = UseN (CompoundN (CompoundN area_N networks_N) Lan_N) ; -- Eng
oper networks_N = mkN "networks" ; -- Eng
oper Lan_N = mkN "Lan" ; -- Eng
lin example_classification_task_klassificeringsuppgift_CN = UseN (CompoundN (CompoundN example_N classification_N) task_N) ; -- Eng
lin message_pass_interface_ligga_CN = UseN (CompoundN (CompoundN message_N pass_N) interface_N) ; -- Eng
lin research_project_assignment_projektuppgift_CN = UseN (CompoundN (CompoundN research_N project_N) assignment_N) ; -- Eng
lin analysis_performance_tool_verktyg_for_prestandaanalys_CN = UseN (CompoundN analysis_N (CompoundN performance_N tool_N)) ; -- Eng
lin analysis_method_analysmetod_CN = UseN (CompoundN analysis_N method_N) ; -- Eng
lin application_area_område_CN = UseN (CompoundN application_N area_N) ; -- Eng
lin case_study_Fallstudi_CN = UseN (CompoundN case_N study_N) ; -- Eng
lin code_quality_kodkvalitet_CN = UseN (CompoundN code_N quality_N) ; -- Eng
lin computer_Architecture_Computer_Architecture_CN = UseN (CompoundN computer_N Architecture_N) ; -- Eng
oper Architecture_N = mkN "Architecture" ; -- Eng
lin computer_Architecture_Datorarkitektur_CN = UseN (CompoundN computer_N Architecture_N) ; -- Eng
oper Architecture_N = mkN "Architecture" ; -- Eng
lin computer_communication_Datakommunikation_CN = UseN (CompoundN computer_N communication_N) ; -- Eng
lin computer_organization_Datorsystemteknik_CN = UseN (CompoundN computer_N organization_N) ; -- Eng
lin computer_science_datavetenskap_CN = UseN (CompoundN computer_N science_N) ; -- Eng
lin concepts_include_inkludera_CN = UseN (CompoundN concepts_N include_N) ; -- Eng
oper concepts_N = mkN "concepts" ; -- Eng
oper include_N = mkN "include" ; -- Eng
lin course_cover_täcka_CN = UseN (CompoundN course_N cover_N) ; -- Eng
lin cover_part_trend_omfatta_CN = UseN (CompoundN cover_N (CompoundN part_N trend_N)) ; -- Eng
lin data_science_data_science_CN = UseN (CompoundN data_N science_N) ; -- Eng
lin data_science_data_science_CN = UseN (CompoundN data_N science_N) ; -- Eng
lin data_structure_Datastrukturer_CN = UseN (CompoundN data_N structure_N) ; -- Eng
lin data_structure_datastruktur_CN = UseN (CompoundN data_N structure_N) ; -- Eng
lin entry_requirement_behörighet_CN = UseN (CompoundN entry_N requirement_N) ; -- Eng
lin evaluation_measurement_evalueringsmå_CN = UseN (CompoundN evaluation_N measurement_N) ; -- Eng
lin expert_system_teckenigenkänning_CN = UseN (CompoundN expert_N system_N) ; -- Eng
lin homework_assignment_inlämningsuppgift_CN = UseN (CompoundN homework_N assignment_N) ; -- Eng
lin implementation_detail_korrekthet_CN = UseN (CompoundN implementation_N detail_N) ; -- Eng
lin key_component_Datorer_CN = UseN (CompoundN key_N component_N) ; -- Eng
lin key_component_komponent_CN = UseN (CompoundN key_N component_N) ; -- Eng
lin lab_exercise_laboration_CN = UseN (CompoundN lab_N exercise_N) ; -- Eng
lin learn_component_maskininlärningskomponent_CN = UseN (CompoundN learn_N component_N) ; -- Eng
oper learn_N = mkN "learn" ; -- Eng
lin lecture_start_börja_CN = UseN (CompoundN lecture_N start_N) ; -- Eng
lin literature_list_se_CN = UseN (CompoundN literature_N list_N) ; -- Eng
lin machine_learning_maskininlärning_CN = UseN (CompoundN machine_N learning_N) ; -- Eng
lin master_concept_redogöra_CN = UseN (CompoundN master_N concept_N) ; -- Eng
lin memory_hierarchie_minneshierarki_CN = UseN (CompoundN memory_N hierarchie_N) ; -- Eng
oper hierarchie_N = mkN "hierarchie" ; -- Eng
lin micro_architecture_olik_metod_CN = UseN (CompoundN micro_N architecture_N) ; -- Eng
oper micro_N = mkN "micro" ; -- Eng
lin optimization_problem_optimeringsproblem_CN = UseN (CompoundN optimization_N problem_N) ; -- Eng
lin optimization_problem_identifiera_CN = UseN (CompoundN optimization_N problem_N) ; -- Eng
lin part_cover_del_CN = UseN (CompoundN part_N cover_N) ; -- Eng
lin performance_bottleneck_den_CN = UseN (CompoundN performance_N bottleneck_N) ; -- Eng
lin performance_counter_for_monitorering_possess_prestanda_CN = UseN (CompoundN performance_N counter_N) ; -- Eng
lin probability_theory_grundläggande_sannolikhetsteori_CN = UseN (CompoundN probability_N theory_N) ; -- Eng
lin program_code_programmeringsspråk_CN = UseN (CompoundN program_N code_N) ; -- Eng
lin program_library_programbibliotek_CN = UseN (CompoundN program_N library_N) ; -- Eng
lin programm_assignment_programmeringsuppgift_CN = UseN (CompoundN programm_N assignment_N) ; -- Eng
oper programm_N = mkN "programm" ; -- Eng
lin programme_languag_programspråk_CN = UseN (CompoundN programme_N languag_N) ; -- Eng
oper languag_N = mkN "languag" ; -- Eng
lin programming_language_programmeringsspråk_CN = UseN (CompoundN programming_N language_N) ; -- Eng
lin research_literature_forskningslitteratur_CN = UseN (CompoundN research_N literature_N) ; -- Eng
lin section_cover_behandla_CN = UseN (CompoundN section_N cover_N) ; -- Eng
lin software_resource_mjukvaruresurs_CN = UseN (CompoundN software_N resource_N) ; -- Eng
lin sound_basis_sund_grund_CN = UseN (CompoundN sound_N basis_N) ; -- Eng
lin sound_knowledge_kunskap_CN = UseN (CompoundN sound_N knowledge_N) ; -- Eng
lin source_code_källkod_CN = UseN (CompoundN source_N code_N) ; -- Eng
lin structure_program_strukturera_CN = UseN (CompoundN structure_N program_N) ; -- Eng
lin system_level_systemnivå_CN = UseN (CompoundN system_N level_N) ; -- Eng
lin trade_magazine_facktidskrift_CN = UseN (CompoundN trade_N magazine_N) ; -- Eng
lin use_cas_typisk_användningsfall_hos_denna_algoritmer_CN = UseN (CompoundN use_N cas_N) ; -- Eng
oper cas_N = mkN "cas" ; -- Eng
lin Algorithm_Algoritmer_CN = UseN Algorithm_N ; -- Eng
oper Algorithm_N = mkN "Algorithm" ; -- Eng
lin Article_Artikel_CN = UseN Article_N ; -- Eng
oper Article_N = mkN "Article" ; -- Eng
lin Computability_Beräkningsbarhet_CN = UseN Computability_N ; -- Eng
oper Computability_N = mkN "Computability" ; -- Eng
lin Datatype_datatyp_CN = UseN Datatype_N ; -- Eng
oper Datatype_N = mkN "Datatype" ; -- Eng
lin Detection_Upptäcka_CN = UseN Detection_N ; -- Eng
oper Detection_N = mkN "Detection" ; -- Eng
lin Eligibility_Behörighet_CN = UseN Eligibility_N ; -- Eng
oper Eligibility_N = mkN "Eligibility" ; -- Eng
lin Ethernet_switcha_CN = UseN Ethernet_N ; -- Eng
oper Ethernet_N = mkN "Ethernet" ; -- Eng
lin Facility_Lokal_CN = UseN Facility_N ; -- Eng
oper Facility_N = mkN "Facility" ; -- Eng
lin Gpus_accelerator_CN = UseN Gpus_N ; -- Eng
oper Gpus_N = mkN "Gpus" ; -- Eng
lin Inference_Slutledning_CN = UseN Inference_N ; -- Eng
oper Inference_N = mkN "Inference" ; -- Eng
lin Inference_slutledning_CN = UseN Inference_N ; -- Eng
oper Inference_N = mkN "Inference" ; -- Eng
lin Judgement_Värderingsförmåga_CN = UseN Judgement_N ; -- Eng
oper Judgement_N = mkN "Judgement" ; -- Eng
lin Judgement_bedömning_CN = UseN Judgement_N ; -- Eng
oper Judgement_N = mkN "Judgement" ; -- Eng
lin Lecture_Föreläsning_CN = UseN Lecture_N ; -- Eng
oper Lecture_N = mkN "Lecture" ; -- Eng
lin Lecture_bedriva_CN = UseN Lecture_N ; -- Eng
oper Lecture_N = mkN "Lecture" ; -- Eng
lin Pinto_Pintos_CN = UseN Pinto_N ; -- Eng
oper Pinto_N = mkN "Pinto" ; -- Eng
lin Pragmatics_pragmatik_CN = UseN Pragmatics_N ; -- Eng
oper Pragmatics_N = mkN "Pragmatics" ; -- Eng
lin Prerequisite_Behörighet_CN = UseN Prerequisite_N ; -- Eng
oper Prerequisite_N = mkN "Prerequisite" ; -- Eng
lin Publisher_Claypool_CN = UseN Publisher_N ; -- Eng
oper Publisher_N = mkN "Publisher" ; -- Eng
lin Science_vetenskap_CN = UseN Science_N ; -- Eng
oper Science_N = mkN "Science" ; -- Eng
lin Science_vetenskaper_CN = UseN Science_N ; -- Eng
oper Science_N = mkN "Science" ; -- Eng
lin Själander_Själand_CN = UseN Själander_N ; -- Eng
oper Själander_N = mkN "Själander" ; -- Eng
lin Stefanos_Martonosi_CN = UseN Stefanos_N ; -- Eng
oper Stefanos_N = mkN "Stefanos" ; -- Eng
lin Student_genomföra_fallstudi_CN = UseN Student_N ; -- Eng
oper Student_N = mkN "Student" ; -- Eng
lin Student_Student_CN = UseN Student_N ; -- Eng
oper Student_N = mkN "Student" ; -- Eng
lin Topics_exempel_CN = UseN Topics_N ; -- Eng
oper Topics_N = mkN "Topics" ; -- Eng
lin Vlan_Ethernet_CN = UseN Vlan_N ; -- Eng
oper Vlan_N = mkN "Vlan" ; -- Eng
lin abstraction_possess_abstraktionsmekanismer_CN = UseN abstraction_N ; -- Eng
lin act_handla_CN = UseN act_N ; -- Eng
lin addition_kurs_CN = UseN addition_N ; -- Eng
lin advantage_fördel_CN = UseN advantage_N ; -- Eng
lin ae_synnerhet_CN = UseN ae_N ; -- Eng
oper ae_N = mkN "ae" ; -- Eng
lin agent_agent_CN = UseN agent_N ; -- Eng
lin aim_Syfte_CN = UseN aim_N ; -- Eng
lin algorithm_algoritm_CN = UseN algorithm_N ; -- Eng
lin algorithm_algoritmer_CN = UseN algorithm_N ; -- Eng
lin analysis_analys_CN = UseN analysis_N ; -- Eng
lin analysis_prestandaanalys_CN = UseN analysis_N ; -- Eng
lin analysis_schema_CN = UseN analysis_N ; -- Eng
lin analysis_presentera_CN = UseN analysis_N ; -- Eng
lin annotation_korpora_CN = UseN annotation_N ; -- Eng
lin answer_svar_CN = UseN answer_N ; -- Eng
lin applicant_följande_kunskapsnivå_in_engelska_CN = UseN applicant_N ; -- Eng
lin application_data_CN = UseN application_N ; -- Eng
lin application_fokus_CN = UseN application_N ; -- Eng
lin application_programmeringsmetod_CN = UseN application_N ; -- Eng
lin application_tillämpning_CN = UseN application_N ; -- Eng
lin application_ge_CN = UseN application_N ; -- Eng
lin approach_Inlärning_CN = UseN approach_N ; -- Eng
lin approach_Uppdelning_CN = UseN approach_N ; -- Eng
lin approach_programmering_CN = UseN approach_N ; -- Eng
lin approach_förhållningssätta_CN = UseN approach_N ; -- Eng
lin approach_tillvägagångssätt_CN = UseN approach_N ; -- Eng
lin approximation_approximation_CN = UseN approximation_N ; -- Eng
lin architecture_arkitektur_CN = UseN architecture_N ; -- Eng
lin architecture_rad_CN = UseN architecture_N ; -- Eng
lin area_del_CN = UseN area_N ; -- Eng
lin area_område_CN = UseN area_N ; -- Eng
lin arise_planering_CN = UseN arise_N ; -- Eng
oper arise_N = mkN "arise" ; -- Eng
lin assessment_analys_CN = UseN assessment_N ; -- Eng
lin audience_målgrupp_CN = UseN audience_N ; -- Eng
lin basics_Grund_CN = UseN basics_N ; -- Eng
lin bottleneck_flaskhals_CN = UseN bottleneck_N ; -- Eng
lin bound_gräns_CN = UseN bound_N ; -- Eng
lin bridge_Wifi_CN = UseN bridge_N ; -- Eng
lin cach_cach_CN = UseN cach_N ; -- Eng
oper cach_N = mkN "cach" ; -- Eng
lin cach_hierarki_CN = UseN cach_N ; -- Eng
oper cach_N = mkN "cach" ; -- Eng
lin carbon_koldioxidutsläpp_CN = UseN carbon_N ; -- Eng
lin cas_fall_CN = UseN cas_N ; -- Eng
oper cas_N = mkN "cas" ; -- Eng
lin chip_chip_CN = UseN chip_N ; -- Eng
lin circuit_energieffektivitetsaspekt_CN = UseN circuit_N ; -- Eng
lin class_klass_CN = UseN class_N ; -- Eng
lin class_modul_CN = UseN class_N ; -- Eng
lin classification_regression_CN = UseN classification_N ; -- Eng
lin classification_textklassificering_CN = UseN classification_N ; -- Eng
lin code_kod_CN = UseN code_N ; -- Eng
lin communication_kommunikation_CN = UseN communication_N ; -- Eng
lin competence_Färdighet_CN = UseN competence_N ; -- Eng
lin competence_Kompet_CN = UseN competence_N ; -- Eng
lin compiler_maskin_CN = UseN compiler_N ; -- Eng
lin completion_kurs_CN = UseN completion_N ; -- Eng
lin component_komponent_CN = UseN component_N ; -- Eng
lin component_mjukvarukomponent_CN = UseN component_N ; -- Eng
lin computer_a_data_CN = UseN computer_N ; -- Eng
lin computer_modell_CN = UseN computer_N ; -- Eng
lin computer_minne_CN = UseN computer_N ; -- Eng
lin concept_beräkning_CN = UseN concept_N ; -- Eng
lin concepts_denna_begrepp_CN = UseN concepts_N ; -- Eng
oper concepts_N = mkN "concepts" ; -- Eng
lin concepts_begrepp_CN = UseN concepts_N ; -- Eng
oper concepts_N = mkN "concepts" ; -- Eng
lin conclusion_denna_uppgift_CN = UseN conclusion_N ; -- Eng
lin configuration_simuleringsverktyg_CN = UseN configuration_N ; -- Eng
lin conjunction_samband_CN = UseN conjunction_N ; -- Eng
lin consumption_energiförbrukning_CN = UseN consumption_N ; -- Eng
lin content_innehåll_CN = UseN content_N ; -- Eng
lin context_kontext_CN = UseN context_N ; -- Eng
lin context_sammanhang_CN = UseN context_N ; -- Eng
lin correction_rätta_CN = UseN correction_N ; -- Eng
lin correctness_täckning_CN = UseN correctness_N ; -- Eng
lin counsellor_studentlunchrum_CN = UseN counsellor_N ; -- Eng
lin cours_kurs_CN = UseN cours_N ; -- Eng
oper cours_N = mkN "cours" ; -- Eng
lin course_Kurs_CN = UseN course_N ; -- Eng
lin course_diskussion_CN = UseN course_N ; -- Eng
lin course_fallstudi_CN = UseN course_N ; -- Eng
lin course_gång_CN = UseN course_N ; -- Eng
lin course_kurs_CN = UseN course_N ; -- Eng
lin course_praktik_CN = UseN course_N ; -- Eng
lin course_programmering_CN = UseN course_N ; -- Eng
lin cycle_behörighet_CN = UseN cycle_N ; -- Eng
lin data_to_Dat_CN = UseN data_N ; -- Eng
lin data_to_data_CN = UseN data_N ; -- Eng
lin data_Data_CN = UseN data_N ; -- Eng
lin data_data_CN = UseN data_N ; -- Eng
lin data_mining_CN = UseN data_N ; -- Eng
lin data_uppgift_CN = UseN data_N ; -- Eng
lin database_databas_CN = UseN database_N ; -- Eng
lin department_institution_CN = UseN department_N ; -- Eng
lin depth_djup_CN = UseN depth_N ; -- Eng
lin design_algoritmdesign_CN = UseN design_N ; -- Eng
lin design_design_CN = UseN design_N ; -- Eng
lin design_konstruktion_CN = UseN design_N ; -- Eng
lin development_program_CN = UseN development_N ; -- Eng
lin development_utveckling_CN = UseN development_N ; -- Eng
lin device_enhet_CN = UseN device_N ; -- Eng
lin discussion_diskussion_CN = UseN discussion_N ; -- Eng
lin discussion_innehålla_CN = UseN discussion_N ; -- Eng
lin duality_dualitet_CN = UseN duality_N ; -- Eng
lin education_undervisning_CN = UseN education_N ; -- Eng
lin efficiency_flaskhals_CN = UseN efficiency_N ; -- Eng
lin element_moment_CN = UseN element_N ; -- Eng
lin english_engelska_CN = UseN english_N ; -- Eng
oper english_N = mkN "english" ; -- Eng
lin environment_miljö_CN = UseN environment_N ; -- Eng
lin ethics_etik_CN = UseN ethics_N ; -- Eng
lin ethics_etisk_CN = UseN ethics_N ; -- Eng
lin exam_tentamen_CN = UseN exam_N ; -- Eng
lin examination_a_tentamen_CN = UseN examination_N ; -- Eng
lin example_exempel_CN = UseN example_N ; -- Eng
lin example_maskininlärningsmetod_CN = UseN example_N ; -- Eng
lin example_såsom_CN = UseN example_N ; -- Eng
lin examples_exempel_CN = UseN examples_N ; -- Eng
oper examples_N = mkN "examples" ; -- Eng
lin examples_tillämpning_CN = UseN examples_N ; -- Eng
oper examples_N = mkN "examples" ; -- Eng
lin exbe_salstentamen_CN = UseN exbe_N ; -- Eng
oper exbe_N = mkN "exbe" ; -- Eng
lin execution_exekverande_CN = UseN execution_N ; -- Eng
lin exercise_Övning_CN = UseN exercise_N ; -- Eng
lin expression_uttryck_CN = UseN expression_N ; -- Eng
lin fact_verk_CN = UseN fact_N ; -- Eng
lin feature_possess_särdrag_CN = UseN feature_N ; -- Eng
lin feature_särdrag_CN = UseN feature_N ; -- Eng
lin field_område_CN = UseN field_N ; -- Eng
lin flexibility_system_CN = UseN flexibility_N ; -- Eng
lin focus_fokus_CN = UseN focus_N ; -- Eng
lin focus_all_CN = UseN focus_N ; -- Eng
lin form_former_CN = UseN form_N ; -- Eng
lin foundation_gå_CN = UseN foundation_N ; -- Eng
lin framework_ramverk_CN = UseN framework_N ; -- Eng
lin function_funktion_CN = UseN function_N ; -- Eng
lin function_återanvändbara_CN = UseN function_N ; -- Eng
lin functionality_funktion_CN = UseN functionality_N ; -- Eng
lin future_datorsystem_CN = UseN future_N ; -- Eng
lin geometry_geometri_CN = UseN geometry_N ; -- Eng
lin goal_mål_CN = UseN goal_N ; -- Eng
lin grade_betyg_CN = UseN grade_N ; -- Eng
lin grade_uppgift_CN = UseN grade_N ; -- Eng
lin grammar_grammatikformalismer_CN = UseN grammar_N ; -- Eng
lin group_grupp_CN = UseN group_N ; -- Eng
lin hardware_hård_CN = UseN hardware_N ; -- Eng
lin hardware_hårdvara_CN = UseN hardware_N ; -- Eng
lin heuristics_heuristik_CN = UseN heuristics_N ; -- Eng
lin heuristics_optimering_CN = UseN heuristics_N ; -- Eng
lin hypothesis_hypote_CN = UseN hypothesis_N ; -- Eng
lin identification_identifiering_CN = UseN identification_N ; -- Eng
lin impact_konsekvens_CN = UseN impact_N ; -- Eng
lin impact_samhällspåverkan_CN = UseN impact_N ; -- Eng
lin implementation_Implementation_CN = UseN implementation_N ; -- Eng
lin implementation_Implementering_CN = UseN implementation_N ; -- Eng
lin implementation_implementation_CN = UseN implementation_N ; -- Eng
lin implementation_implementering_CN = UseN implementation_N ; -- Eng
lin importance_Vikt_CN = UseN importance_N ; -- Eng
lin improvement_förbättring_CN = UseN improvement_N ; -- Eng
lin industry_industri_CN = UseN industry_N ; -- Eng
lin inference_slutledning_CN = UseN inference_N ; -- Eng
lin information_information_CN = UseN information_N ; -- Eng
lin intelligence_Intellig_CN = UseN intelligence_N ; -- Eng
lin interaction_interaktion_CN = UseN interaction_N ; -- Eng
lin introduction_Introduktion_CN = UseN introduction_N ; -- Eng
lin introduction_inledning_CN = UseN introduction_N ; -- Eng
lin introduction_introduktion_CN = UseN introduction_N ; -- Eng
lin introduction_science_CN = UseN introduction_N ; -- Eng
lin judge_värdera_CN = UseN judge_N ; -- Eng
lin kind_slag_CN = UseN kind_N ; -- Eng
lin knowledge_Kunskap_CN = UseN knowledge_N ; -- Eng
lin knowledge_kunskap_CN = UseN knowledge_N ; -- Eng
lin lab_laboration_CN = UseN lab_N ; -- Eng
lin language_någon_enkel_rutin_in_a_operativsystem_in_c_CN = UseN language_N ; -- Eng
lin language_stöd_CN = UseN language_N ; -- Eng
lin language_markovmodell_CN = UseN language_N ; -- Eng
lin layer_lager_CN = UseN layer_N ; -- Eng
lin lecture_antal_CN = UseN lecture_N ; -- Eng
lin lecture_föreläsning_CN = UseN lecture_N ; -- Eng
lin level_grundnivå_CN = UseN level_N ; -- Eng
lin level_programmering_CN = UseN level_N ; -- Eng
lin library_använda_CN = UseN library_N ; -- Eng
lin likelihood_likelihood_CN = UseN likelihood_N ; -- Eng
lin limit_gräns_CN = UseN limit_N ; -- Eng
lin limit_program_CN = UseN limit_N ; -- Eng
lin limitation_begränsning_CN = UseN limitation_N ; -- Eng
lin linear_optimering_CN = UseN linear_N ; -- Eng
oper linear_N = mkN "linear" ; -- Eng
lin linguistics_lingvistik_CN = UseN linguistics_N ; -- Eng
lin literature_litteratur_CN = UseN literature_N ; -- Eng
lin literature_metod_CN = UseN literature_N ; -- Eng
lin literature_litteratur_CN = UseN literature_N ; -- Eng
lin logic_logik_CN = UseN logic_N ; -- Eng
lin machine_maskininlärning_CN = UseN machine_N ; -- Eng
lin management_hantering_CN = UseN management_N ; -- Eng
lin manifold_mångfald_CN = UseN manifold_N ; -- Eng
lin material_tentamen_CN = UseN material_N ; -- Eng
lin mathematics_begrepp_CN = UseN mathematics_N ; -- Eng
lin mathematics_matematik_CN = UseN mathematics_N ; -- Eng
lin mechanism_mekanism_CN = UseN mechanism_N ; -- Eng
lin method_litteratur_CN = UseN method_N ; -- Eng
lin method_metod_CN = UseN method_N ; -- Eng
lin method_problem_CN = UseN method_N ; -- Eng
lin method_ange_CN = UseN method_N ; -- Eng
lin methodology_metodik_CN = UseN methodology_N ; -- Eng
lin microprocessor_mikroprocessa_CN = UseN microprocessor_N ; -- Eng
lin miss_in_minneshierarkin_CN = UseN miss_N ; -- Eng
lin model_modell_CN = UseN model_N ; -- Eng
lin model_modells_CN = UseN model_N ; -- Eng
lin modeling_fokus_CN = UseN modeling_N ; -- Eng
lin module_modul_CN = UseN module_N ; -- Eng
lin module_innefatta_CN = UseN module_N ; -- Eng
lin monad_monad_CN = UseN monad_N ; -- Eng
lin monitor_monitor_CN = UseN monitor_N ; -- Eng
lin month_månad_CN = UseN month_N ; -- Eng
lin multiple_multipla_CN = UseN multiple_N ; -- Eng
lin need_behov_CN = UseN need_N ; -- Eng
lin network_nätverk_CN = UseN network_N ; -- Eng
lin network_nätverkskontrolel_CN = UseN network_N ; -- Eng
lin notion_kodkvalitet_CN = UseN notion_N ; -- Eng
lin number_programmeringsuppgift_CN = UseN number_N ; -- Eng
lin object_datastruktur_CN = UseN object_N ; -- Eng
lin office_läsesal_CN = UseN office_N ; -- Eng
lin optimization_optimering_CN = UseN optimization_N ; -- Eng
lin optimization_optimeringsproblem_CN = UseN optimization_N ; -- Eng
lin order_möjliggöra_CN = UseN order_N ; -- Eng
lin organisation_organisation_CN = UseN organisation_N ; -- Eng
lin paradigm_paradigm_CN = UseN paradigm_N ; -- Eng
lin parallel_pipelining_CN = UseN parallel_N ; -- Eng
lin part_del_CN = UseN part_N ; -- Eng
lin part_system_CN = UseN part_N ; -- Eng
lin participant_deltagare_CN = UseN participant_N ; -- Eng
lin performance_for_prestandaanalys_CN = UseN performance_N ; -- Eng
lin performance_possess_prestanda_CN = UseN performance_N ; -- Eng
lin performance_prestanda_CN = UseN performance_N ; -- Eng
lin periodicity_användbarhetsskäl_CN = UseN periodicity_N ; -- Eng
oper periodicity_N = mkN "periodicity" ; -- Eng
lin platform_plattform_CN = UseN platform_N ; -- Eng
lin polytope_egenskap_CN = UseN polytope_N ; -- Eng
oper polytope_N = mkN "polytope" ; -- Eng
lin possibility_fel_CN = UseN possibility_N ; -- Eng
lin practice_praxis_CN = UseN practice_N ; -- Eng
lin practice_finnas_CN = UseN practice_N ; -- Eng
lin precision_korrekthet_CN = UseN precision_N ; -- Eng
lin premise_lokal_CN = UseN premise_N ; -- Eng
lin prerequisite_förkunskap_CN = UseN prerequisite_N ; -- Eng
lin presentation_genomgång_CN = UseN presentation_N ; -- Eng
lin principle_princip_CN = UseN principle_N ; -- Eng
lin problem_problem_CN = UseN problem_N ; -- Eng
lin problem_uppstå_CN = UseN problem_N ; -- Eng
lin proceed_fortsätta_CN = UseN proceed_N ; -- Eng
oper proceed_N = mkN "proceed" ; -- Eng
lin program_adressutrymme_CN = UseN program_N ; -- Eng
lin program_program_CN = UseN program_N ; -- Eng
lin program_programsystem_CN = UseN program_N ; -- Eng
lin programme_program_CN = UseN programme_N ; -- Eng
lin programme_programmering_CN = UseN programme_N ; -- Eng
lin programmer_programmerare_CN = UseN programmer_N ; -- Eng
lin programming_princip_CN = UseN programming_N ; -- Eng
lin programming_programmering_CN = UseN programming_N ; -- Eng
lin property_egenskap_CN = UseN property_N ; -- Eng
lin protocol_protokoll_CN = UseN protocol_N ; -- Eng
lin purpose_Syfte_CN = UseN purpose_N ; -- Eng
lin purpose_kurs_CN = UseN purpose_N ; -- Eng
lin purpose_syfte_CN = UseN purpose_N ; -- Eng
lin question_fråga_CN = UseN question_N ; -- Eng
lin realisation_implementering_CN = UseN realisation_N ; -- Eng
oper realisation_N = mkN "realisation" ; -- Eng
lin reason_skäl_CN = UseN reason_N ; -- Eng
lin reasons_säkerhet_CN = UseN reasons_N ; -- Eng
oper reasons_N = mkN "reasons" ; -- Eng
lin reference_datorteknik_CN = UseN reference_N ; -- Eng
lin relation_Förhållande_CN = UseN relation_N ; -- Eng
lin relation_relation_CN = UseN relation_N ; -- Eng
lin reliability_pålitlig_CN = UseN reliability_N ; -- Eng
lin report_rapport_CN = UseN report_N ; -- Eng
lin representation_representation_CN = UseN representation_N ; -- Eng
lin requirement_Förkunskapskrav_CN = UseN requirement_N ; -- Eng
lin requirement_omvärld_CN = UseN requirement_N ; -- Eng
lin requirement_formuler_CN = UseN requirement_N ; -- Eng
lin requirement_kräva_CN = UseN requirement_N ; -- Eng
lin research_forskning_CN = UseN research_N ; -- Eng
lin result_resultat_CN = UseN result_N ; -- Eng
lin role_roll_CN = UseN role_N ; -- Eng
lin role_fördatatstruktur_CN = UseN role_N ; -- Eng
lin room_finnas_CN = UseN room_N ; -- Eng
lin s_realtidskärna_CN = UseN s_N ; -- Eng
oper s_N = mkN "s" ; -- Eng
lin safety_säker_CN = UseN safety_N ; -- Eng
lin scenario_scenarion_CN = UseN scenario_N ; -- Eng
lin schedulability_nödvändig_CN = UseN schedulability_N ; -- Eng
oper schedulability_N = mkN "schedulability" ; -- Eng
lin scheme_programmeringsmodell_CN = UseN scheme_N ; -- Eng
lin search_söka_CN = UseN search_N ; -- Eng
lin section_denna_avsnitt_CN = UseN section_N ; -- Eng
lin segmentation_segmentering_CN = UseN segmentation_N ; -- Eng
lin selection_Urval_CN = UseN selection_N ; -- Eng
lin selection_urval_CN = UseN selection_N ; -- Eng
lin semantics_semantik_CN = UseN semantics_N ; -- Eng
lin semaphore_semafor_CN = UseN semaphore_N ; -- Eng
lin sequence_sekv_CN = UseN sequence_N ; -- Eng
lin session_plenum_CN = UseN session_N ; -- Eng
lin session_uppsättning_CN = UseN session_N ; -- Eng
lin set_föreläsning_CN = UseN set_N ; -- Eng
lin set_laboration_CN = UseN set_N ; -- Eng
lin skill_färdighet_CN = UseN skill_N ; -- Eng
lin skill_förmåga_CN = UseN skill_N ; -- Eng
lin software_miljard_CN = UseN software_N ; -- Eng
lin software_mjuk_CN = UseN software_N ; -- Eng
lin software_mjukvara_CN = UseN software_N ; -- Eng
lin start_hemsid_CN = UseN start_N ; -- Eng
lin start_börja_CN = UseN start_N ; -- Eng
lin state_dator_CN = UseN state_N ; -- Eng
lin statement_uttalande_CN = UseN statement_N ; -- Eng
lin step_steg_CN = UseN step_N ; -- Eng
lin structure_in_hanterbara_CN = UseN structure_N ; -- Eng
lin structure_struktur_CN = UseN structure_N ; -- Eng
lin student_elev_CN = UseN student_N ; -- Eng
lin student_student_CN = UseN student_N ; -- Eng
lin study_nytta_CN = UseN study_N ; -- Eng
lin study_studi_CN = UseN study_N ; -- Eng
lin sustainability_hållbarhet_CN = UseN sustainability_N ; -- Eng
lin switch_VLAN_CN = UseN switch_N ; -- Eng
lin synchronization_synkronisering_CN = UseN synchronization_N ; -- Eng
lin syntax_Syntax_CN = UseN syntax_N ; -- Eng
lin system_denna_diskussion_CN = UseN system_N ; -- Eng
lin system_datorsystem_CN = UseN system_N ; -- Eng
lin system_flygplan_CN = UseN system_N ; -- Eng
lin system_komponent_CN = UseN system_N ; -- Eng
lin system_kurs_CN = UseN system_N ; -- Eng
lin system_operativsystem_CN = UseN system_N ; -- Eng
lin system_process_CN = UseN system_N ; -- Eng
lin system_system_CN = UseN system_N ; -- Eng
lin system_systemkonfiguration_CN = UseN system_N ; -- Eng
lin task_mängd_CN = UseN task_N ; -- Eng
lin task_process_CN = UseN task_N ; -- Eng
lin task_systemarkitektur_CN = UseN task_N ; -- Eng
lin tasks_system_CN = UseN tasks_N ; -- Eng
oper tasks_N = mkN "tasks" ; -- Eng
lin technique_exempel_CN = UseN technique_N ; -- Eng
lin technique_mjukvarutekniker_CN = UseN technique_N ; -- Eng
lin technique_princip_CN = UseN technique_N ; -- Eng
lin technique_tekniker_CN = UseN technique_N ; -- Eng
lin technique_omfatta_CN = UseN technique_N ; -- Eng
lin technology_den_sannolikt_CN = UseN technology_N ; -- Eng
lin technology_teknik_CN = UseN technology_N ; -- Eng
lin term_programvarudesign_CN = UseN term_N ; -- Eng
lin text_sekvensdata_CN = UseN text_N ; -- Eng
lin text_text_CN = UseN text_N ; -- Eng
lin theme_teman_CN = UseN theme_N ; -- Eng
lin theories_teori_CN = UseN theories_N ; -- Eng
oper theories_N = mkN "theories" ; -- Eng
lin theory_automatateori_CN = UseN theory_N ; -- Eng
lin theory_teori_CN = UseN theory_N ; -- Eng
lin theory_behandla_CN = UseN theory_N ; -- Eng
lin thesis_beräkningsmodell_CN = UseN thesis_N ; -- Eng
lin timer_realtidsklocka_CN = UseN timer_N ; -- Eng
lin today_utgör_a_viktig_komponent_CN = UseN today_N ; -- Eng
lin tool_verktyg_CN = UseN tool_N ; -- Eng
lin tool_förlita_CN = UseN tool_N ; -- Eng
lin topic_ämne_CN = UseN topic_N ; -- Eng
lin topic_ämnesområde_CN = UseN topic_N ; -- Eng
lin topic_beskriva_CN = UseN topic_N ; -- Eng
lin topics_block_CN = UseN topics_N ; -- Eng
oper topics_N = mkN "topics" ; -- Eng
lin topics_moment_CN = UseN topics_N ; -- Eng
oper topics_N = mkN "topics" ; -- Eng
lin topics_vara_CN = UseN topics_N ; -- Eng
oper topics_N = mkN "topics" ; -- Eng
lin topology_topologi_CN = UseN topology_N ; -- Eng
lin trace_scheduling_CN = UseN trace_N ; -- Eng
lin train_fokusera_CN = UseN train_N ; -- Eng
lin transport_Transportprotokoll_CN = UseN transport_N ; -- Eng
lin use_hos_denna_algoritmer_CN = UseN use_N ; -- Eng
lin use_Användning_CN = UseN use_N ; -- Eng
lin value_värd_CN = UseN value_N ; -- Eng
lin variety_arkitektur_CN = UseN variety_N ; -- Eng
lin view_bakgrund_CN = UseN view_N ; -- Eng
lin way_sätt_CN = UseN way_N ; -- Eng
lin word_ord_CN = UseN word_N ; -- Eng
lin work_arbeta_CN = UseN work_N ; -- Eng
lin Vector_Machine_supportvektormaskin_NP = UsePN (FlatPN Vector_PN Machine_PN) ; -- Eng
oper Vector_PN = mkPN "Vector" ; -- Eng
oper Machine_PN = mkPN "Machine" ; -- Eng
lin AI_AI_NP = UsePN AI_PN ; -- Eng
oper AI_PN = mkPN "AI" ; -- Eng
lin Discrete_matematik_NP = UsePN Discrete_PN ; -- Eng
oper Discrete_PN = mkPN "Discrete" ; -- Eng
lin FrameNet_FrameN_NP = UsePN FrameNet_PN ; -- Eng
oper FrameNet_PN = mkPN "FrameNet" ; -- Eng
lin Kaxira_and_NP = UsePN Kaxira_PN ; -- Eng
oper Kaxira_PN = mkPN "Kaxira" ; -- Eng
lin MCMC_dola_NP = UsePN MCMC_PN ; -- Eng
oper MCMC_PN = mkPN "MCMC" ; -- Eng
lin MPI_MPI_NP = UsePN MPI_PN ; -- Eng
oper MPI_PN = mkPN "MPI" ; -- Eng
lin Machine_konstruktion_NP = UsePN Machine_PN ; -- Eng
oper Machine_PN = mkPN "Machine" ; -- Eng
lin NLP_NLP_NP = UsePN NLP_PN ; -- Eng
oper NLP_PN = mkPN "NLP" ; -- Eng
lin TCP_UDP_NP = UsePN TCP_PN ; -- Eng
oper TCP_PN = mkPN "TCP" ; -- Eng
lin Wordnet_Wordn_NP = UsePN Wordnet_PN ; -- Eng
oper Wordnet_PN = mkPN "Wordnet" ; -- Eng
lin c_c_NP = UsePN c_PN ; -- Eng
oper c_PN = mkPN "c" ; -- Eng
lin explain_förklara_NP = UsePN explain_PN ; -- Eng
oper explain_PN = mkPN "explain" ; -- Eng
lin present_only_not_viktig_Utt = UttVP (AdvVP (AdvVP (UseAP (PositA present_A)) only_Adv) not_Adv) ; -- Eng
oper not_Adv = mkAdv "not" ; -- Eng
lin important_much_statisk_Utt = UttVP (AdvVP (UseAP (PositA important_A)) much_Adv) ; -- Eng
lin specific_course_Kursspecifik_Utt = UttVP (AdvVP (UseAP (PositA specific_A)) course_Adv) ; -- Eng
oper course_Adv = mkAdv "course" ; -- Eng
lin just_not_bara_inte_Utt = UttVP (AdvVP (UseAdv just_Adv) not_Adv) ; -- Eng
oper not_Adv = mkAdv "not" ; -- Eng
lin learn_outcomes_Lärandemål_Utt = UttVP (AdvVP (UseV learn_V outcomes_Adv)) ; -- Eng
oper outcomes_Adv = mkAdv "outcomes" ; -- Eng
lin learn_theory_Inlärningsteori_Utt = UttVP (ComplV learn_V (PluralNP (UseN theory_N))) ; -- Eng
lin structur_a_scientific_text_strukturering_possess_a_vetenskaplig_text_Utt = UttVP (ComplV structur_V (DetCN a_Det (AdjCN (PositA scientific_A) (UseN text_N)))) ; -- Eng
oper structur_V = mkV "structur" ; -- Eng
lin tes_functional_program_testning_possess_funktionell_program_Utt = UttVP (ComplV tes_V (PluralNP (AdjCN (PositA functional_A) (UseN program_N)))) ; -- Eng
oper tes_V = mkV "tes" ; -- Eng
lin Construct_Konstruera_V = Construct_V ; -- Eng
oper Construct_V = mkV "Construct" ; -- Eng
lin Network_Nätverksapplikation_V = Network_V ; -- Eng
oper Network_V = mkV "Network" ; -- Eng
lin abstract_datatyp_V = abstract_V ; -- Eng
lin acquaint_bli_V = acquaint_V ; -- Eng
lin acquire_inhämta_V = acquire_V ; -- Eng
lin address_adressering_V = address_V ; -- Eng
lin advance_Algoritmer_V = advance_V ; -- Eng
lin advance_differentialkalkyl_V = advance_V ; -- Eng
lin advanced_basera_V = advanced_V ; -- Eng
oper advanced_V = mkV "advanced" ; -- Eng
lin affect_beträffa_V = affect_V ; -- Eng
lin affect_påverka_V = affect_V ; -- Eng
lin allow_göra_V = allow_V ; -- Eng
lin applied_maskininlärning_V = applied_V ; -- Eng
oper applied_V = mkV "applied" ; -- Eng
lin apply_tillämpa_V = apply_V ; -- Eng
lin appreciate_uppskatta_V = appreciate_V ; -- Eng
lin appro_godkänd_V = appro_V ; -- Eng
oper appro_V = mkV "appro" ; -- Eng
lin ask_bli_V = ask_V ; -- Eng
lin assess_tillhöra_V = assess_V ; -- Eng
lin avoid_välja_V = avoid_V ; -- Eng
lin base_c_V = base_V ; -- Eng
lin base_presentera_V = base_V ; -- Eng
lin base_basera_V = base_V ; -- Eng
lin be_finnas_V = be_V ; -- Eng
oper be_V = mkV "be" ; -- Eng
lin be_handla_V = be_V ; -- Eng
oper be_V = mkV "be" ; -- Eng
lin be_renommera_V = be_V ; -- Eng
oper be_V = mkV "be" ; -- Eng
lin capture_representera_V = capture_V ; -- Eng
lin communicate_kommunicering_V = communicate_V ; -- Eng
lin communicate_kommunicera_V = communicate_V ; -- Eng
lin compound_datastruktur_V = compound_V ; -- Eng
lin compute_bestämma_V = compute_V ; -- Eng
lin concepts_grundbegrepp_V = concepts_V ; -- Eng
oper concepts_V = mkV "concepts" ; -- Eng
lin consider_betrakta_V = consider_V ; -- Eng
lin consist_bestå_V = consist_V ; -- Eng
lin construct_programmering_V = construct_V ; -- Eng
lin contain_innehålla_V = contain_V ; -- Eng
lin control_styrsystem_V = control_V ; -- Eng
oper control_V = mkV "control" ; -- Eng
lin correspond_motsvara_V = correspond_V ; -- Eng
lin cover_delområde_V = cover_V ; -- Eng
lin cover_tekniker_V = cover_V ; -- Eng
lin cover_innehålla_V = cover_V ; -- Eng
lin cover_omfatta_V = cover_V ; -- Eng
lin cover_täcka_V = cover_V ; -- Eng
lin deal_behandla_V = deal_V ; -- Eng
lin deal_handla_V = deal_V ; -- Eng
lin demonstrate_demonstrera_V = demonstrate_V ; -- Eng
lin describe_beskriva_V = describe_V ; -- Eng
lin design_konstruerad_V = design_V ; -- Eng
lin detect_upptäcka_V = detect_V ; -- Eng
lin determine_bestämma_V = determine_V ; -- Eng
lin develop_utveckla_V = develop_V ; -- Eng
lin directly_mäta_V = directly_V ; -- Eng
oper directly_V = mkV "directly" ; -- Eng
lin discuss_teori_V = discuss_V ; -- Eng
lin discuss_diskutera_V = discuss_V ; -- Eng
lin disk_hantering_V = disk_V ; -- Eng
oper disk_V = mkV "disk" ; -- Eng
lin distribute_distribuera_V = distribute_V ; -- Eng
lin distribute_minne_V = distribute_V ; -- Eng
lin divide_indela_V = divide_V ; -- Eng
lin divide_uppdela_V = divide_V ; -- Eng
lin do_Laboration_V = do_V ; -- Eng
lin e_Computer_V = e_V ; -- Eng
oper e_V = mkV "e" ; -- Eng
lin estimate_uppskatta_V = estimate_V ; -- Eng
lin exemplify_exemplifiera_V = exemplify_V ; -- Eng
lin exist_finnas_V = exist_V ; -- Eng
lin explain_egenskap_V = explain_V ; -- Eng
lin explain_syfte_V = explain_V ; -- Eng
lin explain_redogöra_V = explain_V ; -- Eng
lin explore_utforska_V = explore_V ; -- Eng
lin express_formel_V = express_V ; -- Eng
lin find_hitta_V = find_V ; -- Eng
lin flow_nätverksflöde_V = flow_V ; -- Eng
lin focus_behandla_V = focus_V ; -- Eng
lin focus_fokusera_V = focus_V ; -- Eng
lin follow_följa_V = follow_V ; -- Eng
lin formulate_formulera_V = formulate_V ; -- Eng
lin give_ge_V = give_V ; -- Eng
oper give_V = mkV "give" ; -- Eng
lin have_datavetenskap_V = have_V ; -- Eng
lin have_avklara_V = have_V ; -- Eng
lin have_flytta_V = have_V ; -- Eng
lin have_ha_V = have_V ; -- Eng
lin idealise_dator_V = idealise_V ; -- Eng
oper idealise_V = mkV "idealise" ; -- Eng
lin identify_styrka_V = identify_V ; -- Eng
lin implement_realisera_V = implement_V ; -- Eng
lin include_Examination_V = include_V ; -- Eng
lin include_behandla_V = include_V ; -- Eng
lin include_bestå_V = include_V ; -- Eng
lin including_hp_V = including_V ; -- Eng
oper including_V = mkV "including" ; -- Eng
lin intend_avse_V = intend_V ; -- Eng
lin intend_syfta_V = intend_V ; -- Eng
lin introduce_introducera_V = introduce_V ; -- Eng
lin investigate_undersöka_V = investigate_V ; -- Eng
lin involve_omfatta_V = involve_V ; -- Eng
lin learn_Inlärning_V = learn_V ; -- Eng
lin learn_Introduktion_V = learn_V ; -- Eng
lin learn_inledning_V = learn_V ; -- Eng
lin learn_inlärning_V = learn_V ; -- Eng
lin learn_learning_V = learn_V ; -- Eng
lin learn_Algoritmer_V = learn_V ; -- Eng
lin learn_lära_V = learn_V ; -- Eng
lin level_behandla_V = level_V ; -- Eng
oper level_V = mkV "level" ; -- Eng
lin limit_omfatta_V = limit_V ; -- Eng
lin look_behandla_V = look_V ; -- Eng
lin loop_unrolling_V = loop_V ; -- Eng
lin make_göra_V = make_V ; -- Eng
lin manipulate_manipulera_V = manipulate_V ; -- Eng
lin mean_använda_V = mean_V ; -- Eng
lin measure_mäta_V = measure_V ; -- Eng
lin mechanism_mekanismer_V = mechanism_V ; -- Eng
oper mechanism_V = mkV "mechanism" ; -- Eng
lin meet_kre_V = meet_V ; -- Eng
oper meet_V = mkV "meet" ; -- Eng
lin mining_använda_V = mining_V ; -- Eng
oper mining_V = mkV "mining" ; -- Eng
lin modelle_Modellering_V = modelle_V ; -- Eng
oper modelle_V = mkV "modelle" ; -- Eng
lin modelling_modellera_V = modelling_V ; -- Eng
oper modelling_V = mkV "modelling" ; -- Eng
lin need_Utvärdera_V = need_V ; -- Eng
lin need_behöver_V = need_V ; -- Eng
lin need_vara_V = need_V ; -- Eng
lin obtain_bestämma_V = obtain_V ; -- Eng
lin obtain_upprätthålla_V = obtain_V ; -- Eng
lin organize_föreläsningsserie_V = organize_V ; -- Eng
lin organize_organiserad_V = organize_V ; -- Eng
lin organize_organiserad_V = organize_V ; -- Eng
lin orient_programmeringsbegrepp_V = orient_V ; -- Eng
lin parallelize_parallellisera_V = parallelize_V ; -- Eng
oper parallelize_V = mkV "parallelize" ; -- Eng
lin parse_parsningsalgoritmer_V = parse_V ; -- Eng
lin perform_utföra_V = perform_V ; -- Eng
lin pertain_röra_V = pertain_V ; -- Eng
lin pipelining_pipelining_V = pipelining_V ; -- Eng
oper pipelining_V = mkV "pipelining" ; -- Eng
lin predict_gräns_V = predict_V ; -- Eng
lin prefetch_prefetching_V = prefetch_V ; -- Eng
oper prefetch_V = mkV "prefetch" ; -- Eng
lin present_presentera_V = present_V ; -- Eng
lin present_ombedd_V = present_V ; -- Eng
lin problem_Modellera_V = problem_V ; -- Eng
oper problem_V = mkV "problem" ; -- Eng
lin process_språkteknologi_V = process_V ; -- Eng
lin program_typ_V = program_V ; -- Eng
lin programme_Programming_V = programme_V ; -- Eng
lin programme_kurs_V = programme_V ; -- Eng
lin programme_använda_V = programme_V ; -- Eng
lin programming_Implementera_V = programming_V ; -- Eng
oper programming_V = mkV "programming" ; -- Eng
lin provide_ge_V = provide_V ; -- Eng
lin put_sitta_V = put_V ; -- Eng
lin randomize_algoritmer_V = randomize_V ; -- Eng
oper randomize_V = mkV "randomize" ; -- Eng
lin read_läsa_V = read_V ; -- Eng
lin recommend_rekommenderad_V = recommend_V ; -- Eng
lin reduce_angripa_V = reduce_V ; -- Eng
lin relate_relatera_V = relate_V ; -- Eng
lin require_krav_V = require_V ; -- Eng
lin rout_LAN_V = rout_V ; -- Eng
lin save_spara_V = save_V ; -- Eng
lin scheduling_hantering_V = scheduling_V ; -- Eng
oper scheduling_V = mkV "scheduling" ; -- Eng
lin show_beskriva_V = show_V ; -- Eng
oper show_V = mkV "show" ; -- Eng
lin solve_lösa_V = solve_V ; -- Eng
lin specify_specificera_V = specify_V ; -- Eng
lin structur_strukturering_V = structur_V ; -- Eng
oper structur_V = mkV "structur" ; -- Eng
lin structure_användbara_V = structure_V ; -- Eng
lin study_studera_V = study_V ; -- Eng
lin support_Deep_V = support_V ; -- Eng
lin tag_ordklasstaggning_V = tag_V ; -- Eng
lin take_ske_V = take_V ; -- Eng
oper take_V = mkV "take" ; -- Eng
lin teach_bestå_V = teach_V ; -- Eng
lin tes_testning_V = tes_V ; -- Eng
oper tes_V = mkV "tes" ; -- Eng
lin tes_ter_V = tes_V ; -- Eng
oper tes_V = mkV "tes" ; -- Eng
lin training_bia_V = training_V ; -- Eng
oper training_V = mkV "training" ; -- Eng
lin understand_förståelse_V = understand_V ; -- Eng
lin understand_redogöra_V = understand_V ; -- Eng
lin unrolle_predicatida_V = unrolle_V ; -- Eng
oper unrolle_V = mkV "unrolle" ; -- Eng
lin use_användning_V = use_V ; -- Eng
lin use_fokus_V = use_V ; -- Eng
lin use_använda_V = use_V ; -- Eng
lin use_demonstrera_V = use_V ; -- Eng
lin use_tillämpa_V = use_V ; -- Eng
lin welcome_grund_V = welcome_V ; -- Eng
lin able_visa_A = able_A ; -- Eng
lin able_kunna_A = able_A ; -- Eng
lin additional_ytterlig_A = additional_A ; -- Eng
lin adequate_lämplig_A = adequate_A ; -- Eng
lin algebraic_algebraisk_A = algebraic_A ; -- Eng
lin algorithm_energibesparande_A = algorithm_A ; -- Eng
oper algorithm_A = mkA "algorithm" ; -- Eng
lin algorithm_randomisera_Adv = algorithm_Adv ; -- Eng
oper algorithm_Adv = mkAdv "algorithm" ; -- Eng
lin algorithmic_algoritmisk_A = algorithmic_A ; -- Eng
lin almost_nästan_Adv = almost_Adv ; -- Eng
lin already_redan_Adv = already_Adv ; -- Eng
lin also_dels_Adv = also_Adv ; -- Eng
lin also_också_Adv = also_Adv ; -- Eng
lin also_även_Adv = also_Adv ; -- Eng
lin analytical_analytisk_A = analytical_A ; -- Eng
lin appropriate_lämplig_A = appropriate_A ; -- Eng
lin appropriate_stokastisk_A = appropriate_A ; -- Eng
lin arbitrary_godtycklig_A = arbitrary_A ; -- Eng
lin architectural_arkitekturell_A = architectural_A ; -- Eng
lin architectural_fler_A = architectural_A ; -- Eng
lin architectural_kvantitativ_A = architectural_A ; -- Eng
lin architecture_parallell_Adv = architecture_Adv ; -- Eng
oper architecture_Adv = mkAdv "architecture" ; -- Eng
lin artificial_Artificiell_A = artificial_A ; -- Eng
lin artificial_formell_A = artificial_A ; -- Eng
lin associate_tillhörande_A = associate_A ; -- Eng
lin automatically_kommersiellt_Adv = automatically_Adv ; -- Eng
lin autonomous_autono_A = autonomous_A ; -- Eng
lin available_total_A = available_A ; -- Eng
lin available_vetenskaplig_A = available_A ; -- Eng
lin basic_fundamental_A = basic_A ; -- Eng
lin basic_grundläggande_A = basic_A ; -- Eng
lin basic_statistisk_A = basic_A ; -- Eng
lin binary_binära_A = binary_A ; -- Eng
lin branch_viktig_A = branch_A ; -- Eng
oper branch_A = mkA "branch" ; -- Eng
lin broad_bred_A = broad_A ; -- Eng
lin build_bygga_Adv = build_Adv ; -- Eng
oper build_Adv = mkAdv "build" ; -- Eng
lin certain_viss_A = certain_A ; -- Eng
lin characteristic_karaktäristisk_A = characteristic_A ; -- Eng
lin circuit_minska_A = circuit_A ; -- Eng
oper circuit_A = mkA "circuit" ; -- Eng
lin classical_klassisk_A = classical_A ; -- Eng
lin commercial_kommersiell_A = commercial_A ; -- Eng
lin commercially_algoritmer_Adv = commercially_Adv ; -- Eng
oper commercially_Adv = mkAdv "commercially" ; -- Eng
lin common_vanlig_A = common_A ; -- Eng
oper common_A = mkA "common" ; -- Eng
lin common_vanligen_Adv = common_Adv ; -- Eng
oper common_Adv = mkAdv "common" ; -- Eng
lin complete_komplett_A = complete_A ; -- Eng
lin complex_komplex_A = complex_A ; -- Eng
lin complex_komplext_A = complex_A ; -- Eng
lin comprehensive_omfattande_A = comprehensive_A ; -- Eng
lin compulsory_obligatorisk_A = compulsory_A ; -- Eng
lin comput_viktig_A = comput_A ; -- Eng
oper comput_A = mkA "comput" ; -- Eng
lin computational_linjär_A = computational_A ; -- Eng
lin computational_seen_A = computational_A ; -- Eng
lin computer_energiförbrukningenbeskriv_A = computer_A ; -- Eng
oper computer_A = mkA "computer" ; -- Eng
lin computer_industriell_A = computer_A ; -- Eng
oper computer_A = mkA "computer" ; -- Eng
lin computer_olik_A = computer_A ; -- Eng
oper computer_A = mkA "computer" ; -- Eng
lin computer_specifik_A = computer_A ; -- Eng
oper computer_A = mkA "computer" ; -- Eng
lin computer_sund_A = computer_A ; -- Eng
oper computer_A = mkA "computer" ; -- Eng
lin concurrent_förbereda_A = concurrent_A ; -- Eng
lin concurrent_parallell_A = concurrent_A ; -- Eng
lin concurrent_parallella_A = concurrent_A ; -- Eng
lin constraint_heuristisk_A = constraint_A ; -- Eng
oper constraint_A = mkA "constraint" ; -- Eng
lin contemporary_använda_A = contemporary_A ; -- Eng
lin contemporary_elementär_A = contemporary_A ; -- Eng
lin contemporary_nutida_A = contemporary_A ; -- Eng
lin core_data_A = core_A ; -- Eng
oper core_A = mkA "core" ; -- Eng
lin core_grundläggande_A = core_A ; -- Eng
oper core_A = mkA "core" ; -- Eng
lin course_cyklisk_A = course_A ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin course_dela_A = course_A ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin course_länka_A = course_A ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin course_muntlig_A = course_A ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin course_skriftlig_A = course_A ; -- Eng
oper course_A = mkA "course" ; -- Eng
lin course_dvs_Adv = course_Adv ; -- Eng
oper course_Adv = mkAdv "course" ; -- Eng
lin cross_tvärvetenskaplig_A = cross_A ; -- Eng
lin crucial_avgörande_A = crucial_A ; -- Eng
lin current_aktuell_A = current_A ; -- Eng
lin describe_beskrivad_Adv = describe_Adv ; -- Eng
oper describe_Adv = mkAdv "describe" ; -- Eng
lin desire_önska_A = desire_A ; -- Eng
oper desire_A = mkA "desire" ; -- Eng
lin detailed_detaljerad_A = detailed_A ; -- Eng
oper detailed_A = mkA "detailed" ; -- Eng
lin different_identifiera_A = different_A ; -- Eng
lin different_olik_A = different_A ; -- Eng
lin difficult_svår_A = difficult_A ; -- Eng
lin distribute_parallell_A = distribute_A ; -- Eng
oper distribute_A = mkA "distribute" ; -- Eng
lin do_presentera_Adv = do_Adv ; -- Eng
oper do_Adv = mkAdv "do" ; -- Eng
lin dual_dual_A = dual_A ; -- Eng
lin dualize_Dual_A = dualize_A ; -- Eng
oper dualize_A = mkA "dualize" ; -- Eng
lin dynamic_dynamisk_A = dynamic_A ; -- Eng
lin efficient_högeffektiv_A = efficient_A ; -- Eng
lin electrical_elektrisk_A = electrical_A ; -- Eng
lin electronic_liten_A = electronic_A ; -- Eng
lin elementary_grundläggande_A = elementary_A ; -- Eng
lin embed_inbygg_A = embed_A ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin embed_inbyggd_A = embed_A ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin embed_strikt_A = embed_A ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin embed_viss_A = embed_A ; -- Eng
oper embed_A = mkA "embed" ; -- Eng
lin energy_elektronisk_A = energy_A ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin energy_inbyggt_A = energy_A ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin energy_minska_A = energy_A ; -- Eng
oper energy_A = mkA "energy" ; -- Eng
lin energy_energi_Adv = energy_Adv ; -- Eng
oper energy_Adv = mkAdv "energy" ; -- Eng
lin engineer_ultrasnabb_A = engineer_A ; -- Eng
oper engineer_A = mkA "engineer" ; -- Eng
lin enhance_viktig_A = enhance_A ; -- Eng
oper enhance_A = mkA "enhance" ; -- Eng
lin entry_avancerad_A = entry_A ; -- Eng
oper entry_A = mkA "entry" ; -- Eng
lin equivalent_hp_A = equivalent_A ; -- Eng
lin equivalent_motsvarande_A = equivalent_A ; -- Eng
lin especially_Trådlöst_Adv = especially_Adv ; -- Eng
oper especially_Adv = mkAdv "especially" ; -- Eng
lin especially_samtidigt_Adv = especially_Adv ; -- Eng
oper especially_Adv = mkAdv "especially" ; -- Eng
lin etc_Grund_Adv = etc_Adv ; -- Eng
oper etc_Adv = mkAdv "etc" ; -- Eng
lin ethical_etisk_A = ethical_A ; -- Eng
lin evaluate_hur_Adv = evaluate_Adv ; -- Eng
oper evaluate_Adv = mkAdv "evaluate" ; -- Eng
lin everywhere_överallt_Adv = everywhere_Adv ; -- Eng
lin exact_exakt_A = exact_A ; -- Eng
lin extremely_extremd_Adv = extremely_Adv ; -- Eng
oper extremely_Adv = mkAdv "extremely" ; -- Eng
lin familiar_bekanta_A = familiar_A ; -- Eng
lin familiar_ha_A = familiar_A ; -- Eng
lin familiar_välbekant_A = familiar_A ; -- Eng
lin fast_idag_Adv = fast_Adv ; -- Eng
lin final_slutlig_A = final_A ; -- Eng
lin first_först_A = first_A ; -- Eng
oper first_A = mkA "first" ; -- Eng
lin follow_följande_A = follow_A ; -- Eng
oper follow_A = mkA "follow" ; -- Eng
lin for_datavetare_Prep = for_Prep ; -- Eng
lin formal_god_A = formal_A ; -- Eng
lin formal_vanlig_A = formal_A ; -- Eng
lin foundational_matematisk_A = foundational_A ; -- Eng
oper foundational_A = mkA "foundational" ; -- Eng
lin four_fyra_A = four_A ; -- Eng
oper four_A = mkA "four" ; -- Eng
lin four_fyra_Adv = four_Adv ; -- Eng
oper four_Adv = mkAdv "four" ; -- Eng
lin free_val_A = free_A ; -- Eng
lin functional_allmän_A = functional_A ; -- Eng
lin functional_funktionell_A = functional_A ; -- Eng
lin functional_teknisk_A = functional_A ; -- Eng
lin fundamental_grundläggande_A = fundamental_A ; -- Eng
lin fundamental_konjunktivad_A = fundamental_A ; -- Eng
lin general_generell_A = general_A ; -- Eng
lin general_grundläggande_A = general_A ; -- Eng
lin general_motsvarande_A = general_A ; -- Eng
lin generate_skriv_A = generate_A ; -- Eng
oper generate_A = mkA "generate" ; -- Eng
lin generic_generisk_A = generic_A ; -- Eng
lin given_viss_A = given_A ; -- Eng
oper given_A = mkA "given" ; -- Eng
lin good_gå_A = good_A ; -- Eng
lin good_sådan_A = good_A ; -- Eng
lin graduate_inledande_A = graduate_A ; -- Eng
oper graduate_A = mkA "graduate" ; -- Eng
lin graph_grundläggande_A = graph_A ; -- Eng
oper graph_A = mkA "graph" ; -- Eng
lin hardware_inbygga_A = hardware_A ; -- Eng
oper hardware_A = mkA "hardware" ; -- Eng
lin here_här_Adv = here_Adv ; -- Eng
lin high_hög_A = high_A ; -- Eng
lin how_dessutom_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin how_hur_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin how_idag_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin how_kvantitativa_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin how_programmeringsmodell_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin how_även_Adv = how_Adv ; -- Eng
oper how_Adv = mkAdv "how" ; -- Eng
lin identify_olik_A = identify_A ; -- Eng
oper identify_A = mkA "identify" ; -- Eng
lin illustrate_konkret_A = illustrate_A ; -- Eng
oper illustrate_A = mkA "illustrate" ; -- Eng
lin impact_kommande_A = impact_A ; -- Eng
oper impact_A = mkA "impact" ; -- Eng
lin imperative_imperativad_A = imperative_A ; -- Eng
lin important_Argumentera_A = important_A ; -- Eng
lin important_data_A = important_A ; -- Eng
lin important_fundamental_A = important_A ; -- Eng
lin important_viktig_A = important_A ; -- Eng
lin individual_skriftligt_individuell_A = individual_A ; -- Eng
lin individual_individuell_A = individual_A ; -- Eng
lin industrial_mången_A = industrial_A ; -- Eng
lin integer_speciell_A = integer_A ; -- Eng
oper integer_A = mkA "integer" ; -- Eng
lin interactive_interaktiv_A = interactive_A ; -- Eng
lin interest_intressant_A = interest_A ; -- Eng
oper interest_A = mkA "interest" ; -- Eng
lin international_väletablerad_A = international_A ; -- Eng
lin intuitive_intuitiv_A = intuitive_A ; -- Eng
lin intuitive_naturlig_A = intuitive_A ; -- Eng
lin joint_gemensam_A = joint_A ; -- Eng
lin just_bara_Adv = just_Adv ; -- Eng
lin key_grundläggande_A = key_A ; -- Eng
lin kind_industriell_A = kind_A ; -- Eng
lin laboratory_samverkande_A = laboratory_A ; -- Eng
oper laboratory_A = mkA "laboratory" ; -- Eng
lin large_stor_A = large_A ; -- Eng
lin last_själv_A = last_A ; -- Eng
lin late_god_A = late_A ; -- Eng
lin late_successiva_Adv = late_Adv ; -- Eng
lin lazy_la_A = lazy_A ; -- Eng
lin learning_maskininlärningsbaserad_A = learning_A ; -- Eng
oper learning_A = mkA "learning" ; -- Eng
lin linear_geometrisk_A = linear_A ; -- Eng
lin logic_linjär_A = logic_A ; -- Eng
oper logic_A = mkA "logic" ; -- Eng
lin logical_logisk_A = logical_A ; -- Eng
lin low_låg_A = low_A ; -- Eng
lin low_maskinnär_A = low_A ; -- Eng
lin main_Virtuellt_A = main_A ; -- Eng
lin main_stor_A = main_A ; -- Eng
lin main_täcker_A = main_A ; -- Eng
lin manageable_beräkningsmetod_A = manageable_A ; -- Eng
lin mandatory_obligatorisk_A = mandatory_A ; -- Eng
lin many_olik_A = many_A ; -- Eng
lin mathematical_matematisk_A = mathematical_A ; -- Eng
lin medical_medicinsk_A = medical_A ; -- Eng
lin miss_minska_A = miss_A ; -- Eng
oper miss_A = mkA "miss" ; -- Eng
lin mobile_lokal_A = mobile_A ; -- Eng
lin modern_modern_A = modern_A ; -- Eng
lin morphological_morfologisk_A = morphological_A ; -- Eng
lin much_grundlig_Adv = much_Adv ; -- Eng
lin multiple_vanlig_A = multiple_A ; -- Eng
lin naive_neural_A = naive_A ; -- Eng
oper naive_A = mkA "naive" ; -- Eng
lin natural_grundläggande_A = natural_A ; -- Eng
lin natural_huvudsaklig_A = natural_A ; -- Eng
lin neural_neural_A = neural_A ; -- Eng
lin neural_reinforcement_A = neural_A ; -- Eng
lin new_ny_A = new_A ; -- Eng
lin normal_normal_Adv = normal_Adv ; -- Eng
oper normal_Adv = mkAdv "normal" ; -- Eng
lin now_hur_Adv = now_Adv ; -- Eng
lin often_ofta_Adv = often_Adv ; -- Eng
lin one_modell_Adv = one_Adv ; -- Eng
oper one_Adv = mkAdv "one" ; -- Eng
lin one_en_Adv = one_Adv ; -- Eng
oper one_Adv = mkAdv "one" ; -- Eng
lin only_bara_inte_Adv = only_Adv ; -- Eng
lin only_hur_Adv = only_Adv ; -- Eng
lin operat_kommande_A = operat_A ; -- Eng
oper operat_A = mkA "operat" ; -- Eng
lin oral_muntlig_A = oral_A ; -- Eng
lin orient_objektorienterad_A = orient_A ; -- Eng
lin other_annan_A = other_A ; -- Eng
lin other_linjär_A = other_A ; -- Eng
lin parallel_distribuerad_A = parallel_A ; -- Eng
lin parallel_lämplig_A = parallel_A ; -- Eng
lin parallel_parallell_A = parallel_A ; -- Eng
lin parallel_övre_A = parallel_A ; -- Eng
lin particular_specifik_A = particular_A ; -- Eng
lin philosophy_exekverande_A = philosophy_A ; -- Eng
oper philosophy_A = mkA "philosophy" ; -- Eng
lin pipelining_fler_A = pipelining_A ; -- Eng
oper pipelining_A = mkA "pipelining" ; -- Eng
lin popular_populär_A = popular_A ; -- Eng
lin possess_grund_Prep = possess_Prep ; -- Eng
lin possible_möjlig_A = possible_A ; -- Eng
lin posterior_posteria_A = posterior_A ; -- Eng
lin potential_eventuell_A = potential_A ; -- Eng
lin powerful_Kraftfull_A = powerful_A ; -- Eng
lin practical_praktisk_A = practical_A ; -- Eng
lin predicate_model_A = predicate_A ; -- Eng
oper predicate_A = mkA "predicate" ; -- Eng
lin predicate_naturlig_A = predicate_A ; -- Eng
oper predicate_A = mkA "predicate" ; -- Eng
lin primary_främ_A = primary_A ; -- Eng
lin probabilistic_on_tillämpning_A = probabilistic_A ; -- Eng
lin professional_framtid_A = professional_A ; -- Eng
lin programm_annan_A = programm_A ; -- Eng
oper programm_A = mkA "programm" ; -- Eng
lin programm_gemensam_A = programm_A ; -- Eng
oper programm_A = mkA "programm" ; -- Eng
lin programme_effektiv_A = programme_A ; -- Eng
oper programme_A = mkA "programme" ; -- Eng
lin propositional_logik_A = propositional_A ; -- Eng
oper propositional_A = mkA "propositional" ; -- Eng
lin pure_ren_A = pure_A ; -- Eng
lin quantitative_kvantitativ_A = quantitative_A ; -- Eng
lin quantitative_för_Adv = quantitative_Adv ; -- Eng
oper quantitative_Adv = mkAdv "quantitative" ; -- Eng
lin raw_inneboende_A = raw_A ; -- Eng
lin real_verklig_A = real_A ; -- Eng
lin realistic_realistisk_A = realistic_A ; -- Eng
lin regularly_ofta_Adv = regularly_Adv ; -- Eng
oper regularly_Adv = mkAdv "regularly" ; -- Eng
lin relevant_relevant_A = relevant_A ; -- Eng
lin same_behörighet_A = same_A ; -- Eng
lin sample_parallell_A = sample_A ; -- Eng
oper sample_A = mkA "sample" ; -- Eng
lin scientific_tillgänglig_A = scientific_A ; -- Eng
lin scientific_vetenskaplig_A = scientific_A ; -- Eng
lin second_grundläggande_A = second_A ; -- Eng
oper second_A = mkA "second" ; -- Eng
lin second_olik_A = second_A ; -- Eng
oper second_A = mkA "second" ; -- Eng
lin secondary_minska_A = secondary_A ; -- Eng
lin sequential_sekventiell_A = sequential_A ; -- Eng
lin several_viss_A = several_A ; -- Eng
oper several_A = mkA "several" ; -- Eng
lin share_dela_A = share_A ; -- Eng
oper share_A = mkA "share" ; -- Eng
lin short_kort_A = short_A ; -- Eng
lin simple_bra_A = simple_A ; -- Eng
lin simple_enkel_A = simple_A ; -- Eng
lin simple_idealisera_A = simple_A ; -- Eng
lin small_stor_A = small_A ; -- Eng
lin smooth_differentiabel_A = smooth_A ; -- Eng
lin societal_samhällelig_A = societal_A ; -- Eng
oper societal_A = mkA "societal" ; -- Eng
lin software_liten_A = software_A ; -- Eng
oper software_A = mkA "software" ; -- Eng
lin software_parallell_A = software_A ; -- Eng
oper software_A = mkA "software" ; -- Eng
lin special_annan_A = special_A ; -- Eng
lin specific_Utforma_A = specific_A ; -- Eng
lin specific_specifik_A = specific_A ; -- Eng
lin specific_särskild_A = specific_A ; -- Eng
lin standard_god_A = standard_A ; -- Eng
lin static_statisk_A = static_A ; -- Eng
lin static_viktig_A = static_A ; -- Eng
lin statistical_grundläggande_A = statistical_A ; -- Eng
lin statistical_probabilistisk_A = statistical_A ; -- Eng
lin statistical_statistisk_A = statistical_A ; -- Eng
lin still_fortfarande_Adv = still_Adv ; -- Eng
lin stochastic_stokastisk_A = stochastic_A ; -- Eng
lin strict_inbyggd_A = strict_A ; -- Eng
lin strict_strikt_A = strict_A ; -- Eng
lin strong_diskret_A = strong_A ; -- Eng
lin strong_stark_A = strong_A ; -- Eng
lin study_grundläggande_A = study_A ; -- Eng
oper study_A = mkA "study" ; -- Eng
lin such_sådan_A = such_A ; -- Eng
oper such_A = mkA "such" ; -- Eng
lin sufficient_tillräckligt_A = sufficient_A ; -- Eng
lin suitable_lämplig_A = suitable_A ; -- Eng
lin supervised_kurs_A = supervised_A ; -- Eng
oper supervised_A = mkA "supervised" ; -- Eng
lin sustainable_hållbar_A = sustainable_A ; -- Eng
lin syntactic_syntaktisk_A = syntactic_A ; -- Eng
lin technical_skriva_A = technical_A ; -- Eng
lin technical_viktig_A = technical_A ; -- Eng
lin temporal_tidsmässig_A = temporal_A ; -- Eng
lin textual_vanlig_A = textual_A ; -- Eng
lin theoretical_teoretisk_A = theoretical_A ; -- Eng
lin there_där_Adv = there_Adv ; -- Eng
lin third_tre_A = third_A ; -- Eng
oper third_A = mkA "third" ; -- Eng
lin thorough_grundläggande_A = thorough_A ; -- Eng
lin three_tre_Adv = three_Adv ; -- Eng
oper three_Adv = mkAdv "three" ; -- Eng
lin topic_topic_A = topic_A ; -- Eng
oper topic_A = mkA "topic" ; -- Eng
lin two_två_Adv = two_Adv ; -- Eng
oper two_Adv = mkAdv "two" ; -- Eng
lin typical_lista_A = typical_A ; -- Eng
lin typical_typisk_A = typical_A ; -- Eng
lin unnecessary_onödig_A = unnecessary_A ; -- Eng
lin unsupervised_olinjär_A = unsupervised_A ; -- Eng
lin upper_parallell_A = upper_A ; -- Eng
lin various_annan_A = various_A ; -- Eng
lin very_dessutom_Adv = very_Adv ; -- Eng
oper very_Adv = mkAdv "very" ; -- Eng
lin virtual_distribuerad_A = virtual_A ; -- Eng
lin virtual_virtual_A = virtual_A ; -- Eng
lin where_automatiskt_Adv = where_Adv ; -- Eng
oper where_Adv = mkAdv "where" ; -- Eng
lin where_där_Adv = where_Adv ; -- Eng
oper where_Adv = mkAdv "where" ; -- Eng
lin where_utgör_Adv = where_Adv ; -- Eng
oper where_Adv = mkAdv "where" ; -- Eng
lin whole_hel_A = whole_A ; -- Eng
lin why_varför_Adv = why_Adv ; -- Eng
oper why_Adv = mkAdv "why" ; -- Eng
lin wide_bredd_A = wide_A ; -- Eng
lin wide_olik_A = wide_A ; -- Eng
lin write_skriftlig_A = write_A ; -- Eng
oper write_A = mkA "write" ; -- Eng
lin write_skriv_Adv = write_Adv ; -- Eng
oper write_Adv = mkAdv "write" ; -- Eng
} -- Eng
