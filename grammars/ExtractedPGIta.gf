concrete ExtractedPGIta of ExtractedPG = ExtractIta ** open MorphoDictIta, ParadigmsIta, MakeStructuralIta in { -- Ita
lin UseCl cl = UttCl cl ;
--- lin Educational_objectif_formativo_obiettivi_CN = UttVP (AdvVP (UseAP (PositA formativo_A)) obiettivi_Adv) ; -- Ita
oper obiettivi_Adv = mkAdv "obiettivi" ; -- Ita
--- lin conditional_statement_Conditionale_statements_CN = DetCN Conditionale_Det (UseN statements_N) ; -- Ita
oper Conditionale_Det = mkDet "Conditionale" ; -- Ita
oper statements_N = mkN "statements" ; -- Ita
--- lin dynamic_programme_il_dinamico_programmazione_CN = DetCN il_Det (AdjCN (PositA dinamico_A) (UseN programmazione_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
--- lin oral_exam_orale_esame_CN = UttVP (AdvVP (UseAP (PositA orale_A)) esame_Adv) ; -- Ita
oper esame_Adv = mkAdv "esame" ; -- Ita
lin other_course_regulation_altro_regolamento_CN = AdjCN (PositA altro_A) (UseN regolamento_N) ; -- Ita
--- lin possible_solution_più_possibili_soluzione_CN = DetCN più_Det (AdjCN (PositA possibili_A) (UseN soluzione_N)) ; -- Ita
oper più_Det = mkDet "più" ; -- Ita
oper possibili_A = mkA "possibili" ; -- Ita
lin practical_training_Esercitazione_CN = UseN Esercitazione_N ; -- Ita
oper Esercitazione_N = mkN "Esercitazione" ; -- Ita
--- lin type_conversion_Typo_conversions_CN = DetCN Typo_Det (UseN conversions_N) ; -- Ita
oper Typo_Det = mkDet "Typo" ; -- Ita
oper conversions_N = mkN "conversions" ; -- Ita
--- lin Adversary_di_il_avversario_A = PrepNP di_Prep (DetCN il_Det (UseN avversario_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
--- lin Analisi_matematica_Adv = UseN matematica_N ; -- Ita
lin Avoidable_evitabile_A = evitabile_A ; -- Ita
--- lin Boolean_di_Boola_A = PrepNP di_Prep (UsePN Boola_PN) ; -- Ita
oper Boola_PN = mkPN "Boola" ; -- Ita
--- lin Boolean_Booleane_A = UsePN Booleane_PN ; -- Ita
oper Booleane_PN = mkPN "Booleane" ; -- Ita
lin Collaborative_collaborativo_A = collaborativo_A ; -- Ita
lin Computational_Computazionale_A = Computazionale_A ; -- Ita
oper Computazionale_A = mkA "Computazionale" ; -- Ita
lin DF_Traversal_algoritmo_A = algoritmo_A ; -- Ita
oper algoritmo_A = mkA "algoritmo" ; -- Ita
lin Decidable_decidibile_A = decidibile_A ; -- Ita
oper decidibile_A = mkA "decidibile" ; -- Ita
lin other_information_altro_informazione_NP = DetCN altro_Det (UseN informazione_N) ; -- Ita
oper altro_Det = mkDet "altro" ; -- Ita
oper informazione_N = mkN "informazione" ; -- Ita
lin some_further_questions_alcuno_domanda_di_teoria_NP = DetCN alcuno_Det (PrepCN (UseN domanda_N) (PrepNP di_Prep (MassNP (UseN teoria_N)))) ; -- Ita
oper alcuno_Det = mkDet "alcuno" ; -- Ita
lin the_oral_exam_il_orale_prova_NP = DetCN il_Det (AdjCN (PositA orale_A) (UseN prova_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_oral_examine_il_orala_NP = DetCN il_Det (UseN orala_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper orala_N = mkN "orala" ; -- Ita
lin the_goal_possess_this_exam_tale_prova_NP = DetCN tale_Det (UseN prova_N) ; -- Ita
oper tale_Det = mkDet "tale" ; -- Ita
lin the_course_il_corso_NP = DetCN il_Det (UseN corso_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_course_il_insegnamento_NP = DetCN il_Det (UseN insegnamento_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_exam_il_esame_NP = DetCN il_Det (UseN esame_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_finite_il_modello_NP = DetCN il_Det (UseN modello_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_student_il_accesso_NP = DetCN il_Det (UseN accesso_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin the_student_il_studente_NP = DetCN il_Det (UseN studente_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin this_notion_tale_nozione_NP = DetCN tale_Det (UseN nozione_N) ; -- Ita
oper tale_Det = mkDet "tale" ; -- Ita
lin Didactic_didattico_A = didattico_A ; -- Ita
--- lin Didactic_dispense_Adv = dispense_A ; -- Ita
oper dispense_A = mkA "dispense" ; -- Ita
lin Differential_differenziale_A = differenziale_A ; -- Ita
lin Dimensional_dimensionale_A = dimensionale_A ; -- Ita
--- lin Educational_obiettivi_A = obiettivi_Adv ; -- Ita
oper obiettivi_Adv = mkAdv "obiettivi" ; -- Ita
--- lin English_inglendere_A = UttVP (UseV inglendere_V) ; -- Ita
oper inglendere_V = mkV "inglendere" ; -- Ita
lin English_italiano_A = italiano_A ; -- Ita
lin Epistemological_epistemologico_A = epistemologico_A ; -- Ita
oper epistemologico_A = mkA "epistemologico" ; -- Ita
lin French_inglese_A = inglese_A ; -- Ita
lin II_II_A = II_A ; -- Ita
oper II_A = mkA "II" ; -- Ita
--- lin Inf_INF_Adv = UsePN INF_PN ; -- Ita
oper INF_PN = mkPN "INF" ; -- Ita
--- lin Input_Input_Prep = UsePN Input_PN ; -- Ita
oper Input_PN = mkPN "Input" ; -- Ita
lin Integral_Integrale_A = Integrale_A ; -- Ita
oper Integrale_A = mkA "Integrale" ; -- Ita
--- lin Integral_proprietà_A = UseN proprietà_N ; -- Ita
oper proprietà_N = mkN "proprietà" ; -- Ita
--- lin Italia_ITALIANO_Prep = UsePN ITALIANO_PN ; -- Ita
oper ITALIANO_PN = mkPN "ITALIANO" ; -- Ita
--- lin Italian_ITALIANO_A = UsePN ITALIANO_PN ; -- Ita
oper ITALIANO_PN = mkPN "ITALIANO" ; -- Ita
--- lin Italian_inglese_A = UttVP (UseV inglese_V) ; -- Ita
oper inglese_V = mkV "inglese" ; -- Ita
--- lin Italiano_ITALIANO_Det = UsePN ITALIANO_PN ; -- Ita
oper ITALIANO_PN = mkPN "ITALIANO" ; -- Ita
lin Meaningful_significativo_A = significativo_A ; -- Ita
--- lin Np_completo_Adv = completo_A ; -- Ita
lin Obbligatorio_Obbligatorio_Adv = Obbligatorio_Adv ; -- Ita
oper Obbligatorio_Adv = mkAdv "Obbligatorio" ; -- Ita
--- lin Optional_orale_esame_A = UttVP (AdvVP (UseAP (PositA orale_A)) esame_Adv) ; -- Ita
oper esame_Adv = mkAdv "esame" ; -- Ita
--- lin Output_Output_Prep = UsePN Output_PN ; -- Ita
oper Output_PN = mkPN "Output" ; -- Ita
lin Partial_parziale_A = parziale_A ; -- Ita
lin Lecture_in_class_frontale_lezione_CN = AdjCN (PositA frontale_A) (UseN lezione_N) ; -- Ita
lin attendance_possess_lesson_Frequenza_CN = UseN Frequenza_N ; -- Ita
oper Frequenza_N = mkN "Frequenza" ; -- Ita
--- lin type_possess_learn_activity_tipo_attività_CN = PrepNP tipo_Prep (MassNP (UseN attività_N)) ; -- Ita
oper tipo_Prep = mkPrep "tipo" ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin at_the_library_in_biblioteca_PP = PrepNP in_Prep (MassNP (UseN biblioteca_N)) ; -- Ita
--- lin during_the_course_prova_PP = UseN prova_N ; -- Ita
lin in_some_case_in_alcuno_caso_PP = PrepNP in_Prep (DetCN alcuno_Det (UseN caso_N)) ; -- Ita
oper alcuno_Det = mkDet "alcuno" ; -- Ita
lin in_numerical_analysis_Basics_a_il_concetto_di_base_di_il_numerico_analisi_PP = PrepNP a_Prep (DetCN il_Det (PrepCN (UseN concetto_N) (PrepNP di_Prep (MassNP (PrepCN (UseN base_N) (PrepNP di_Prep (DetCN il_Det (AdjCN (PositA numerico_A) (UseN analisi_N))))))))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper analisi_N = mkN "analisi" ; -- Ita
lin in_numerical_analysis_Basics_di_base_di_il_numerico_analisi_PP = PrepNP di_Prep (MassNP (PrepCN (UseN base_N) (PrepNP di_Prep (DetCN il_Det (AdjCN (PositA numerico_A) (UseN analisi_N)))))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper analisi_N = mkN "analisi" ; -- Ita
lin in_binary_in_binario_PP = PrepNP in_Prep (MassNP (UseN binario_N)) ; -- Ita
lin in_class_a_lezione_PP = PrepNP a_Prep (MassNP (UseN lezione_N)) ; -- Ita
lin in_various_sector_in_vario_settore_PP = PrepNP in_Prep (PluralNP (AdjCN (PositA vario_A) (UseN settore_N))) ; -- Ita
--- lin in_class_frontale_PP = frontale_A ; -- Ita
lin in_informatics_in_informatico_PP = PrepNP in_Prep (MassNP (UseN informatico_N)) ; -- Ita
oper informatico_N = mkN "informatico" ; -- Ita
--- lin in_Informatics_triennale_PP = triennale_A ; -- Ita
lin leader_election_di_impossibilità_PP = PrepNP di_Prep (MassNP (UseN impossibilità_N)) ; -- Ita
oper impossibilità_N = mkN "impossibilità" ; -- Ita
lin over_hypercube_su_il_ipercubio_PP = PrepNP su_Prep (DetCN il_Det (UseN ipercubio_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper ipercubio_N = mkN "ipercubio" ; -- Ita
lin possess_a_tutor_di_a_tutor_PP = PrepNP di_Prep (DetCN a_Det (UseN tutor_N)) ; -- Ita
oper tutor_N = mkN "tutor" ; -- Ita
lin possess_the_collaboration_possess_expert_di_esperto_PP = PrepNP di_Prep (PluralNP (UseN esperto_N)) ; -- Ita
lin possess_the_course_di_il_corso_PP = PrepNP di_Prep (DetCN il_Det (UseN corso_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin possess_the_method_di_il_linguaggio_PP = PrepNP di_Prep (DetCN il_Det (UseN linguaggio_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin possess_the_object_di_il_oggetto_PP = PrepNP di_Prep (DetCN il_Det (UseN oggetto_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin possess_the_project_di_il_progetto_PP = PrepNP di_Prep (DetCN il_Det (UseN progetto_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin possess_the_student_di_il_studente_in_difficoltà_PP = PrepNP di_Prep (DetCN il_Det (PrepCN (UseN studente_N) (PrepNP in_Prep (MassNP (UseN difficoltà_N))))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper difficoltà_N = mkN "difficoltà" ; -- Ita
--- lin possess_deep_learning_learning_PP = UseN learning_N ; -- Ita
oper learning_N = mkN "learning" ; -- Ita
lin possess_Flooding_di_il_Algoritmo_loodinina_PP = PrepNP di_Prep (DetCN il_Det (AdjCN (PositA Algoritmo_A) (UseN loodinina_N))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper Algoritmo_A = mkA "Algoritmo" ; -- Ita
oper loodinina_N = mkN "loodinina" ; -- Ita
lin possess_computability_di_il_computabilità_PP = PrepNP di_Prep (DetCN il_Det (UseN computabilità_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper computabilità_N = mkN "computabilità" ; -- Ita
lin possess_help_di_aiuto_PP = PrepNP di_Prep (MassNP (UseN aiuto_N)) ; -- Ita
lin possess_programming_di_il_programmazione_PP = PrepNP di_Prep (DetCN il_Det (UseN programmazione_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin possess_saturation_tramite_saturazione_PP = PrepNP tramite_Prep (MassNP (UseN saturazione_N)) ; -- Ita
lin possess_classic_solution_di_soluzione_PP = PrepNP di_Prep (MassNP (UseN soluzione_N)) ; -- Ita
lin possess_professional_interface_con_interfaccia_di_professionale_tipo_PP = PrepNP con_Prep (PluralNP (PrepCN (UseN interfaccia_N) (PrepNP di_Prep (MassNP (AdjCN (PositA professionale_A) (UseN tipo_N)))))) ; -- Ita
lin possess_object_for_reference_di_oggetto_PP = PrepNP di_Prep (PluralNP (UseN oggetto_N)) ; -- Ita
lin possess_function_di_funzione_PP = PrepNP di_Prep (PluralNP (UseN funzione_N)) ; -- Ita
--- lin possess_ALGORITHMS_di_PP = UsePN di_PN ; -- Ita
oper di_PN = mkPN "di" ; -- Ita
--- lin to_the_assigned_project_il_scritto_prova_PP = DetCN il_Det (AdjCN (PositA scritto_A) (UseN prova_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin to_student_in_difficulty_con_studente_PP = PrepNP con_Prep (PluralNP (UseN studente_N)) ; -- Ita
lin with_the_basic_concept_possess_programming_con_il_concetto_di_il_programmazione_PP = PrepNP con_Prep (DetCN il_Det (PrepCN (UseN concetto_N) (PrepNP di_Prep (DetCN il_Det (UseN programmazione_N))))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin with_slide_con_slide_in_inglese_PP = PrepNP con_Prep (PluralNP (PrepCN (UseN slide_N) (PrepNP in_Prep (MassNP (UseN inglese_N))))) ; -- Ita
oper slide_N = mkN "slide" ; -- Ita
oper inglese_N = mkN "inglese" ; -- Ita
lin with_GCC_con_GCC_PP = PrepNP con_Prep (UsePN GCC_PN) ; -- Ita
oper GCC_PN = mkPN "GCC" ; -- Ita
lin with_GDB_con_GDB_PP = PrepNP con_Prep (UsePN GDB_PN) ; -- Ita
oper GDB_PN = mkPN "GDB" ; -- Ita
lin Procedural_procedurale_A = procedurale_A ; -- Ita
lin Recursive_Ricorsive_A = Ricorsive_A ; -- Ita
oper Ricorsive_A = mkA "Ricorsive" ; -- Ita
--- lin Riemann_di_Riemann_Adv = PrepNP di_Prep (UsePN Riemann_PN) ; -- Ita
oper Riemann_PN = mkPN "Riemann" ; -- Ita
lin Structured_strutturato_A = strutturato_A ; -- Ita
--- lin Traversal_di_il_attraversamento_A = PrepNP di_Prep (DetCN il_Det (UseN attraversamento_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin Unsolvable_insolubile_A = insolubile_A ; -- Ita
--- lin Alphabet_Alfabeto_CN = UttVP (UseV Alfabeto_V) ; -- Ita
oper Alfabeto_V = mkV "Alfabeto" ; -- Ita
--- lin Arrays_Arrays_CN = UsePN Arrays_PN ; -- Ita
oper Arrays_PN = mkPN "Arrays" ; -- Ita
--- lin Attività_formativo_CN = formativo_A ; -- Ita
lin Broadcast_esempio_CN = UseN esempio_N ; -- Ita
lin Broadcast_problema_CN = UseN problema_N ; -- Ita
--- lin Compilation_di_compilazione_CN = PrepNP di_Prep (MassNP (UseN compilazione_N)) ; -- Ita
--- lin Complexity_di_il_complessità_CN = PrepNP di_Prep (DetCN il_Det (UseN complessità_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper complessità_N = mkN "complessità" ; -- Ita
lin Complexity_complessità_CN = UseN complessità_N ; -- Ita
oper complessità_N = mkN "complessità" ; -- Ita
--- lin Computability_Computability_CN = UsePN Computability_PN ; -- Ita
oper Computability_PN = mkPN "Computability" ; -- Ita
--- lin Content_contenere_CN = UttVP (UseV contenere_V) ; -- Ita
lin Correctness_costo_CN = UseN costo_N ; -- Ita
--- lin Correctness_Correttezza_CN = UsePN Correttezza_PN ; -- Ita
oper Correttezza_PN = mkPN "Correttezza" ; -- Ita
--- lin Curriculuy_Curriculum_CN = UsePN Curriculum_PN ; -- Ita
oper Curriculum_PN = mkPN "Curriculum" ; -- Ita
lin Ecceptions_Eccezioni_CN = UseN Eccezioni_N ; -- Ita
oper Eccezioni_N = mkN "Eccezioni" ; -- Ita
lin Encapsulation_Incapsulamento_CN = UseN Incapsulamento_N ; -- Ita
oper Incapsulamento_N = mkN "Incapsulamento" ; -- Ita
lin Flooding_loodinina_CN = UseN loodinina_N ; -- Ita
oper loodinina_N = mkN "loodinina" ; -- Ita
lin Function_funzione_CN = UseN funzione_N ; -- Ita
lin Function_studio_CN = UseN studio_N ; -- Ita
--- lin Function_Functions_CN = UsePN Functions_PN ; -- Ita
oper Functions_PN = mkPN "Functions" ; -- Ita
lin Geometry_Geometria_CN = UseN Geometria_N ; -- Ita
oper Geometria_N = mkN "Geometria" ; -- Ita
--- lin Informatics_informatica_CN = informatica_Adv ; -- Ita
oper informatica_Adv = mkAdv "informatica" ; -- Ita
--- lin Karp_Cook_CN = UsePN Cook_PN ; -- Ita
oper Cook_PN = mkPN "Cook" ; -- Ita
lin L_classe_CN = UseN classe_N ; -- Ita
lin Lecture_lezione_CN = UseN lezione_N ; -- Ita
--- lin Lecturer_Docere_CN = Docere_Adv ; -- Ita
oper Docere_Adv = mkAdv "Docere" ; -- Ita
--- lin Lecturer_responsabile_Docente_CN = UttVP (AdvVP (UseAP (PositA responsabile_A)) Docente_Adv) ; -- Ita
oper Docente_Adv = mkAdv "Docente" ; -- Ita
lin Lectures_frontale_lezione_CN = AdjCN (PositA frontale_A) (UseN lezione_N) ; -- Ita
lin Lectures_lezione_CN = UseN lezione_N ; -- Ita
--- lin Literal_Literals_CN = UsePN Literals_PN ; -- Ita
oper Literals_PN = mkPN "Literals" ; -- Ita
--- lin Loops_Loops_CN = UsePN Loops_PN ; -- Ita
oper Loops_PN = mkPN "Loops" ; -- Ita
--- lin Maggioli_editore_CN = UsePN editore_PN ; -- Ita
oper editore_PN = mkPN "editore" ; -- Ita
lin Maxima_autovalore_CN = UseN autovalore_N ; -- Ita
oper autovalore_N = mkN "autovalore" ; -- Ita
--- lin Opzionale_Optional_CN = UsePN Optional_PN ; -- Ita
oper Optional_PN = mkPN "Optional" ; -- Ita
--- lin Pointers_Pointers_CN = UsePN Pointers_PN ; -- Ita
oper Pointers_PN = mkPN "Pointers" ; -- Ita
lin Polymorphism_Polimorfismo_CN = UseN Polimorfismo_N ; -- Ita
oper Polimorfismo_N = mkN "Polimorfismo" ; -- Ita
--- lin Saturation_di_il_saturazione_CN = PrepNP di_Prep (DetCN il_Det (UseN saturazione_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin Sector_settore_CN = UseN settore_N ; -- Ita
--- lin Shout_Shout_CN = UsePN Shout_PN ; -- Ita
oper Shout_PN = mkPN "Shout" ; -- Ita
--- lin Socket_Socket_CN = Socket_Adv ; -- Ita
oper Socket_Adv = mkAdv "Socket" ; -- Ita
--- lin Statement_Statements_CN = UsePN Statements_PN ; -- Ita
oper Statements_PN = mkPN "Statements" ; -- Ita
lin Task_Compito_CN = UseN Compito_N ; -- Ita
oper Compito_N = mkN "Compito" ; -- Ita
lin Tree_costruzione_CN = UseN costruzione_N ; -- Ita
--- lin Unsolvability_Unsolvability_CN = UsePN Unsolvability_PN ; -- Ita
oper Unsolvability_PN = mkPN "Unsolvability" ; -- Ita
lin ability_capacità_CN = UseN capacità_N ; -- Ita
oper capacità_N = mkN "capacità" ; -- Ita
--- lin ability_adattare_CN = UttVP (UseV adattare_V) ; -- Ita
lin absence_prova_CN = UseN prova_N ; -- Ita
lin acquisition_metodo_CN = UseN metodo_N ; -- Ita
lin activity_attività_CN = UseN attività_N ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin activity_piattaforma_CN = UseN piattaforma_N ; -- Ita
lin addition_esposizione_CN = UseN esposizione_N ; -- Ita
lin aim_obiettivo_CN = UseN obiettivo_N ; -- Ita
--- lin algebra_lineare_CN = UttVP (UseV lineare_V) ; -- Ita
lin algebrà_algebra_CN = UseN algebra_N ; -- Ita
oper algebra_N = mkN "algebra" ; -- Ita
--- lin algebrà_proprietaa_CN = proprietaa_Adv ; -- Ita
oper proprietaa_Adv = mkAdv "proprietaa" ; -- Ita
lin algorithm_Algoritmo_CN = UseN Algoritmo_N ; -- Ita
oper Algoritmo_N = mkN "Algoritmo" ; -- Ita
lin algorithm_ricerca_CN = UseN ricerca_N ; -- Ita
--- lin algorithm_DF_Traversal_CN = UsePN DF_Traversal_PN ; -- Ita
oper DF_Traversal_PN = mkPN "DF" ; -- Ita
--- lin algorithm_Algoritmo_CN = UttVP (UseV Algoritmo_V) ; -- Ita
oper Algoritmo_V = mkV "Algoritmo" ; -- Ita
--- lin algorithy_Flooding_CN = UsePN Flooding_PN ; -- Ita
oper Flooding_PN = mkPN "Flooding" ; -- Ita
lin analog_informazione_CN = UseN informazione_N ; -- Ita
oper informazione_N = mkN "informazione" ; -- Ita
lin analysis_base_CN = UseN base_N ; -- Ita
lin analysis_concetto_CN = UseN concetto_N ; -- Ita
lin analysis_vista_CN = UseN vista_N ; -- Ita
--- lin analysis_combinatorio_CN = UttVP (UseV combinatorio_V) ; -- Ita
oper combinatorio_V = mkV "combinatorio" ; -- Ita
lin application_applicazione_CN = UseN applicazione_N ; -- Ita
lin application_programma_CN = UseN programma_N ; -- Ita
lin approach_approccio_CN = UseN approccio_N ; -- Ita
lin approximation_approssimazione_CN = UseN approssimazione_N ; -- Ita
lin aspect_aspetto_CN = UseN aspetto_N ; -- Ita
lin assignment_casa_CN = UseN casa_N ; -- Ita
lin attention_attenzione_CN = UseN attenzione_N ; -- Ita
lin average_media_CN = UseN media_N ; -- Ita
oper media_N = mkN "media" ; -- Ita
lin base_formazione_CN = UseN formazione_N ; -- Ita
lin base_studente_CN = UseN studente_N ; -- Ita
--- lin basics_finire_CN = UttVP (UseV finire_V) ; -- Ita
lin behavior_comportamento_CN = UseN comportamento_N ; -- Ita
--- lin behaviorist_di_conoscenza_CN = PrepNP di_Prep (MassNP (UseN conoscenza_N)) ; -- Ita
lin binary_binario_CN = UseN binario_N ; -- Ita
lin bounds_bounds_CN = UseN bounds_N ; -- Ita
oper bounds_N = mkN "bounds" ; -- Ita
lin calcolabilità_linguaggio_CN = UseN linguaggio_N ; -- Ita
lin calculus_Calcolo_CN = UseN Calcolo_N ; -- Ita
oper Calcolo_N = mkN "Calcolo" ; -- Ita
lin case_caso_CN = UseN caso_N ; -- Ita
--- lin church_secondo_Church_CN = PrepNP secondo_Prep (UsePN Church_PN) ; -- Ita
oper Church_PN = mkPN "Church" ; -- Ita
--- lin circuit_di_il_circuita_CN = PrepNP di_Prep (DetCN il_Det (UseN circuita_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper circuita_N = mkN "circuita" ; -- Ita
lin class_classe_CN = UseN classe_N ; -- Ita
lin class_lezione_CN = UseN lezione_N ; -- Ita
--- lin class_p_CN = UsePN p_PN ; -- Ita
oper p_PN = mkPN "p" ; -- Ita
--- lin class_classe_CN = UttVP (UseV classe_V) ; -- Ita
oper classe_V = mkV "classe" ; -- Ita
lin classification_classificazione_CN = UseN classificazione_N ; -- Ita
lin clustering_clustering_CN = UseN clustering_N ; -- Ita
oper clustering_N = mkN "clustering" ; -- Ita
lin code_insegnamento_CN = UseN insegnamento_N ; -- Ita
lin collaboration_esperto_CN = UseN esperto_N ; -- Ita
lin communication_comunicazione_CN = UseN comunicazione_N ; -- Ita
--- lin completeness_problema_CN = UsePN problema_PN ; -- Ita
oper problema_PN = mkPN "problema" ; -- Ita
lin composition_generalità_CN = UseN generalità_N ; -- Ita
oper generalità_N = mkN "generalità" ; -- Ita
lin computability_computabilità_CN = UseN computabilità_N ; -- Ita
oper computabilità_N = mkN "computabilità" ; -- Ita
lin computabilty_Calcolabilità_CN = UseN Calcolabilità_N ; -- Ita
oper Calcolabilità_N = mkN "Calcolabilità" ; -- Ita
lin computer_Didattica_CN = UseN Didattica_N ; -- Ita
oper Didattica_N = mkN "Didattica" ; -- Ita
lin computer_base_CN = UseN base_N ; -- Ita
lin concept_concetto_CN = UseN concetto_N ; -- Ita
--- lin concept_logica_CN = UttVP (UseV logica_V) ; -- Ita
oper logica_V = mkV "logica" ; -- Ita
lin connector_Connettore_CN = UseN Connettore_N ; -- Ita
oper Connettore_N = mkN "Connettore" ; -- Ita
lin consist_esame_CN = UseN esame_N ; -- Ita
--- lin consist_consistere_CN = UttVP (UseV consistere_V) ; -- Ita
--- lin consist_costituire_CN = UttVP (UseV costituire_V) ; -- Ita
--- lin construction_hocetera_CN = hocetera_Adv ; -- Ita
oper hocetera_Adv = mkAdv "hocetera" ; -- Ita
lin continuity_continuità_CN = UseN continuità_N ; -- Ita
oper continuità_N = mkN "continuità" ; -- Ita
--- lin control_di_controllo_CN = PrepNP di_Prep (MassNP (UseN controllo_N)) ; -- Ita
lin conversion_conversions_CN = UseN conversions_N ; -- Ita
oper conversions_N = mkN "conversions" ; -- Ita
lin cost_miglioramento_CN = UseN miglioramento_N ; -- Ita
lin cost_stabilità_CN = UseN stabilità_N ; -- Ita
oper stabilità_N = mkN "stabilità" ; -- Ita
--- lin cost_costo_CN = UttVP (UseV costo_V) ; -- Ita
oper costo_V = mkV "costo" ; -- Ita
lin course_conferenza_CN = UseN conferenza_N ; -- Ita
lin course_corso_CN = UseN corso_N ; -- Ita
lin course_insegnamento_CN = UseN insegnamento_N ; -- Ita
lin course_laurea_CN = UseN laurea_N ; -- Ita
--- lin course_tutto_CN = UttVP (UseV tutto_V) ; -- Ita
oper tutto_V = mkV "tutto" ; -- Ita
lin cycle_ciclo_CN = UseN ciclo_N ; -- Ita
lin cycles_assenza_CN = UseN assenza_N ; -- Ita
lin definition_definizione_CN = UseN definizione_N ; -- Ita
lin degree_elemento_CN = UseN elemento_N ; -- Ita
lin derive_derivazione_CN = UseN derivazione_N ; -- Ita
lin design_progettazione_CN = UseN progettazione_N ; -- Ita
lin detection_anomaly_CN = UseN anomaly_N ; -- Ita
oper anomaly_N = mkN "anomaly" ; -- Ita
lin development_svolgimento_CN = UseN svolgimento_N ; -- Ita
lin didactics_Didattica_CN = UseN Didattica_N ; -- Ita
oper Didattica_N = mkN "Didattica" ; -- Ita
lin difficulty_difficoltà_CN = UseN difficoltà_N ; -- Ita
oper difficoltà_N = mkN "difficoltà" ; -- Ita
--- lin directife_direttive_CN = UsePN direttive_PN ; -- Ita
oper direttive_PN = mkPN "direttive" ; -- Ita
lin disability_studente_CN = UseN studente_N ; -- Ita
--- lin discipline_informatico_CN = informatico_A ; -- Ita
lin discussion_discussione_CN = UseN discussione_N ; -- Ita
--- lin discussion_consistere_CN = UttVP (UseV consistere_V) ; -- Ita
lin e_concetto_CN = UseN concetto_N ; -- Ita
lin e_fondamente_CN = UseN fondamente_N ; -- Ita
oper fondamente_N = mkN "fondamente" ; -- Ita
lin edition_to_CN = UseN to_N ; -- Ita
oper to_N = mkN "to" ; -- Ita
lin edizione_tecnico_CN = UseN tecnico_N ; -- Ita
lin end_base_CN = UseN base_N ; -- Ita
lin environment_ambiente_CN = UseN ambiente_N ; -- Ita
lin equation_Equazione_CN = UseN Equazione_N ; -- Ita
oper Equazione_N = mkN "Equazione" ; -- Ita
--- lin exam_di_svolgimento_CN = PrepNP di_Prep (MassNP (UseN svolgimento_N)) ; -- Ita
lin exam_esame_CN = UseN esame_N ; -- Ita
lin exam_orale_CN = UseN orale_N ; -- Ita
oper orale_N = mkN "orale" ; -- Ita
lin exam_prova_CN = UseN prova_N ; -- Ita
--- lin exam_consistere_CN = UttVP (UseV consistere_V) ; -- Ita
--- lin exam_scrivere_CN = UttVP (UseV scrivere_V) ; -- Ita
--- lin exam_opzionale_CN = opzionale_A ; -- Ita
--- lin exam_orale_CN = orale_A ; -- Ita
lin examination_prova_CN = UseN prova_N ; -- Ita
--- lin examination_orale_CN = orale_A ; -- Ita
--- lin example_Broadcast_CN = UsePN Broadcast_PN ; -- Ita
oper Broadcast_PN = mkPN "Broadcast" ; -- Ita
lin examples_esempe_CN = UseN esempe_N ; -- Ita
oper esempe_N = mkN "esempe" ; -- Ita
lin examples_esempio_CN = UseN esempio_N ; -- Ita
--- lin exay_il_esame_CN = DetCN il_Det (UseN esame_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin exercise_Esercitazione_CN = UseN Esercitazione_N ; -- Ita
oper Esercitazione_N = mkN "Esercitazione" ; -- Ita
lin exercise_argomento_CN = UseN argomento_N ; -- Ita
lin exercise_esercizio_CN = UseN esercizio_N ; -- Ita
lin exercise_verta_CN = UseN verta_N ; -- Ita
oper verta_N = mkN "verta" ; -- Ita
lin explore_Esplorazione_CN = UseN Esplorazione_N ; -- Ita
oper Esplorazione_N = mkN "Esplorazione" ; -- Ita
lin expression_istruzione_CN = UseN istruzione_N ; -- Ita
--- lin expression_Expressions_CN = UsePN Expressions_PN ; -- Ita
oper Expressions_PN = mkPN "Expressions" ; -- Ita
lin extremes_successione_CN = UseN successione_N ; -- Ita
lin finite_modello_CN = UseN modello_N ; -- Ita
lin fisica_formazione_CN = UseN formazione_N ; -- Ita
lin formativà_attività_CN = UseN attività_N ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin function_caratteristica_CN = UseN caratteristica_N ; -- Ita
lin function_funzione_CN = UseN funzione_N ; -- Ita
lin function_funzioni_CN = UseN funzioni_N ; -- Ita
oper funzioni_N = mkN "funzioni" ; -- Ita
lin function_teorema_CN = UseN teorema_N ; -- Ita
lin fundamental_metodo_CN = UseN metodo_N ; -- Ita
lin goal_prova_CN = UseN prova_N ; -- Ita
lin grade_voto_CN = UseN voto_N ; -- Ita
lin graph_grafo_CN = UseN grafo_N ; -- Ita
oper grafo_N = mkN "grafo" ; -- Ita
--- lin graph_Broadcast_CN = UttVP (UseV Broadcast_V) ; -- Ita
oper Broadcast_V = mkV "Broadcast" ; -- Ita
--- lin hand_di_il_destrare_mano_CN = PrepNP di_Prep (DetCN il_Det (UseN (CompoundN destrare_N mano_N))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper destrare_N = mkN "destrare" ; -- Ita
lin help_aiuto_CN = UseN aiuto_N ; -- Ita
lin history_storia_CN = UseN storia_N ; -- Ita
lin hour_ora_CN = UseN ora_N ; -- Ita
--- lin hour_ore_CN = UsePN ore_PN ; -- Ita
oper ore_PN = mkPN "ore" ; -- Ita
--- lin hour_scritto_CN = UttVP (UseV scritto_V) ; -- Ita
oper scritto_V = mkV "scritto" ; -- Ita
lin hypercube_ipercubio_CN = UseN ipercubio_N ; -- Ita
oper ipercubio_N = mkN "ipercubio" ; -- Ita
--- lin hypercube_Ipercubi_CN = UsePN Ipercubi_PN ; -- Ita
oper Ipercubi_PN = mkPN "Ipercubi" ; -- Ita
lin identifier_Identificatore_CN = UseN Identificatore_N ; -- Ita
oper Identificatore_N = mkN "Identificatore" ; -- Ita
--- lin impossibility_a_albero_CN = PrepNP a_Prep (MassNP (UseN albero_N)) ; -- Ita
lin improvement_miglioramento_CN = UseN miglioramento_N ; -- Ita
lin inequality_disequazione_CN = UseN disequazione_N ; -- Ita
oper disequazione_N = mkN "disequazione" ; -- Ita
lin informatiche_Disciplina_CN = UseN Disciplina_N ; -- Ita
oper Disciplina_N = mkN "Disciplina" ; -- Ita
lin informatics_informatico_CN = UseN informatico_N ; -- Ita
oper informatico_N = mkN "informatico" ; -- Ita
lin information_informazione_CN = UseN informazione_N ; -- Ita
oper informazione_N = mkN "informazione" ; -- Ita
lin inheritance_Ereditarietà_CN = UseN Ereditarietà_N ; -- Ita
oper Ereditarietà_N = mkN "Ereditarietà" ; -- Ita
lin initiator_iniziatore_CN = UseN iniziatore_N ; -- Ita
lin integral_doppio_CN = UseN doppio_N ; -- Ita
lin interface_interfaccia_CN = UseN interfaccia_N ; -- Ita
lin introduction_introduzione_CN = UseN introduzione_N ; -- Ita
lin introduction_linguaggio_CN = UseN linguaggio_N ; -- Ita
--- lin introduction_introduzione_CN = UsePN introduzione_PN ; -- Ita
oper introduzione_PN = mkPN "introduzione" ; -- Ita
lin issue_tematica_CN = UseN tematica_N ; -- Ita
lin knowledge_conoscenza_CN = UseN conoscenza_N ; -- Ita
lin lab_aula_CN = UseN aula_N ; -- Ita
lin language_insegnamento_CN = UseN insegnamento_N ; -- Ita
lin language_introduzione_CN = UseN introduzione_N ; -- Ita
lin language_programmazione_CN = UseN programmazione_N ; -- Ita
--- lin language_Basics_CN = UsePN Basics_PN ; -- Ita
oper Basics_PN = mkPN "Basics" ; -- Ita
--- lin language_linguaggio_CN = UsePN linguaggio_PN ; -- Ita
oper linguaggio_PN = mkPN "linguaggio" ; -- Ita
--- lin language_interpretare_CN = UttVP (UseV interpretare_V) ; -- Ita
lin last_tempo_CN = UseN tempo_N ; -- Ita
lin learning_Apprendimento_CN = UseN Apprendimento_N ; -- Ita
oper Apprendimento_N = mkN "Apprendimento" ; -- Ita
lin lecture_lezione_CN = UseN lezione_N ; -- Ita
--- lin lecture_importantissimo_CN = importantissimo_A ; -- Ita
oper importantissimo_A = mkA "importantissimo" ; -- Ita
lin lesson_lezione_CN = UseN lezione_N ; -- Ita
lin level_base_CN = UseN base_N ; -- Ita
lin level_elaboratore_CN = UseN elaboratore_N ; -- Ita
lin level_livello_CN = UseN livello_N ; -- Ita
--- lin levin_Cook_CN = UsePN Cook_PN ; -- Ita
oper Cook_PN = mkPN "Cook" ; -- Ita
lin library_biblioteca_CN = UseN biblioteca_N ; -- Ita
lin limit_limite_CN = UseN limite_N ; -- Ita
--- lin limit_limite_CN = UsePN limite_PN ; -- Ita
oper limite_PN = mkPN "limite" ; -- Ita
--- lin limit_continua_CN = UttVP (UseV continua_V) ; -- Ita
oper continua_V = mkV "continua" ; -- Ita
lin list_dinamiche_CN = UseN dinamiche_N ; -- Ita
oper dinamiche_N = mkN "dinamiche" ; -- Ita
--- lin list_Lista_CN = UsePN Lista_PN ; -- Ita
oper Lista_PN = mkPN "Lista" ; -- Ita
--- lin machine_macchina_CN = UsePN macchina_PN ; -- Ita
oper macchina_PN = mkPN "macchina" ; -- Ita
--- lin management_Dynamic_CN = UsePN Dynamic_PN ; -- Ita
oper Dynamic_PN = mkPN "Dynamic" ; -- Ita
lin marks_voto_CN = UseN voto_N ; -- Ita
lin mathematics_matematica_CN = UseN matematica_N ; -- Ita
lin means_grafo_CN = UseN grafo_N ; -- Ita
oper grafo_N = mkN "grafo" ; -- Ita
lin means_minimo_CN = UseN minimo_N ; -- Ita
--- lin memory_memoria_CN = UsePN memoria_PN ; -- Ita
oper memoria_PN = mkPN "memoria" ; -- Ita
lin method_deep_CN = UseN deep_N ; -- Ita
oper deep_N = mkN "deep" ; -- Ita
lin method_linguaggio_CN = UseN linguaggio_N ; -- Ita
lin method_metodi_CN = UseN metodi_N ; -- Ita
oper metodi_N = mkN "metodi" ; -- Ita
lin method_metodo_CN = UseN metodo_N ; -- Ita
lin minute_minuto_CN = UseN minuto_N ; -- Ita
lin misconception_misconcezione_CN = UseN misconcezione_N ; -- Ita
oper misconcezione_N = mkN "misconcezione" ; -- Ita
lin mistake_errore_CN = UseN errore_N ; -- Ita
lin modality_modalità_CN = UseN modalità_N ; -- Ita
oper modalità_N = mkN "modalità" ; -- Ita
lin model_modello_CN = UseN modello_N ; -- Ita
lin model_trasmissione_CN = UseN trasmissione_N ; -- Ita
lin module_modulo_CN = UseN modulo_N ; -- Ita
lin name_corso_CN = UseN corso_N ; -- Ita
--- lin net_Jare_CN = UttVP (UseV Jare_V) ; -- Ita
oper Jare_V = mkV "Jare" ; -- Ita
--- lin network_Networks_CN = UsePN Networks_PN ; -- Ita
oper Networks_PN = mkPN "Networks" ; -- Ita
lin notion_nozione_CN = UseN nozione_N ; -- Ita
lin object_oggetto_CN = UseN oggetto_N ; -- Ita
--- lin objectif_formativo_CN = formativo_A ; -- Ita
lin obstacle_ostacolo_CN = UseN ostacolo_N ; -- Ita
lin operator_operators_CN = UseN operators_N ; -- Ita
oper operators_N = mkN "operators" ; -- Ita
lin orientation_orientamento_CN = UseN orientamento_N ; -- Ita
--- lin part_lo_scrivere_CN = DetCN lo_Det (UseN scrivere_N) ; -- Ita
oper lo_Det = mkDet "lo" ; -- Ita
oper scrivere_N = mkN "scrivere" ; -- Ita
lin part_series_CN = UseN series_N ; -- Ita
oper series_N = mkN "series" ; -- Ita
lin pattern_schema_CN = UseN schema_N ; -- Ita
lin platform_attività_CN = UseN attività_N ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin platform_piattaforma_CN = UseN piattaforma_N ; -- Ita
lin point_prova_CN = UseN prova_N ; -- Ita
lin possibility_possibilità_CN = UseN possibilità_N ; -- Ita
oper possibilità_N = mkN "possibilità" ; -- Ita
lin prerequisite_Prerequisire_CN = UseN Prerequisire_N ; -- Ita
oper Prerequisire_N = mkN "Prerequisire" ; -- Ita
lin prerequisite_prerequisito_CN = UseN prerequisito_N ; -- Ita
lin principle_principio_CN = UseN principio_N ; -- Ita
--- lin problem_di_il_arresto_CN = PrepNP di_Prep (DetCN il_Det (UseN arresto_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin problem_Probelma_CN = UseN Probelma_N ; -- Ita
oper Probelma_N = mkN "Probelma" ; -- Ita
lin problem_applicazione_CN = UseN applicazione_N ; -- Ita
lin problem_problema_CN = UseN problema_N ; -- Ita
--- lin problem_problema_CN = UsePN problema_PN ; -- Ita
oper problema_PN = mkPN "problema" ; -- Ita
lin program_elaboratore_CN = UseN elaboratore_N ; -- Ita
lin program_programma_CN = UseN programma_N ; -- Ita
lin programme_programmazione_CN = UseN programmazione_N ; -- Ita
--- lin programming_di_il_programmazione_a_oggetto_CN = PrepNP di_Prep (DetCN il_Det (PrepCN (UseN programmazione_N) (PrepNP a_Prep (PluralNP (UseN oggetto_N))))) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin programming_base_CN = UseN base_N ; -- Ita
lin programming_comprensione_CN = UseN comprensione_N ; -- Ita
lin programming_elemento_CN = UseN elemento_N ; -- Ita
lin programming_istruzione_CN = UseN istruzione_N ; -- Ita
lin programming_programmazione_CN = UseN programmazione_N ; -- Ita
lin project_progetto_CN = UseN progetto_N ; -- Ita
lin project_trentesimo_CN = UseN trentesimo_N ; -- Ita
oper trentesimo_N = mkN "trentesimo" ; -- Ita
--- lin project_assegnare_CN = UttVP (UseV assegnare_V) ; -- Ita
lin projector_lavagna_CN = UseN lavagna_N ; -- Ita
lin property_caratteristica_CN = UseN caratteristica_N ; -- Ita
lin property_proprietà_CN = UseN proprietà_N ; -- Ita
oper proprietà_N = mkN "proprietà" ; -- Ita
lin protocol_protocollo_CN = UseN protocollo_N ; -- Ita
--- lin protocol_protocollo_CN = UsePN protocollo_PN ; -- Ita
oper protocollo_PN = mkPN "protocollo" ; -- Ita
lin questions_domanda_CN = UseN domanda_N ; -- Ita
--- lin reference_di_riferimento_CN = PrepNP di_Prep (MassNP (UseN riferimento_N)) ; -- Ita
lin reference_riferimento_CN = UseN riferimento_N ; -- Ita
--- lin reference_c_CN = UsePN c_PN ; -- Ita
oper c_PN = mkPN "c" ; -- Ita
--- lin registration_con_CN = UsePN con_PN ; -- Ita
oper con_PN = mkPN "con" ; -- Ita
lin regulation_regolamento_CN = UseN regolamento_N ; -- Ita
lin representation_cennio_CN = UseN cennio_N ; -- Ita
oper cennio_N = mkN "cennio" ; -- Ita
lin representation_rappresentazione_CN = UseN rappresentazione_N ; -- Ita
lin request_richiesta_CN = UseN richiesta_N ; -- Ita
lin respect_topologia_CN = UseN topologia_N ; -- Ita
oper topologia_N = mkN "topologia" ; -- Ita
--- lin restriction_restrizioni_CN = UsePN restrizioni_PN ; -- Ita
oper restrizioni_PN = mkPN "restrizioni" ; -- Ita
lin result_topologia_CN = UseN topologia_N ; -- Ita
oper topologia_N = mkN "topologia" ; -- Ita
lin review_Ripasso_CN = UseN Ripasso_N ; -- Ita
oper Ripasso_N = mkN "Ripasso" ; -- Ita
lin rule_regola_CN = UseN regola_N ; -- Ita
--- lin saturation_di_il_saturazione_CN = PrepNP di_Prep (DetCN il_Det (UseN saturazione_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin saturation_saturazione_CN = UseN saturazione_N ; -- Ita
lin search_ricerca_CN = UseN ricerca_N ; -- Ita
lin sector_settore_CN = UseN settore_N ; -- Ita
--- lin seminar_seminario_CN = seminario_A ; -- Ita
oper seminario_A = mkA "seminario" ; -- Ita
lin sequence_funzione_CN = UseN funzione_N ; -- Ita
lin series_serie_CN = UseN serie_N ; -- Ita
oper serie_N = mkN "serie" ; -- Ita
--- lin series_Pearson_CN = UsePN Pearson_PN ; -- Ita
oper Pearson_PN = mkPN "Pearson" ; -- Ita
lin service_servizio_CN = UseN servizio_N ; -- Ita
lin sessions_appello_CN = UseN appello_N ; -- Ita
lin set_Insiema_CN = UseN Insiema_N ; -- Ita
oper Insiema_N = mkN "Insiema" ; -- Ita
--- lin set_Insiemo_CN = UsePN Insiemo_PN ; -- Ita
oper Insiemo_PN = mkPN "Insiemo" ; -- Ita
lin skills_critico_capacità_CN = AdjCN (PositA critico_A) (UseN capacità_N) ; -- Ita
oper capacità_N = mkN "capacità" ; -- Ita
lin skills_capacità_CN = UseN capacità_N ; -- Ita
oper capacità_N = mkN "capacità" ; -- Ita
lin slide_slide_CN = UseN slide_N ; -- Ita
oper slide_N = mkN "slide" ; -- Ita
lin solution_soluzione_CN = UseN soluzione_N ; -- Ita
--- lin solution_soluzioni_CN = UsePN soluzioni_PN ; -- Ita
oper soluzioni_PN = mkPN "soluzioni" ; -- Ita
lin stability_concetto_CN = UseN concetto_N ; -- Ita
lin stability_introduzione_CN = UseN introduzione_N ; -- Ita
--- lin state_essere_CN = UsePN essere_PN ; -- Ita
oper essere_PN = mkPN "essere" ; -- Ita
lin statement_statements_CN = UseN statements_N ; -- Ita
oper statements_N = mkN "statements" ; -- Ita
--- lin student_il_studente_CN = DetCN il_Det (UseN studente_N) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
--- lin student_a_il_studente_CN = PrepNP a_Prep (DetCN il_Det (UseN studente_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin student_accesso_CN = UseN accesso_N ; -- Ita
lin student_corso_CN = UseN corso_N ; -- Ita
lin student_studente_CN = UseN studente_N ; -- Ita
lin student_supporto_CN = UseN supporto_N ; -- Ita
--- lin student_ù_CN = ù_Adv ; -- Ita
oper ù_Adv = mkAdv "ù" ; -- Ita
lin synthesis_sintesi_CN = UseN sintesi_N ; -- Ita
oper sintesi_N = mkN "sintesi" ; -- Ita
--- lin system_sistema_CN = UsePN sistema_PN ; -- Ita
oper sistema_PN = mkPN "sistema" ; -- Ita
lin systems_Approfondimento_CN = UseN Approfondimento_N ; -- Ita
oper Approfondimento_N = mkN "Approfondimento" ; -- Ita
lin systems_ambiente_CN = UseN ambiente_N ; -- Ita
--- lin talk_orale_CN = orale_A ; -- Ita
lin teacher_docente_CN = UseN docente_N ; -- Ita
oper docente_N = mkN "docente" ; -- Ita
lin teacher_docento_CN = UseN docento_N ; -- Ita
oper docento_N = mkN "docento" ; -- Ita
lin technique_tecnica_CN = UseN tecnica_N ; -- Ita
lin techniques_metodo_CN = UseN metodo_N ; -- Ita
lin termination_Terminazione_CN = UseN Terminazione_N ; -- Ita
oper Terminazione_N = mkN "Terminazione" ; -- Ita
lin test_prova_CN = UseN prova_N ; -- Ita
lin textbook_libro_CN = UseN libro_N ; -- Ita
lin texts_testo_CN = UseN testo_N ; -- Ita
lin theorem_teorema_CN = UseN teorema_N ; -- Ita
lin theorey_teorema_CN = UseN teorema_N ; -- Ita
lin theory_teoria_CN = UseN teoria_N ; -- Ita
lin thesis_classe_CN = UseN classe_N ; -- Ita
lin thesis_tesi_CN = UseN tesi_N ; -- Ita
oper tesi_N = mkN "tesi" ; -- Ita
lin topic_esercizio_CN = UseN esercizio_N ; -- Ita
lin topics_recupero_CN = UseN recupero_N ; -- Ita
lin topics_tema_CN = UseN tema_N ; -- Ita
lin topology_Topologia_CN = UseN Topologia_N ; -- Ita
oper Topologia_N = mkN "Topologia" ; -- Ita
lin topology_grafo_CN = UseN grafo_N ; -- Ita
oper grafo_N = mkN "grafo" ; -- Ita
--- lin topology_risultato_CN = UsePN risultato_PN ; -- Ita
oper risultato_PN = mkPN "risultato" ; -- Ita
--- lin tree_a_rinina_CN = PrepNP a_Prep (PluralNP (UseN rinina_N)) ; -- Ita
oper rinina_N = mkN "rinina" ; -- Ita
--- lin tutor_di_tutorato_CN = PrepNP di_Prep (MassNP (UseN tutorato_N)) ; -- Ita
oper tutorato_N = mkN "tutorato" ; -- Ita
lin tutor_tutor_CN = UseN tutor_N ; -- Ita
oper tutor_N = mkN "tutor" ; -- Ita
lin tutor_tutoraggio_CN = UseN tutoraggio_N ; -- Ita
oper tutoraggio_N = mkN "tutoraggio" ; -- Ita
lin type_attività_CN = UseN attività_N ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin type_tipo_CN = UseN tipo_N ; -- Ita
--- lin types_Types_CN = UsePN Types_PN ; -- Ita
oper Types_PN = mkPN "Types" ; -- Ita
lin understande_comprensione_CN = UseN comprensione_N ; -- Ita
lin unit_insegnamento_CN = UseN insegnamento_N ; -- Ita
lin unit_unità_CN = UseN unità_N ; -- Ita
oper unità_N = mkN "unità" ; -- Ita
--- lin unit_Learning_CN = UsePN Learning_PN ; -- Ita
oper Learning_PN = mkPN "Learning" ; -- Ita
--- lin unit_NUMERICO_CN = UsePN NUMERICO_PN ; -- Ita
oper NUMERICO_PN = mkPN "NUMERICO" ; -- Ita
--- lin unit_and_CN = UsePN and_PN ; -- Ita
oper and_PN = mkPN "and" ; -- Ita
--- lin unit_di_CN = UsePN di_PN ; -- Ita
oper di_PN = mkPN "di" ; -- Ita
--- lin unit_orientare_CN = UttVP (UseV orientare_V) ; -- Ita
lin use_uso_CN = UseN uso_N ; -- Ita
lin variable_funzione_CN = UseN funzione_N ; -- Ita
lin verification_verifica_CN = UseN verifica_N ; -- Ita
--- lin write_scritta_CN = UttVP (UseV scritta_V) ; -- Ita
oper scritta_V = mkV "scritta" ; -- Ita
--- lin Antonio_Boccuto_Antonio_Boccere_NP = PredVP (UsePN Antonio_PN) (UseV Boccere_V) ; -- Ita
oper Antonio_PN = mkPN "Antonio" ; -- Ita
oper Boccere_V = mkV "Boccere" ; -- Ita
--- lin Arturo_Carpi_Arturo_Carpe_NP = UttVP (ComplV Arturo_V (UsePN Carpe_PN)) ; -- Ita
oper Arturo_V = mkV "Arturo" ; -- Ita
oper Carpe_PN = mkPN "Carpe" ; -- Ita
lin Celsius_pocket_Prinzm_NP = UsePN Prinzm_PN ; -- Ita
oper Prinzm_PN = mkPN "Prinzm" ; -- Ita
--- lin Marco_Bramanti_Bramare_Marco_NP = UttVP (AdvVP (UseV Bramare_V) Marco_Adv) ; -- Ita
oper Bramare_V = mkV "Bramare" ; -- Ita
oper Marco_Adv = mkAdv "Marco" ; -- Ita
--- lin Stefano_Marcugini_Marcugino_Stefare_NP = PredVP (UsePN Marcugino_PN) (UseV Stefare_V) ; -- Ita
oper Marcugino_PN = mkPN "Marcugino" ; -- Ita
oper Stefare_V = mkV "Stefare" ; -- Ita
lin Valentina_Poggioni_Valentina_Poggioni_NP = DetCN Valentina_Det (UseN Poggioni_N) ; -- Ita
oper Valentina_Det = mkDet "Valentina" ; -- Ita
oper Poggioni_N = mkN "Poggioni" ; -- Ita
lin ALGORITHMS_DISTRIBUTED_NP = UsePN DISTRIBUTED_PN ; -- Ita
oper DISTRIBUTED_PN = mkPN "DISTRIBUTED" ; -- Ita
lin ARCHITECTURE_ARCHITETTURA_NP = UsePN ARCHITETTURA_PN ; -- Ita
oper ARCHITETTURA_PN = mkPN "ARCHITETTURA" ; -- Ita
--- lin Affine_integrativo_NP = integrativo_A ; -- Ita
--- lin Antonio_Antonio_NP = UseN Antonio_N ; -- Ita
oper Antonio_N = mkN "Antonio" ; -- Ita
--- lin Antonio_Boccere_NP = UttVP (UseV Boccere_V) ; -- Ita
oper Boccere_V = mkV "Boccere" ; -- Ita
lin Arturo_Carpe_NP = UsePN Carpe_PN ; -- Ita
oper Carpe_PN = mkPN "Carpe" ; -- Ita
--- lin Arturo_Arturo_NP = UttVP (UseV Arturo_V) ; -- Ita
oper Arturo_V = mkV "Arturo" ; -- Ita
lin Automi_Automo_NP = UsePN Automo_PN ; -- Ita
oper Automo_PN = mkPN "Automo" ; -- Ita
lin Barsi_Bare_NP = UsePN Bare_PN ; -- Ita
oper Bare_PN = mkPN "Bare" ; -- Ita
--- lin Basics_Language_NP = UseN Language_N ; -- Ita
oper Language_N = mkN "Language" ; -- Ita
lin Boccuto_Antonio_NP = UsePN Antonio_PN ; -- Ita
oper Antonio_PN = mkPN "Antonio" ; -- Ita
lin Bolchini_Bolchino_NP = UsePN Bolchino_PN ; -- Ita
oper Bolchino_PN = mkPN "Bolchino" ; -- Ita
lin Bruno_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Bruno_Iannazzo_NP = UsePN Iannazzo_PN ; -- Ita
oper Iannazzo_PN = mkPN "Iannazzo" ; -- Ita
lin CORMEN_introduzione_NP = UsePN introduzione_PN ; -- Ita
oper introduzione_PN = mkPN "introduzione" ; -- Ita
--- lin C_struttura_NP = UseN struttura_N ; -- Ita
lin C_Charu_NP = UsePN Charu_PN ; -- Ita
oper Charu_PN = mkPN "Charu" ; -- Ita
lin C_teoria_NP = UsePN teoria_PN ; -- Ita
oper teoria_PN = mkPN "teoria" ; -- Ita
--- lin Caratterizzante_Caratterizzare_NP = Caratterizzare_Det ; -- Ita
oper Caratterizzare_Det = mkDet "Caratterizzare" ; -- Ita
lin Carpi_Carpe_NP = UsePN Carpe_PN ; -- Ita
oper Carpe_PN = mkPN "Carpe" ; -- Ita
lin Cay_Cay_NP = UsePN Cay_PN ; -- Ita
oper Cay_PN = mkPN "Cay" ; -- Ita
--- lin Celsius_il_NP = UseN il_N ; -- Ita
oper il_N = mkN "il" ; -- Ita
--- lin Celsius_linguaggio_NP = UseN linguaggio_N ; -- Ita
lin Codocenza_Codocenza_NP = UsePN Codocenza_PN ; -- Ita
oper Codocenza_PN = mkPN "Codocenza" ; -- Ita
--- lin Computability_insegnamento_NP = UseN insegnamento_N ; -- Ita
lin Compute_Look_NP = UsePN Look_PN ; -- Ita
oper Look_PN = mkPN "Look" ; -- Ita
--- lin Configurations_Configurazioni_NP = UseN Configurazioni_N ; -- Ita
oper Configurazioni_N = mkN "Configurazioni" ; -- Ita
lin Cook_Edmonds_NP = UsePN Edmonds_PN ; -- Ita
oper Edmonds_PN = mkPN "Edmonds" ; -- Ita
lin Cornell_Graw_NP = UsePN Graw_PN ; -- Ita
oper Graw_PN = mkPN "Graw" ; -- Ita
lin Cristiana_Cristiana_NP = UsePN Cristiana_PN ; -- Ita
oper Cristiana_PN = mkPN "Cristiana" ; -- Ita
lin Cristina_Cristina_NP = UsePN Cristina_PN ; -- Ita
oper Cristina_PN = mkPN "Cristina" ; -- Ita
lin Custom_Science_NP = UsePN Science_PN ; -- Ita
oper Science_PN = mkPN "Science" ; -- Ita
lin Davis_Davis_NP = UsePN Davis_PN ; -- Ita
oper Davis_PN = mkPN "Davis" ; -- Ita
lin Deitel_Pearson_NP = UsePN Pearson_PN ; -- Ita
oper Pearson_PN = mkPN "Pearson" ; -- Ita
lin Didattica_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Didattica_Iannazzo_NP = UsePN Iannazzo_PN ; -- Ita
oper Iannazzo_PN = mkPN "Iannazzo" ; -- Ita
lin Didattica_ore_NP = UsePN ore_PN ; -- Ita
oper ore_PN = mkPN "ore" ; -- Ita
lin Didattica_ufficiale_NP = UsePN ufficiale_PN ; -- Ita
oper ufficiale_PN = mkPN "ufficiale" ; -- Ita
--- lin Distributed_ambiente_NP = UseN ambiente_N ; -- Ita
lin Dyslexia_Dislessia_NP = UsePN Dislessia_PN ; -- Ita
oper Dislessia_PN = mkPN "Dislessia" ; -- Ita
lin EXAMPLES_esempio_NP = UsePN esempio_PN ; -- Ita
oper esempio_PN = mkPN "esempio" ; -- Ita
lin Ebook_Booktab_NP = UsePN Booktab_PN ; -- Ita
oper Booktab_PN = mkPN "Booktab" ; -- Ita
--- lin English_inglese_NP = UseN inglese_N ; -- Ita
oper inglese_N = mkN "inglese" ; -- Ita
--- lin Esercitazioni_Esercitazione_NP = UseN Esercitazione_N ; -- Ita
oper Esercitazione_N = mkN "Esercitazione" ; -- Ita
lin F_f_NP = UsePN f_PN ; -- Ita
oper f_PN = mkPN "f" ; -- Ita
lin Francesco_Francesco_NP = UsePN Francesco_PN ; -- Ita
oper Francesco_PN = mkPN "Francesco" ; -- Ita
lin Francesco_ufficiale_NP = UsePN ufficiale_PN ; -- Ita
oper ufficiale_PN = mkPN "ufficiale" ; -- Ita
lin GCC_GCC_NP = UsePN GCC_PN ; -- Ita
oper GCC_PN = mkPN "GCC" ; -- Ita
lin GDB_GDB_NP = UsePN GDB_PN ; -- Ita
oper GDB_PN = mkPN "GDB" ; -- Ita
lin Gary_Cay_NP = UsePN Cay_PN ; -- Ita
oper Cay_PN = mkPN "Cay" ; -- Ita
lin Gentilini_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Hill_Hill_NP = UsePN Hill_PN ; -- Ita
oper Hill_PN = mkPN "Hill" ; -- Ita
lin Hill_Toffalore_NP = UsePN Toffalore_PN ; -- Ita
oper Toffalore_PN = mkPN "Toffalore" ; -- Ita
lin Horstmann_Horstmann_NP = UsePN Horstmann_PN ; -- Ita
oper Horstmann_PN = mkPN "Horstmann" ; -- Ita
--- lin Hypercube_di_il_ipercubo_NP = PrepNP di_Prep (DetCN il_Det (UseN ipercubo_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
oper ipercubo_N = mkN "ipercubo" ; -- Ita
lin Iannazzo_ufficiale_NP = UsePN ufficiale_PN ; -- Ita
oper ufficiale_PN = mkPN "ufficiale" ; -- Ita
--- lin Italian_lingua_NP = UseN lingua_N ; -- Ita
lin JAVA_il_NP = UsePN il_PN ; -- Ita
oper il_PN = mkPN "il" ; -- Ita
--- lin Java_java_NP = UseN java_N ; -- Ita
oper java_N = mkN "java" ; -- Ita
--- lin Java_Core_NP = UttVP (UseV Core_V) ; -- Ita
oper Core_V = mkV "Core" ; -- Ita
lin Karpatne_Karpatne_NP = UsePN Karpatne_PN ; -- Ita
oper Karpatne_PN = mkPN "Karpatne" ; -- Ita
lin Kirch_Pages_NP = UsePN Pages_PN ; -- Ita
oper Pages_PN = mkPN "Pages" ; -- Ita
lin Kumar_Kumar_NP = UsePN Kumar_PN ; -- Ita
oper Kumar_PN = mkPN "Kumar" ; -- Ita
lin Language_linguaggio_NP = UsePN linguaggio_PN ; -- Ita
oper linguaggio_PN = mkPN "linguaggio" ; -- Ita
lin Learning_MACHINE_NP = UsePN MACHINE_PN ; -- Ita
oper MACHINE_PN = mkPN "MACHINE" ; -- Ita
lin Logiche_Logico_NP = UsePN Logico_PN ; -- Ita
oper Logico_PN = mkPN "Logico" ; -- Ita
lin Manjikian_McGraw_NP = UsePN McGraw_PN ; -- Ita
oper McGraw_PN = mkPN "McGraw" ; -- Ita
lin Marco_Carlo_NP = UsePN Carlo_PN ; -- Ita
oper Carlo_PN = mkPN "Carlo" ; -- Ita
--- lin Marco_Bramare_NP = UttVP (UseV Bramare_V) ; -- Ita
oper Bramare_V = mkV "Bramare" ; -- Ita
lin Marcugini_Marcugino_NP = UsePN Marcugino_PN ; -- Ita
oper Marcugino_PN = mkPN "Marcugino" ; -- Ita
lin Maria_Maria_NP = UsePN Maria_PN ; -- Ita
oper Maria_PN = mkPN "Maria" ; -- Ita
lin McGraw_f_NP = UsePN f_PN ; -- Ita
oper f_PN = mkPN "f" ; -- Ita
--- lin Module_secondo_NP = secondo_A ; -- Ita
--- lin Monge_di_Monge_NP = PrepNP di_Prep (UsePN Monge_PN) ; -- Ita
oper Monge_PN = mkPN "Monge" ; -- Ita
--- lin NUMERICAL_insegnamento_NP = UseN insegnamento_N ; -- Ita
--- lin Naraig_introduzione_NP = UseN introduzione_N ; -- Ita
lin Navarra_ore_NP = UsePN ore_PN ; -- Ita
oper ore_PN = mkPN "ore" ; -- Ita
--- lin Navarra_Alfredere_NP = UttVP (UseV Alfredere_V) ; -- Ita
oper Alfredere_V = mkV "Alfredere" ; -- Ita
lin Niclà_Nicla_NP = UsePN Nicla_PN ; -- Ita
oper Nicla_PN = mkPN "Nicla" ; -- Ita
lin P_p_NP = UsePN p_PN ; -- Ita
oper p_PN = mkPN "p" ; -- Ita
lin Pagine_Pagine_NP = UsePN Pagine_PN ; -- Ita
oper Pagine_PN = mkPN "Pagine" ; -- Ita
lin Paola_Paola_NP = UsePN Paola_PN ; -- Ita
oper Paola_PN = mkPN "Paola" ; -- Ita
lin Pearson_Pearson_NP = UsePN Pearson_PN ; -- Ita
oper Pearson_PN = mkPN "Pearson" ; -- Ita
lin Pearson_computer_NP = UsePN computer_PN ; -- Ita
oper computer_PN = mkPN "computer" ; -- Ita
lin Peter_Peter_NP = UsePN Peter_PN ; -- Ita
oper Peter_PN = mkPN "Peter" ; -- Ita
lin Pinotti_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Pinotti_Pinurre_NP = UsePN Pinurre_PN ; -- Ita
oper Pinurre_PN = mkPN "Pinurre" ; -- Ita
lin Pipelining_Pipelining_NP = UsePN Pipelining_PN ; -- Ita
oper Pipelining_PN = mkPN "Pipelining" ; -- Ita
lin Poggioni_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Preflow_Matching_NP = UsePN Matching_PN ; -- Ita
oper Matching_PN = mkPN "Matching" ; -- Ita
lin Prinz_Prinz_NP = UsePN Prinz_PN ; -- Ita
oper Prinz_PN = mkPN "Prinz" ; -- Ita
--- lin Probability_probabilità_NP = UseN probabilità_N ; -- Ita
oper probabilità_N = mkN "probabilità" ; -- Ita
lin Procedural_programmazione_NP = UsePN programmazione_PN ; -- Ita
oper programmazione_PN = mkPN "programmazione" ; -- Ita
lin Raffaellà_Raffaello_NP = UsePN Raffaello_PN ; -- Ita
oper Raffaello_PN = mkPN "Raffaello" ; -- Ita
--- lin Reti_rete_NP = UttVP (UseV rete_V) ; -- Ita
oper rete_V = mkV "rete" ; -- Ita
lin Rubbioni_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Rubbioni_Rubbioni_NP = UsePN Rubbioni_PN ; -- Ita
oper Rubbioni_PN = mkPN "Rubbioni" ; -- Ita
--- lin SMAWK_di_il_massimo_NP = PrepNP di_Prep (DetCN il_Det (UseN massimo_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin Salsa_Domenico_NP = UsePN Domenico_PN ; -- Ita
oper Domenico_PN = mkPN "Domenico" ; -- Ita
lin Santini_Francesco_NP = UsePN Francesco_PN ; -- Ita
oper Francesco_PN = mkPN "Francesco" ; -- Ita
lin Santini_Santino_NP = UsePN Santino_PN ; -- Ita
oper Santino_PN = mkPN "Santino" ; -- Ita
lin Santoro_N_NP = UsePN N_PN ; -- Ita
oper N_PN = mkPN "N" ; -- Ita
--- lin Sergio_tasso_NP = UseN tasso_N ; -- Ita
lin Sergio_Sergio_NP = UsePN Sergio_PN ; -- Ita
oper Sergio_PN = mkPN "Sergio" ; -- Ita
--- lin Stefano_Stefare_NP = UttVP (UseV Stefare_V) ; -- Ita
oper Stefare_V = mkV "Stefare" ; -- Ita
lin Steinbach_Steinbach_NP = UsePN Steinbach_PN ; -- Ita
oper Steinbach_PN = mkPN "Steinbach" ; -- Ita
lin Tan_Tan_NP = UsePN Tan_PN ; -- Ita
oper Tan_PN = mkPN "Tan" ; -- Ita
lin Tasso_ufficiale_NP = UsePN ufficiale_PN ; -- Ita
oper ufficiale_PN = mkPN "ufficiale" ; -- Ita
lin Turing_universale_NP = UsePN universale_PN ; -- Ita
oper universale_PN = mkPN "universale" ; -- Ita
lin Ufficiale_Didattica_NP = UsePN Didattica_PN ; -- Ita
oper Didattica_PN = mkPN "Didattica" ; -- Ita
lin Ufficiale_Pinotto_NP = UsePN Pinotto_PN ; -- Ita
oper Pinotto_PN = mkPN "Pinotto" ; -- Ita
lin Ufficiale_Rubbioni_NP = UsePN Rubbioni_PN ; -- Ita
oper Rubbioni_PN = mkPN "Rubbioni" ; -- Ita
lin Ufficiale_Santino_NP = UsePN Santino_PN ; -- Ita
oper Santino_PN = mkPN "Santino" ; -- Ita
lin Ufficiale_ore_NP = UsePN ore_PN ; -- Ita
oper ore_PN = mkPN "ore" ; -- Ita
lin Ufficiale_ufficiale_NP = UsePN ufficiale_PN ; -- Ita
oper ufficiale_PN = mkPN "ufficiale" ; -- Ita
--- lin Ufficiale_Arturo_NP = UttVP (UseV Arturo_V) ; -- Ita
oper Arturo_V = mkV "Arturo" ; -- Ita
--- lin Ufficiale_Stefare_NP = UttVP (UseV Stefare_V) ; -- Ita
oper Stefare_V = mkV "Stefare" ; -- Ita
lin Unistudium_Unistudium_NP = UsePN Unistudium_PN ; -- Ita
oper Unistudium_PN = mkPN "Unistudium" ; -- Ita
--- lin Valentina_Poggioni_NP = UseN Poggioni_N ; -- Ita
oper Poggioni_N = mkN "Poggioni" ; -- Ita
--- lin Versioning_versionamento_NP = UseN versionamento_N ; -- Ita
oper versionamento_N = mkN "versionamento" ; -- Ita
lin Zaky_Zaky_NP = UsePN Zaky_PN ; -- Ita
oper Zaky_PN = mkPN "Zaky" ; -- Ita
lin Zanichelli_Zanichelli_NP = UsePN Zanichelli_PN ; -- Ita
oper Zanichelli_PN = mkPN "Zanichelli" ; -- Ita
--- lin advanced_insegnamento_NP = UseN insegnamento_N ; -- Ita
lin analysis_CALCOLO_NP = UsePN CALCOLO_PN ; -- Ita
oper CALCOLO_PN = mkPN "CALCOLO" ; -- Ita
lin analysis_matematica_NP = UsePN matematica_PN ; -- Ita
oper matematica_PN = mkPN "matematica" ; -- Ita
lin and_ADVANCED_NP = UsePN ADVANCED_PN ; -- Ita
oper ADVANCED_PN = mkPN "ADVANCED" ; -- Ita
--- lin area_ambito_NP = UttVP (UseV ambito_V) ; -- Ita
oper ambito_V = mkV "ambito" ; -- Ita
lin church_Church_NP = UsePN Church_PN ; -- Ita
oper Church_PN = mkPN "Church" ; -- Ita
--- lin computer_insegnamento_NP = UseN insegnamento_N ; -- Ita
lin computer_Architettura_NP = UsePN Architettura_PN ; -- Ita
oper Architettura_PN = mkPN "Architettura" ; -- Ita
lin computer_informatica_NP = UsePN informatica_PN ; -- Ita
oper informatica_PN = mkPN "informatica" ; -- Ita
lin election_leadere_NP = UsePN leadere_PN ; -- Ita
oper leadere_PN = mkPN "leadere" ; -- Ita
--- lin entities_Entità_NP = UseN Entità_N ; -- Ita
oper Entità_N = mkN "Entità" ; -- Ita
--- lin events_evente_NP = UseN evente_N ; -- Ita
oper evente_N = mkN "evente" ; -- Ita
--- lin hours_Arturo_NP = UttVP (UseV Arturo_V) ; -- Ita
oper Arturo_V = mkV "Arturo" ; -- Ita
--- lin hours_Boccere_NP = UttVP (UseV Boccere_V) ; -- Ita
oper Boccere_V = mkV "Boccere" ; -- Ita
--- lin hours_Stefare_NP = UttVP (UseV Stefare_V) ; -- Ita
oper Stefare_V = mkV "Stefare" ; -- Ita
lin laboratory_laboratorio_NP = UsePN laboratorio_PN ; -- Ita
oper laboratorio_PN = mkPN "laboratorio" ; -- Ita
lin look_modello_NP = UsePN modello_PN ; -- Ita
oper modello_PN = mkPN "modello" ; -- Ita
--- lin machine_di_macchina_NP = PrepNP di_Prep (MassNP (UseN macchina_N)) ; -- Ita
--- lin machine_insegnamento_NP = UseN insegnamento_N ; -- Ita
--- lin mathematical_analiso_NP = UttVP (UseV analiso_V) ; -- Ita
oper analiso_V = mkV "analiso" ; -- Ita
lin model_Compere_NP = UsePN Compere_PN ; -- Ita
oper Compere_PN = mkPN "Compere" ; -- Ita
lin move_Move_NP = UsePN Move_PN ; -- Ita
oper Move_PN = mkPN "Move" ; -- Ita
lin object_il_NP = UsePN il_PN ; -- Ita
oper il_PN = mkPN "il" ; -- Ita
lin oriented_Ad_NP = UsePN Ad_PN ; -- Ita
oper Ad_PN = mkPN "Ad" ; -- Ita
lin oriented_oggetti_NP = UsePN oggetti_PN ; -- Ita
oper oggetti_PN = mkPN "oggetti" ; -- Ita
--- lin pages_programmazione_NP = UseN programmazione_N ; -- Ita
--- lin problem_flusso_NP = UseN flusso_N ; -- Ita
lin program_programma_NP = UsePN programma_PN ; -- Ita
oper programma_PN = mkPN "programma" ; -- Ita
lin programme_PROCEDURALE_NP = UsePN PROCEDURALE_PN ; -- Ita
oper PROCEDURALE_PN = mkPN "PROCEDURALE" ; -- Ita
lin programming_con_NP = UsePN con_PN ; -- Ita
oper con_PN = mkPN "con" ; -- Ita
lin programming_oggetti_NP = UsePN oggetti_PN ; -- Ita
oper oggetti_PN = mkPN "oggetti" ; -- Ita
lin programming_programmazione_NP = UsePN programmazione_PN ; -- Ita
oper programmazione_PN = mkPN "programmazione" ; -- Ita
lin required_Required_NP = UsePN Required_PN ; -- Ita
oper Required_PN = mkPN "Required" ; -- Ita
--- lin responsible_si_NP = UttVP (UseV si_V) ; -- Ita
oper si_V = mkV "si" ; -- Ita
lin science_Library_NP = UsePN Library_PN ; -- Ita
oper Library_PN = mkPN "Library" ; -- Ita
--- lin share_condividere_NP = UttVP (UseV condividere_V) ; -- Ita
lin statistics_Statistica_NP = UsePN Statistica_PN ; -- Ita
oper Statistica_PN = mkPN "Statistica" ; -- Ita
lin structures_Structures_NP = UsePN Structures_PN ; -- Ita
oper Structures_PN = mkPN "Structures" ; -- Ita
--- lin supply_Erogare_NP = UttVP (UseV Erogare_V) ; -- Ita
oper Erogare_V = mkV "Erogare" ; -- Ita
lin systems_Distribuire_NP = UsePN Distribuire_PN ; -- Ita
oper Distribuire_PN = mkPN "Distribuire" ; -- Ita
lin unions_Unions_NP = UsePN Unions_PN ; -- Ita
oper Unions_PN = mkPN "Unions" ; -- Ita
lin whole_il_NP = UsePN il_PN ; -- Ita
oper il_PN = mkPN "il" ; -- Ita
lin with_con_NP = UsePN con_PN ; -- Ita
oper con_PN = mkPN "con" ; -- Ita
lin with_laboratorio_NP = UsePN laboratorio_PN ; -- Ita
oper laboratorio_PN = mkPN "laboratorio" ; -- Ita
--- lin Cfu_Cfu_NP = Cfu_Adv ; -- Ita
oper Cfu_Adv = mkAdv "Cfu" ; -- Ita
--- lin Mat_Mare_NP = Mare_Adv ; -- Ita
oper Mare_Adv = mkAdv "Mare" ; -- Ita
--- lin he_essere_NP = UttVP (UseV essere_V) ; -- Ita
--- lin i_MODULO_NP = UttVP (UseV MODULO_V) ; -- Ita
oper MODULO_V = mkV "MODULO" ; -- Ita
--- lin i_analiso_NP = UttVP (UseV analiso_V) ; -- Ita
oper analiso_V = mkV "analiso" ; -- Ita
--- lin it_collaborazione_NP = UseN collaborazione_N ; -- Ita
--- lin some_metodo_NP = UseN metodo_N ; -- Ita
--- lin solvable_Algorithmically_risolubile_Utt = risolubile_A ; -- Ita
oper risolubile_A = mkA "risolubile" ; -- Ita
--- lin course_regulation_regolamento_Utt = UseN regolamento_N ; -- Ita
--- lin extend_program_programma_esteso_Utt = PredVP (UsePN programma_PN) (UseV esteso_V) ; -- Ita
oper programma_PN = mkPN "programma" ; -- Ita
oper esteso_V = mkV "esteso" ; -- Ita
--- lin Algorithms_conoscenza_Utt = UseN conoscenza_N ; -- Ita
--- lin Broadcasting_Broadcasting_Utt = UseN Broadcasting_N ; -- Ita
oper Broadcasting_N = mkN "Broadcasting" ; -- Ita
--- lin Compil_Compilazione_Utt = UseN Compilazione_N ; -- Ita
oper Compilazione_N = mkN "Compilazione" ; -- Ita
--lin Comuno_comune_Utt = UttVP (UseV comune_V) ; -- Ita
--oper comune_V = mkV "comune" ; -- Ita
--- lin Debugge_Debugging_Utt = UseN Debugging_N ; -- Ita
oper Debugging_N = mkN "Debugging" ; -- Ita
--lin Distribute_distribuita_Utt = UttVP (UseV distribuita_V) ; -- Ita
--oper distribuita_V = mkV "distribuita" ; -- Ita
--lin Flood_Algoritmo_Utt = UttVP (UseV Algoritmo_V) ; -- Ita
--oper Algoritmo_V = mkV "Algoritmo" ; -- Ita
--- lin Gather_problema_Utt = UseN problema_N ; -- Ita
--- lin Gather_Gathering_Utt = UsePN Gathering_PN ; -- Ita
oper Gathering_PN = mkPN "Gathering" ; -- Ita
lin Learn_Conoscere_Utt = UttVP (UseV Conoscere_V) ; -- Ita
oper Conoscere_V = mkV "Conoscere" ; -- Ita
--- lin Multithreading_Multithreading_Utt = UsePN Multithreading_PN ; -- Ita
oper Multithreading_PN = mkPN "Multithreading" ; -- Ita
--- lin Np_problema_Utt = UsePN problema_PN ; -- Ita
oper problema_PN = mkPN "problema" ; -- Ita
--- lin Spanning_Spanning_Utt = UsePN Spanning_PN ; -- Ita
oper Spanning_PN = mkPN "Spanning" ; -- Ita
--lin Spanning_trea_Utt = UttVP (UseV trea_V) ; -- Ita
--oper trea_V = mkV "trea" ; -- Ita
--- lin Supervize_approccio_Utt = UseN approccio_N ; -- Ita
--- lin Tur_macchina_Utt = UseN macchina_N ; -- Ita
--- lin Turing_macchina_Utt = UseN macchina_N ; -- Ita
--- lin Wake_problema_Utt = UseN problema_N ; -- Ita
--- lin Wake_Up_Utt = UsePN Up_PN ; -- Ita
oper Up_PN = mkPN "Up" ; -- Ita
--- lin Wake_Wake_Utt = UsePN Wake_PN ; -- Ita
oper Wake_PN = mkPN "Wake" ; -- Ita
lin acquire_acquisire_Utt = UttVP (UseV acquisire_V) ; -- Ita
lin advance_avanzare_Utt = UttVP (UseV avanzare_V) ; -- Ita
--lin advance_combinatorico_Utt = UttVP (UseV combinatorico_V) ; -- Ita
--oper combinatorico_V = mkV "combinatorico" ; -- Ita
lin aim_finalizzare_Utt = UttVP (UseV finalizzare_V) ; -- Ita
lin aim_proporre_Utt = UttVP (UseV proporre_V) ; -- Ita
lin allow_consentire_Utt = UttVP (UseV consentire_V) ; -- Ita
lin apply_applicare_Utt = UttVP (UseV applicare_V) ; -- Ita
lin ask_porre_Utt = UttVP (UseV porre_V) ; -- Ita
lin attend_seguire_Utt = UttVP (UseV seguire_V) ; -- Ita
--- lin avail_corso_Utt = UseN corso_N ; -- Ita
lin base_banere_Utt = UttVP (UseV banere_V) ; -- Ita
oper banere_V = mkV "banere" ; -- Ita
--- lin be_colloquio_Utt = UseN colloquio_N ; -- Ita
lin build_realizzare_Utt = UttVP (UseV realizzare_V) ; -- Ita
lin carry_svogliere_Utt = UttVP (UseV svogliere_V) ; -- Ita
oper svogliere_V = mkV "svogliere" ; -- Ita
--- lin code_Codifica_Utt = UseN Codifica_N ; -- Ita
oper Codifica_N = mkN "Codifica" ; -- Ita
lin compare_comparare_Utt = UttVP (UseV comparare_V) ; -- Ita
--lin concrete_concreto_Utt = UttVP (UseV concreto_V) ; -- Ita
--oper concreto_V = mkV "concreto" ; -- Ita
--- lin control_elaboratore_Utt = UseN elaboratore_N ; -- Ita
lin count_contare_Utt = UttVP (UseV contare_V) ; -- Ita
lin covere_trattare_Utt = UttVP (UseV trattare_V) ; -- Ita
lin create_realizzare_Utt = UttVP (UseV realizzare_V) ; -- Ita
--- lin deep_Deep_Utt = UsePN Deep_PN ; -- Ita
oper Deep_PN = mkPN "Deep" ; -- Ita
lin discuss_discutere_Utt = UttVP (UseV discutere_V) ; -- Ita
lin establish_organizzare_Utt = UttVP (UseV organizzare_V) ; -- Ita
lin explore_approfondere_Utt = UttVP (UseV approfondere_V) ; -- Ita
oper approfondere_V = mkV "approfondere" ; -- Ita
lin expose_esporre_Utt = UttVP (UseV esporre_V) ; -- Ita
--lin extend_esteso_Utt = UttVP (UseV esteso_V) ; -- Ita
--oper esteso_V = mkV "esteso" ; -- Ita
--- lin face_lezione_Utt = UseN lezione_N ; -- Ita
--- lin find_triangulation_Utt = UseN triangulation_N ; -- Ita
oper triangulation_N = mkN "triangulation" ; -- Ita
--lin find_Closest_Utt = UttVP (UseV Closest_V) ; -- Ita
--oper Closest_V = mkV "Closest" ; -- Ita
lin flow_bipartire_Utt = UttVP (UseV bipartire_V) ; -- Ita
--- lin generalize_generalizzato_Utt = UseN generalizzato_N ; -- Ita
oper generalizzato_N = mkN "generalizzato" ; -- Ita
--- lin get_capacità_Utt = UseN capacità_N ; -- Ita
oper capacità_N = mkN "capacità" ; -- Ita
lin give_fornire_Utt = UttVP (UseV fornire_V) ; -- Ita
lin give_tenere_Utt = UttVP (UseV tenere_V) ; -- Ita
lin give_valutare_Utt = UttVP (UseV valutare_V) ; -- Ita
--- lin halt_problema_Utt = UseN problema_N ; -- Ita
--- lin have_opportuno_Utt = opportuno_A ; -- Ita
lin implement_realizzare_Utt = UttVP (UseV realizzare_V) ; -- Ita
--lin increas_Accrescimento_Utt = UttVP (UseV Accrescimento_V) ; -- Ita
--oper Accrescimento_V = mkV "Accrescimento" ; -- Ita
lin involve_prevedere_Utt = UttVP (UseV prevedere_V) ; -- Ita
lin know_calcolare_Utt = UttVP (UseV calcolare_V) ; -- Ita
lin know_sapere_Utt = UttVP (UseV sapere_V) ; -- Ita
--- lin machine_macchina_Utt = UseN macchina_N ; -- Ita
--- lin machine_macchina_Utt = UsePN macchina_PN ; -- Ita
oper macchina_PN = mkPN "macchina" ; -- Ita
lin make_commettere_Utt = UttVP (UseV commettere_V) ; -- Ita
--- lin need_educativo_Utt = UseN educativo_N ; -- Ita
oper educativo_N = mkN "educativo" ; -- Ita
--- lin note_dispense_Utt = dispense_A ; -- Ita
oper dispense_A = mkA "dispense" ; -- Ita
--- lin object_programmazione_Utt = UsePN programmazione_PN ; -- Ita
oper programmazione_PN = mkPN "programmazione" ; -- Ita
lin object_orientare_Utt = UttVP (UseV orientare_V) ; -- Ita
lin obtain_conseguire_Utt = UttVP (UseV conseguire_V) ; -- Ita
lin plan_prevedere_Utt = UttVP (UseV prevedere_V) ; -- Ita
lin prepare_preparare_Utt = UttVP (UseV preparare_V) ; -- Ita
lin present_presentare_Utt = UttVP (UseV presentare_V) ; -- Ita
--- lin present_presentare_Utt = presentare_A ; -- Ita
oper presentare_A = mkA "presentare" ; -- Ita
lin provide_fornire_Utt = UttVP (UseV fornire_V) ; -- Ita
lin relate_relazionare_Utt = UttVP (UseV relazionare_V) ; -- Ita
lin revisit_rivisitare_Utt = UttVP (UseV rivisitare_V) ; -- Ita
--- lin scope_noma_Utt = UsePN noma_PN ; -- Ita
oper noma_PN = mkPN "noma" ; -- Ita
--lin see_Calendario_Utt = UttVP (UseV Calendario_V) ; -- Ita
--oper Calendario_V = mkV "Calendario" ; -- Ita
--- lin solve_solving_problem_Utt = UseN (CompoundN solving_N problem_N) ; -- Ita
oper solving_N = mkN "solving" ; -- Ita
oper problem_N = mkN "problem" ; -- Ita
lin suggest_consigliare_Utt = UttVP (UseV consigliare_V) ; -- Ita
--- lin supplie_Coorte_Utt = UseN Coorte_N ; -- Ita
oper Coorte_N = mkN "Coorte" ; -- Ita
lin take_sostenere_Utt = UttVP (UseV sostenere_V) ; -- Ita
lin take_svolgere_Utt = UttVP (UseV svolgere_V) ; -- Ita
--- lin teaching_insegnamento_Utt = UseN insegnamento_N ; -- Ita
lin use_utilizzare_Utt = UttVP (UseV utilizzare_V) ; -- Ita
--- lin versione_licenza_Utt = UseN licenza_N ; -- Ita
--- lin versione_versione_Utt = UseN versione_N ; -- Ita
lin work_lavorare_Utt = UttVP (UseV lavorare_V) ; -- Ita
lin write_prevedere_Utt = UttVP (UseV prevedere_V) ; -- Ita
--- lin able_grado_A = UseN grado_N ; -- Ita
--- lin able_effettuare_A = UttVP (UseV effettuare_V) ; -- Ita
lin addition_materiale_A = materiale_A ; -- Ita
lin advance_avanzato_A = avanzato_A ; -- Ita
--- lin affini_integrativo_Adv = integrativo_A ; -- Ita
lin also_anche_Adv = anche_Adv ; -- Ita
lin also_inoltre_Adv = inoltre_Adv ; -- Ita
lin anomaly_detection_A = detection_A ; -- Ita
oper detection_A = mkA "detection" ; -- Ita
--- lin architecture_architettura_Adv = UseN architettura_N ; -- Ita
--- lin array_Array_Adv = UsePN Array_PN ; -- Ita
oper Array_PN = mkPN "Array" ; -- Ita
--- lin assembly_linguaggio_Adv = UseN linguaggio_N ; -- Ita
lin assigned_scritto_A = scritto_A ; -- Ita
--- lin basic_di_programmazione_A = PrepNP di_Prep (MassNP (UseN programmazione_N)) ; -- Ita
lin best_migliore_A = migliore_A ; -- Ita
lin classic_classico_A = classico_A ; -- Ita
--- lin code_codice_Prep = UsePN codice_PN ; -- Ita
oper codice_PN = mkPN "codice" ; -- Ita
lin collaborative_generale_A = generale_A ; -- Ita
lin complete_completo_A = completo_A ; -- Ita
lin computational_numerico_A = numerico_A ; -- Ita
lin constructivist_comportamentista_A = comportamentista_A ; -- Ita
oper comportamentista_A = mkA "comportamentista" ; -- Ita
--- lin critical_capacità_A = UseN capacità_N ; -- Ita
oper capacità_N = mkN "capacità" ; -- Ita
--- lin derivative_derivato_A = UseN derivato_N ; -- Ita
oper derivato_N = mkN "derivato" ; -- Ita
--- lin derivative_valore_A = UseN valore_N ; -- Ita
--- lin di_analiso_Adv = UseN analiso_N ; -- Ita
oper analiso_N = mkN "analiso" ; -- Ita
lin double_Integrale_A = Integrale_A ; -- Ita
oper Integrale_A = mkA "Integrale" ; -- Ita
lin dynamic_dinamico_A = dinamico_A ; -- Ita
--- lin dyscalculia_discalculia_Adv = UseN discalculia_N ; -- Ita
oper discalculia_N = mkN "discalculia" ; -- Ita
lin education_specali_A = specali_A ; -- Ita
oper specali_A = mkA "specali" ; -- Ita
--- lin familiar_avere_A = UttVP (UseV avere_V) ; -- Ita
--- lin fdirst_di_base_Adv = PrepNP di_Prep (MassNP (UseN base_N)) ; -- Ita
--- lin fifteen_quindici_circa_Adv = UttVP (AdvVP (UseAdv quindici_Adv) circa_Adv) ; -- Ita
oper quindici_Adv = mkAdv "quindici" ; -- Ita
lin final_finale_A = finale_A ; -- Ita
lin finally_infine_Adv = infine_Adv ; -- Ita
--- lin fondamenti_Mc_Adv = UsePN Mc_PN ; -- Ita
oper Mc_PN = mkPN "Mc" ; -- Ita
lin frequent_frequente_A = frequente_A ; -- Ita
lin functional_funzionale_A = funzionale_A ; -- Ita
lin fundamental_fondamentale_A = fondamentale_A ; -- Ita
--- lin further_di_teoria_A = PrepNP di_Prep (MassNP (UseN teoria_N)) ; -- Ita
--- lin general_di_il_disciplina_A = PrepNP di_Prep (DetCN il_Det (UseN disciplina_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin general_generale_A = generale_A ; -- Ita
--- lin hull_Covex_Adv = UsePN Covex_PN ; -- Ita
oper Covex_PN = mkPN "Covex" ; -- Ita
--- lin important_puntatore_A = UseN puntatore_N ; -- Ita
oper puntatore_N = mkN "puntatore" ; -- Ita
lin important_importante_A = importante_A ; -- Ita
--- lin in_profitto_Prep = UseN profitto_N ; -- Ita
lin inclusive_comprensivo_A = comprensivo_A ; -- Ita
lin inevitable_inevitabile_A = inevitabile_A ; -- Ita
--- lin informatica_informatico_Adv = informatico_A ; -- Ita
--- lin integrative_attività_A = UseN attività_N ; -- Ita
oper attività_N = mkN "attività" ; -- Ita
lin lab_pratico_A = pratico_A ; -- Ita
--- lin listen_di_ascolgere_A = PrepNP di_Prep (MassNP (UseN ascolgere_N)) ; -- Ita
oper ascolgere_N = mkN "ascolgere" ; -- Ita
lin local_locale_A = locale_A ; -- Ita
lin logic_logico_A = logico_A ; -- Ita
lin lower_numerico_A = numerico_A ; -- Ita
--- lin material_eventuale_A = UseN eventuale_N ; -- Ita
oper eventuale_N = mkN "eventuale" ; -- Ita
lin material_dispense_A = dispense_A ; -- Ita
oper dispense_A = mkA "dispense" ; -- Ita
lin mathematical_metodologico_A = metodologico_A ; -- Ita
--- lin monodisciplinare_monodisciplinare_Adv = UttVP (UseV monodisciplinare_V) ; -- Ita
oper monodisciplinare_V = mkV "monodisciplinare" ; -- Ita
lin most_più_Adv = più_Adv ; -- Ita
lin multiple_multiple_A = multiple_A ; -- Ita
oper multiple_A = mkA "multiple" ; -- Ita
--- lin not_similare_Adv = similare_A ; -- Ita
lin numerical_elementare_A = elementare_A ; -- Ita
--- lin o_formativo_Adv = formativo_A ; -- Ita
--- lin oral_esame_A = esame_Adv ; -- Ita
oper esame_Adv = mkAdv "esame" ; -- Ita
lin oral_orale_A = orale_A ; -- Ita
lin other_altro_A = altro_A ; -- Ita
--- lin particular_particolare_A = UseN particolare_N ; -- Ita
oper particolare_N = mkN "particolare" ; -- Ita
--- lin period_periodo_Adv = UttVP (UseV periodo_V) ; -- Ita
oper periodo_V = mkV "periodo" ; -- Ita
lin personal_personale_A = personale_A ; -- Ita
--- lin possible_dispositivo_A = UseN dispositivo_N ; -- Ita
--- lin possible_essere_A = UttVP (UseV essere_V) ; -- Ita
lin possible_possibili_A = possibili_A ; -- Ita
oper possibili_A = mkA "possibili" ; -- Ita
lin psychological_psicologico_A = psicologico_A ; -- Ita
lin recursive_ricorsivere_A = ricorsivere_A ; -- Ita
oper ricorsivere_A = mkA "ricorsivere" ; -- Ita
lin related_dettagliato_A = dettagliato_A ; -- Ita
--- lin second_secondo_Semestre_A = PrepNP secondo_Prep (UsePN Semestre_PN) ; -- Ita
oper Semestre_PN = mkPN "Semestre" ; -- Ita
lin strongly_fortemente_Adv = fortemente_Adv ; -- Ita
--- lin student_di_il_studente_A = PrepNP di_Prep (DetCN il_Det (UseN studente_N)) ; -- Ita
oper il_Det = mkDet "il" ; -- Ita
lin theoretic_teorico_A = teorico_A ; -- Ita
lin three_tre_Adv = tre_Adv ; -- Ita
oper tre_Adv = mkAdv "tre" ; -- Ita
lin two_due_Adv = due_Adv ; -- Ita
oper due_Adv = mkAdv "due" ; -- Ita
lin unico_unico_A = unico_A ; -- Ita
lin unique_unico_A = unico_A ; -- Ita
lin unsolvable_insolubile_A = insolubile_A ; -- Ita
--- lin upper_estere_A = UseN estere_N ; -- Ita
oper estere_N = mkN "estere" ; -- Ita
lin useful_utile_A = utile_A ; -- Ita
lin variable_medio_A = medio_A ; -- Ita
lin variable_variabile_A = variabile_A ; -- Ita
lin various_vario_A = vario_A ; -- Ita
} -- Ita
