concrete CSESwe of CSE = ExtractSwe, CoursePlansSynSwe ** open MorphoDictSwe, ParadigmsSwe, MakeStructuralSwe in { -- Swe
lin artificial_intelligence_Intellig_Artificiell_CN = AdvCN (UseN Intellig_N) Artificiell_Adv ; -- Swe
oper Intellig_N = mkN "Intellig" ; -- Swe
oper Artificiell_Adv = mkAdv "Artificiell" ; -- Swe
lin basic_concept_grundläggande_begrepp_CN = AdjCN (PositA grundläggande_A) (UseN begrepp_N) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin circuit_technique_kretstekniker_CN = UseN kretstekniker_N ; -- Swe
oper kretstekniker_N = mkN "kretstekniker" ; -- Swe
--- lin compulsory_element_inklusive_obligatorisk_moment_CN = PrepNP inklusive_Prep (MassNP (AdjCN (PositA obligatorisk_A) (UseN moment_N))) ; -- Swe
--- lin functional_program_possess_funktionell_program_CN = PrepNP possess_Prep (MassNP (AdjCN (PositA funktionell_A) (UseN program_N))) ; -- Swe
lin high_code_quality_hög_kodkvalitet_CN = AdjCN (PositA hög_A) (UseN kodkvalitet_N) ; -- Swe
oper kodkvalitet_N = mkN "kodkvalitet" ; -- Swe
lin other_programme_languag_annan_programspråk_CN = AdjCN (PositA annan_A) (UseN programspråk_N) ; -- Swe
oper annan_A = mkA "annan" ; -- Swe
--- lin parallel_program_for_a_dela_adressutrymme_CN = PrepNP for_Prep (DetCN a_Det (AdjCN (PositA dela_A) (UseN adressutrymme_N))) ; -- Swe
oper dela_A = mkA "dela" ; -- Swe
oper adressutrymme_N = mkN "adressutrymme" ; -- Swe
lin possible_topics_Kurs_CN = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
lin relevant_program_library_relevant_programbibliotek_CN = AdjCN (PositA relevant_A) (UseN programbibliotek_N) ; -- Swe
oper programbibliotek_N = mkN "programbibliotek" ; -- Swe
lin sample_program_exempelprogram_CN = UseN exempelprogram_N ; -- Swe
oper exempelprogram_N = mkN "exempelprogram" ; -- Swe
lin Automatic_Automatisk_A = Automatisk_A ; -- Swe
oper Automatisk_A = mkA "Automatisk" ; -- Swe
lin Bayesian_Bayesiansk_A = Bayesiansk_A ; -- Swe
oper Bayesiansk_A = mkA "Bayesiansk" ; -- Swe
lin Concrete_specifik_A = specifik_A ; -- Swe
lin Concurrent_parallell_A = parallell_A ; -- Swe
--- lin a_basic_sound_knowledge_in_logic_grundläggande_kunskap_in_logik_NP = PrepCN (AdjCN (PositA grundläggande_A) (UseN kunskap_N)) (PrepNP in_Prep (MassNP (UseN logik_N))) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
--- lin a_comprehensive_knowledge_possess_the_language_omfattande_kunskap_NP = AdjCN (PositA omfattande_A) (UseN kunskap_N) ; -- Swe
oper omfattande_A = mkA "omfattande" ; -- Swe
lin a_contemporary_object_a_objektorienterad_modernt_programmeringsspråk_NP = DetCN a_Det (AdjCN (PositA objektorienterad_A) (AdjCN (PositA modernt_A) (UseN programmeringsspråk_N))) ; -- Swe
oper objektorienterad_A = mkA "objektorienterad" ; -- Swe
oper modernt_A = mkA "modernt" ; -- Swe
--- lin a_scientific_text_possess_a_vetenskaplig_text_NP = PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA vetenskaplig_A) (UseN text_N))) ; -- Swe
lin a_sound_basis_a_sund_grund_NP = DetCN a_Det (AdjCN (PositA sund_A) (UseN grund_N)) ; -- Swe
oper grund_N = mkN "grund" ; -- Swe
lin a_function_a_funktion_NP = DetCN a_Det (UseN funktion_N) ; -- Swe
lin a_introduction_a_inledning_NP = DetCN a_Det (UseN inledning_N) ; -- Swe
lin a_introduction_a_introduktion_NP = DetCN a_Det (UseN introduktion_N) ; -- Swe
--- lin a_topic_possess_a_ämnesområde_NP = PrepNP possess_Prep (DetCN a_Det (UseN ämnesområde_N)) ; -- Swe
lin all_mandatory_assignment_all_obligatorisk_uppgift_NP = DetCN all_Det (AdjCN (PositA obligatorisk_A) (UseN uppgift_N)) ; -- Swe
oper all_Det = mkDet "all" ; -- Swe
--- lin the_available_method_vetenskaplig_litteratur_NP = AdjCN (PositA vetenskaplig_A) (UseN litteratur_N) ; -- Swe
lin the_basic_skill_den_grundläggande_färdighet_NP = DetCN den_Det (AdjCN (PositA grundläggande_A) (UseN färdighet_N)) ; -- Swe
oper den_Det = mkDet "den" ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
--- lin the_core_functionality_possess_modern_operat_system_grundläggande_funktion_in_modern_operativsystem_NP = PrepCN (AdjCN (PositA grundläggande_A) (UseN funktion_N)) (PrepNP in_Prep (MassNP (AdjCN (PositA modern_A) (UseN operativsystem_N)))) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin the_course_material_a_skriftlig_tentamen_NP = DetCN a_Det (AdjCN (PositA skriftlig_A) (UseN tentamen_N)) ; -- Swe
--- lin the_dual_form_possess_dual_former_NP = PrepNP possess_Prep (MassNP (AdjCN (PositA dual_A) (UseN former_N))) ; -- Swe
oper dual_A = mkA "dual" ; -- Swe
oper former_N = mkN "former" ; -- Swe
--- lin the_energy_consumption_possess_different_system_energiförbrukning_for_olik_systemkonfiguration_NP = PrepCN (UseN energiförbrukning_N) (PrepNP for_Prep (MassNP (AdjCN (PositA olik_A) (UseN systemkonfiguration_N)))) ; -- Swe
oper systemkonfiguration_N = mkN "systemkonfiguration" ; -- Swe
--- lin the_energy_consumption_possess_certain_component_in_the_system_energiförbrukning_for_viss_komponent_NP = PrepCN (UseN energiförbrukning_N) (PrepNP for_Prep (MassNP (AdjCN (PositA viss_A) (UseN komponent_N)))) ; -- Swe
--- lin the_energy_consumption_possess_computer_system_arkitektur_NP = UseN arkitektur_N ; -- Swe
--- lin the_follow_concepts_följande_begrepp_NP = AdjCN (PositA följande_A) (UseN begrepp_N) ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
--- lin the_follow_topic_följande_ämne_NP = AdjCN (PositA följande_A) (UseN ämne_N) ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
--- lin the_follow_topics_följande_moment_NP = AdjCN (PositA följande_A) (UseN moment_N) ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
--- lin the_functional_approach_funktionell_programmering_NP = AdjCN (PositA funktionell_A) (UseN programmering_N) ; -- Swe
--- lin the_scientific_literature_tillgänglig_metod_NP = AdjCN (PositA tillgänglig_A) (UseN metod_N) ; -- Swe
--- lin the_upper_limit_for_a_parallell_program_NP = PrepNP for_Prep (DetCN a_Det (AdjCN (PositA parallell_A) (UseN program_N))) ; -- Swe
--- lin the_development_possess_parallel_program_for_address_space_parallell_program_for_distribuerad_adressutrymme_NP = PrepCN (AdjCN (PositA parallell_A) (UseN program_N)) (PrepNP for_Prep (MassNP (AdjCN (PositA distribuerad_A) (UseN adressutrymme_N)))) ; -- Swe
oper distribuerad_A = mkA "distribuerad" ; -- Swe
oper adressutrymme_N = mkN "adressutrymme" ; -- Swe
--- lin the_principle_behind_a_modern_microprocessor_for_princip_bakom_a_modern_mikroprocessa_NP = PrepNP for_Prep (MassNP (PrepCN (UseN princip_N) (PrepNP bakom_Prep (DetCN a_Det (AdjCN (PositA modern_A) (UseN mikroprocessa_N)))))) ; -- Swe
oper mikroprocessa_N = mkN "mikroprocessa" ; -- Swe
--- lin the_software_possess_a_embed_system_mjukvara_in_a_inbygg_system_NP = PrepCN (UseN mjukvara_N) (PrepNP in_Prep (DetCN a_Det (AdjCN (PositA inbygg_A) (UseN system_N)))) ; -- Swe
oper inbygg_A = mkA "inbygg" ; -- Swe
--- lin the_topic_possess_the_course_Kurs_NP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
--- lin the_course_cover_Kurs_NP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
--- lin the_ae_in_synnerhet_NP = PrepNP in_Prep (MassNP (UseN synnerhet_N)) ; -- Swe
oper synnerhet_N = mkN "synnerhet" ; -- Swe
--- lin the_bottleneck_flaskhals_NP = UseN flaskhals_N ; -- Swe
--- lin the_content_Kursinnehåll_NP = UseN Kursinnehåll_N ; -- Swe
oper Kursinnehåll_N = mkN "Kursinnehåll" ; -- Swe
--- lin the_course_Kurs_NP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
--- lin the_course_kurs_NP = UseN kurs_N ; -- Swe
--- lin the_language_språk_NP = UseN språk_N ; -- Swe
--- lin the_lecture_Föreläsning_NP = UseN Föreläsning_N ; -- Swe
oper Föreläsning_N = mkN "Föreläsning" ; -- Swe
--- lin the_method_optimering_NP = UseN optimering_N ; -- Swe
--- lin the_participant_Student_NP = UseN Student_N ; -- Swe
oper Student_N = mkN "Student" ; -- Swe
--- lin the_participant_Undervisning_NP = UseN Undervisning_N ; -- Swe
oper Undervisning_N = mkN "Undervisning" ; -- Swe
--- lin the_student_Studenten_NP = UseN Studenten_N ; -- Swe
oper Studenten_N = mkN "Studenten" ; -- Swe
--- lin the_student_elev_NP = UseN elev_N ; -- Swe
--- lin the_student_student_NP = UseN student_N ; -- Swe
--- lin the_topic_deltagare_NP = UseN deltagare_N ; -- Swe
lin this_part_cover_denna_del_NP = DetCN denna_Det (UseN del_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
--- lin this_approach_Uppdelning_in_process_NP = PrepCN (UseN Uppdelning_N) (PrepNP in_Prep (MassNP (UseN process_N))) ; -- Swe
oper Uppdelning_N = mkN "Uppdelning" ; -- Swe
--- lin this_bottleneck_effektivitet_NP = UseN effektivitet_N ; -- Swe
lin this_course_denna_kurs_NP = DetCN denna_Det (UseN kurs_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
--- lin this_course_in_kurs_NP = PrepNP in_Prep (MassNP (UseN kurs_N)) ; -- Swe
--- lin this_course_Kurs_NP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
lin this_function_denna_funktion_NP = DetCN denna_Det (UseN funktion_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin this_technique_denna_princip_NP = DetCN denna_Det (UseN princip_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin Formulate_inbyggd_A = inbyggd_A ; -- Swe
lin Functional_Funktionell_A = Funktionell_A ; -- Swe
oper Funktionell_A = mkA "Funktionell" ; -- Swe
lin Lexical_lexikal_A = lexikal_A ; -- Swe
--- lin Logic_logik_Adv = UseN logik_N ; -- Swe
lin Logistic_Övervakad_A = Övervakad_A ; -- Swe
oper Övervakad_A = mkA "Övervakad" ; -- Swe
lin Mathematical_Matematisk_A = Matematisk_A ; -- Swe
oper Matematisk_A = mkA "Matematisk" ; -- Swe
lin Methodological_Metodologisk_A = Metodologisk_A ; -- Swe
oper Metodologisk_A = mkA "Metodologisk" ; -- Swe
lin Moore_först_A = först_A ; -- Swe
oper först_A = mkA "först" ; -- Swe
lin NLP_språkteknologisk_A = språkteknologisk_A ; -- Swe
oper språkteknologisk_A = mkA "språkteknologisk" ; -- Swe
lin Operat_stationär_A = stationär_A ; -- Swe
lin Operational_stark_A = stark_A ; -- Swe
--- lin natural_language_process_grundläggande_språkteknologi_Cl = AdjCN (PositA grundläggande_A) (UseN språkteknologi_N) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
oper språkteknologi_N = mkN "språkteknologi" ; -- Swe
--- lin Examination_include_compulsory_element_Examination_inklusive_obligatorisk_moment_Cl = PrepCN (UseN Examination_N) (PrepNP inklusive_Prep (MassNP (AdjCN (PositA obligatorisk_A) (UseN moment_N)))) ; -- Swe
oper Examination_N = mkN "Examination" ; -- Swe
--- lin Reinforcement_learn_Reinforcement_learning_Cl = AdjCN (PositA Reinforcement_A) (UseN learning_N) ; -- Swe
oper Reinforcement_A = mkA "Reinforcement" ; -- Swe
oper learning_N = mkN "learning" ; -- Swe
--- lin Machine_learn_Maskininlärning_Cl = UseN Maskininlärning_N ; -- Swe
oper Maskininlärning_N = mkN "Maskininlärning" ; -- Swe
lin energy_measure_consumption_possess_the_whole_system_energiförbrukning_in_hel_system_CN = PrepCN (UseN energiförbrukning_N) (PrepNP in_Prep (MassNP (AdjCN (PositA hel_A) (UseN system_N)))) ; -- Swe
--- lin interpret_requirement_on_the_architecture_possess_computer_system_tolken_omvärld_CN = DetCN tolken_Det (UseN omvärld_N) ; -- Swe
oper tolken_Det = mkDet "tolken" ; -- Swe
lin about_literature_om_litteratur_PP = PrepNP om_Prep (MassNP (UseN litteratur_N)) ; -- Swe
lin after_the_course_efter_kurs_PP = PrepNP efter_Prep (MassNP (UseN kurs_N)) ; -- Swe
--- lin after_successful_completion_possess_the_course_participant_student_PP = UseN student_N ; -- Swe
lin as_Gpus_on_accelerator_PP = PrepNP on_Prep (MassNP (UseN accelerator_N)) ; -- Swe
lin at_the_system_level_on_systemnivå_PP = PrepNP on_Prep (MassNP (UseN systemnivå_N)) ; -- Swe
oper systemnivå_N = mkN "systemnivå" ; -- Swe
lin for_the_course_to_kurs_PP = PrepNP to_Prep (MassNP (UseN kurs_N)) ; -- Swe
lin for_approximation_for_approximation_PP = PrepNP for_Prep (MassNP (UseN approximation_N)) ; -- Swe
lin for_data_for_data_PP = PrepNP for_Prep (MassNP (UseN data_N)) ; -- Swe
oper data_N = mkN "data" ; -- Swe
--- lin for_future_operativsyste_PP = UseN operativsyste_N ; -- Swe
oper operativsyste_N = mkN "operativsyste" ; -- Swe
lin for_improvement_to_förbättring_PP = PrepNP to_Prep (MassNP (UseN förbättring_N)) ; -- Swe
--- lin for_instance_enkel_PP = enkel_A ; -- Swe
lin for_sustainability_possess_hållbarhet_PP = PrepNP possess_Prep (MassNP (UseN hållbarhet_N)) ; -- Swe
lin for_text_for_sekvensdata_PP = PrepNP for_Prep (MassNP (UseN sekvensdata_N)) ; -- Swe
oper sekvensdata_N = mkN "sekvensdata" ; -- Swe
lin from_the_second_cycle_utöver_grundläggande_behörighet_PP = PrepNP utöver_Prep (MassNP (AdjCN (PositA grundläggande_A) (UseN behörighet_N))) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin in_a_crucial_way_on_logical_technique_on_a_avgörande_sätt_in_logisk_tekniker_PP = PrepNP on_Prep (DetCN a_Det (PrepCN (AdjCN (PositA avgörande_A) (UseN sätt_N)) (PrepNP in_Prep (MassNP (AdjCN (PositA logisk_A) (UseN tekniker_N)))))) ; -- Swe
oper avgörande_A = mkA "avgörande" ; -- Swe
lin in_any_technical_system_almost_in_all_teknisk_system_idag_nästan_PP = PrepNP in_Prep (DetCN all_Det (AdvCN (AdjCN (PositA teknisk_A) (AdvCN (UseN system_N) idag_Adv)) nästan_Adv)) ; -- Swe
oper all_Det = mkDet "all" ; -- Swe
lin in_the_parallel_implementation_possess_the_program_in_parallell_implementering_possess_program_PP = PrepNP in_Prep (MassNP (PrepCN (AdjCN (PositA parallell_A) (UseN implementering_N)) (PrepNP possess_Prep (MassNP (UseN program_N))))) ; -- Swe
lin in_the_execution_possess_a_parallel_program_vid_exekverande_possess_a_parallell_program_PP = PrepNP vid_Prep (MassNP (PrepCN (UseN exekverande_N) (PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA parallell_A) (UseN program_N)))))) ; -- Swe
lin in_the_course_under_kurs_PP = PrepNP under_Prep (MassNP (UseN kurs_N)) ; -- Swe
--- lin in_the_course_Kurs_PP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
lin in_the_field_inom_område_PP = PrepNP inom_Prep (MassNP (UseN område_N)) ; -- Swe
lin in_the_lecture_under_föreläsning_PP = PrepNP under_Prep (MassNP (UseN föreläsning_N)) ; -- Swe
lin in_the_system_in_system_PP = PrepNP in_Prep (MassNP (UseN system_N)) ; -- Swe
lin in_the_system_possess_process_PP = PrepNP possess_Prep (MassNP (UseN process_N)) ; -- Swe
lin in_this_course_in_kurs_PP = PrepNP in_Prep (MassNP (UseN kurs_N)) ; -- Swe
lin in_this_field_inom_denna_område_PP = PrepNP inom_Prep (DetCN denna_Det (UseN område_N)) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin in_computer_science_for_datavetenskap_PP = PrepNP for_Prep (MassNP (UseN datavetenskap_N)) ; -- Swe
oper datavetenskap_N = mkN "datavetenskap" ; -- Swe
lin in_industry_inom_industri_PP = PrepNP inom_Prep (MassNP (UseN industri_N)) ; -- Swe
oper industri_N = mkN "industri" ; -- Swe
lin in_logic_in_logik_PP = PrepNP in_Prep (MassNP (UseN logik_N)) ; -- Swe
lin in_optimization_in_optimering_PP = PrepNP in_Prep (MassNP (UseN optimering_N)) ; -- Swe
lin in_parallel_on_pipelining_PP = PrepNP on_Prep (MassNP (UseN pipelining_N)) ; -- Swe
oper pipelining_N = mkN "pipelining" ; -- Swe
--- lin in_software_a_miljard_PP = DetCN a_Det (UseN miljard_N) ; -- Swe
lin in_practical_application_in_praktisk_tillämpning_PP = PrepNP in_Prep (MassNP (AdjCN (PositA praktisk_A) (UseN tillämpning_N))) ; -- Swe
lin in_mathematics_igenom_grundläggande_matematisk_begrepp_PP = PrepNP igenom_Prep (MassNP (AdjCN (PositA grundläggande_A) (AdjCN (PositA matematisk_A) (UseN begrepp_N)))) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin in_NLP_inom_NLP_PP = PrepNP inom_Prep (UsePN NLP_PN) ; -- Swe
oper NLP_PN = mkPN "NLP" ; -- Swe
lin in_c_in_c_PP = PrepNP in_Prep (UsePN c_PN) ; -- Swe
oper c_PN = mkPN "c" ; -- Swe
lin into_the_follow_part_in_följande_del_PP = PrepNP in_Prep (MassNP (AdjCN (PositA följande_A) (UseN del_N))) ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
lin into_multiple_in_multipla_PP = PrepNP in_Prep (MassNP (UseN multipla_N)) ; -- Swe
oper multipla_N = mkN "multipla" ; -- Swe
--- lin next_the_course_därefter_PP = därefter_Adv ; -- Swe
lin on_a_write_exam_utifrån_a_skriftlig_tentamen_PP = PrepNP utifrån_Prep (DetCN a_Det (AdjCN (PositA skriftlig_A) (UseN tentamen_N))) ; -- Swe
lin on_a_chip_on_a_chip_PP = PrepNP on_Prep (DetCN a_Det (UseN chip_N)) ; -- Swe
lin on_the_result_on_the_write_exam_on_resultat_possess_den_skriftlig_tentamen_PP = PrepNP on_Prep (MassNP (PrepCN (UseN resultat_N) (PrepNP possess_Prep (DetCN den_Det (AdjCN (PositA skriftlig_A) (UseN tentamen_N)))))) ; -- Swe
oper den_Det = mkDet "den" ; -- Swe
lin on_the_model_on_modell_PP = PrepNP on_Prep (MassNP (UseN modell_N)) ; -- Swe
lin on_performance_on_prestanda_PP = PrepNP on_Prep (MassNP (UseN prestanda_N)) ; -- Swe
oper prestanda_N = mkN "prestanda" ; -- Swe
lin on_technology_on_teknik_PP = PrepNP on_Prep (MassNP (UseN teknik_N)) ; -- Swe
lin over_the_last_several_decade_in_själv_verk_PP = PrepNP in_Prep (MassNP (AdjCN (PositA själv_A) (UseN verk_N))) ; -- Swe
oper själv_A = mkA "själv" ; -- Swe
lin possess_a_embed_system_in_a_inbygg_system_PP = PrepNP in_Prep (DetCN a_Det (AdjCN (PositA inbygg_A) (UseN system_N))) ; -- Swe
oper inbygg_A = mkA "inbygg" ; -- Swe
lin possess_a_operat_system_for_kommande_kurs_PP = PrepNP for_Prep (MassNP (AdjCN (PositA kommande_A) (UseN kurs_N))) ; -- Swe
oper kommande_A = mkA "kommande" ; -- Swe
lin possess_a_task_for_a_process_PP = PrepNP for_Prep (DetCN a_Det (UseN process_N)) ; -- Swe
lin possess_the_whole_system_in_hel_system_PP = PrepNP in_Prep (MassNP (AdjCN (PositA hel_A) (UseN system_N))) ; -- Swe
lin possess_the_course_som_praktik_PP = PrepNP som_Prep (MassNP (UseN praktik_N)) ; -- Swe
oper som_Prep = mkPrep "som" ; -- Swe
--- lin possess_the_course_Kurs_PP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
--- lin possess_the_course_kurs_PP = UseN kurs_N ; -- Swe
--- lin possess_the_course_programspråk_PP = UseN programspråk_N ; -- Swe
--- lin possess_the_course_fullgjord_PP = fullgjord_A ; -- Swe
lin possess_the_discussion_possess_diskussion_PP = PrepNP possess_Prep (MassNP (UseN diskussion_N)) ; -- Swe
--- lin possess_the_lab_pedagogisk_PP = pedagogisk_A ; -- Swe
lin possess_the_program_possess_program_PP = PrepNP possess_Prep (MassNP (UseN program_N)) ; -- Swe
--- lin possess_the_system_system_PP = UseN system_N ; -- Swe
lin possess_this_cross_disciplinary_area_for_denna_tvärvetenskaplig_område_PP = PrepNP for_Prep (DetCN denna_Det (AdjCN (PositA tvärvetenskaplig_A) (UseN område_N))) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin possess_this_kind_possess_denna_slag_PP = PrepNP possess_Prep (DetCN denna_Det (UseN slag_N)) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin possess_this_problem_hos_sådan_problem_PP = PrepNP hos_Prep (MassNP (AdjCN (PositA sådan_A) (UseN problem_N))) ; -- Swe
oper sådan_A = mkA "sådan" ; -- Swe
lin possess_different_system_for_olik_systemkonfiguration_PP = PrepNP for_Prep (MassNP (AdjCN (PositA olik_A) (UseN systemkonfiguration_N))) ; -- Swe
oper systemkonfiguration_N = mkN "systemkonfiguration" ; -- Swe
lin possess_parallel_program_possess_parallell_programsystem_PP = PrepNP possess_Prep (MassNP (AdjCN (PositA parallell_A) (UseN programsystem_N))) ; -- Swe
oper programsystem_N = mkN "programsystem" ; -- Swe
--- lin possess_code_quality_begrepp_PP = UseN begrepp_N ; -- Swe
lin possess_english_in_engelska_PP = PrepNP in_Prep (MassNP (UseN engelska_N)) ; -- Swe
lin possess_reference_possess_datorteknik_PP = PrepNP possess_Prep (MassNP (UseN datorteknik_N)) ; -- Swe
oper datorteknik_N = mkN "datorteknik" ; -- Swe
lin possess_different_architectural_component_for_olik_arkitekturell_komponent_PP = PrepNP for_Prep (MassNP (AdjCN (PositA olik_A) (AdjCN (PositA arkitekturell_A) (UseN komponent_N)))) ; -- Swe
oper arkitekturell_A = mkA "arkitekturell" ; -- Swe
lin possess_modern_operat_system_in_modern_operativsystem_PP = PrepNP in_Prep (MassNP (AdjCN (PositA modern_A) (UseN operativsystem_N))) ; -- Swe
lin possess_operat_system_possess_operativsystem_PP = PrepNP possess_Prep (MassNP (UseN operativsystem_N)) ; -- Swe
--- lin possess_parallel_architecture_a_rad_PP = DetCN a_Det (UseN rad_N) ; -- Swe
oper rad_N = mkN "rad" ; -- Swe
lin possess_parallel_program_possess_parallell_program_PP = PrepNP possess_Prep (MassNP (AdjCN (PositA parallell_A) (UseN program_N))) ; -- Swe
lin possess_certain_component_in_the_system_for_viss_komponent_PP = PrepNP for_Prep (MassNP (AdjCN (PositA viss_A) (UseN komponent_N))) ; -- Swe
lin possess_parallel_program_for_address_space_for_distribuerad_adressutrymme_PP = PrepNP for_Prep (MassNP (AdjCN (PositA distribuerad_A) (UseN adressutrymme_N))) ; -- Swe
oper distribuerad_A = mkA "distribuerad" ; -- Swe
oper adressutrymme_N = mkN "adressutrymme" ; -- Swe
lin possess_algorithm_possess_algoritmer_PP = PrepNP possess_Prep (MassNP (UseN algoritmer_N)) ; -- Swe
oper algoritmer_N = mkN "algoritmer" ; -- Swe
lin possess_application_inom_data_PP = PrepNP inom_Prep (MassNP (UseN data_N)) ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin possess_component_possess_mjukvarukomponent_PP = PrepNP possess_Prep (MassNP (UseN mjukvarukomponent_N)) ; -- Swe
oper mjukvarukomponent_N = mkN "mjukvarukomponent" ; -- Swe
--- lin possess_computer_dator_PP = UseN dator_N ; -- Swe
lin possess_feature_possess_särdrag_PP = PrepNP possess_Prep (MassNP (UseN särdrag_N)) ; -- Swe
lin possess_lab_possess_laboration_PP = PrepNP possess_Prep (MassNP (UseN laboration_N)) ; -- Swe
lin possess_program_possess_program_PP = PrepNP possess_Prep (MassNP (UseN program_N)) ; -- Swe
lin possess_protocol_possess_protokoll_PP = PrepNP possess_Prep (MassNP (UseN protokoll_N)) ; -- Swe
lin possess_task_bakom_systemarkitektur_PP = PrepNP bakom_Prep (MassNP (UseN systemarkitektur_N)) ; -- Swe
oper systemarkitektur_N = mkN "systemarkitektur" ; -- Swe
lin possess_task_for_a_mängd_PP = PrepNP for_Prep (DetCN a_Det (UseN mängd_N)) ; -- Swe
lin possess_topic_possess_ämne_PP = PrepNP possess_Prep (MassNP (UseN ämne_N)) ; -- Swe
lin possess_AI_possess_AI_PP = PrepNP possess_Prep (UsePN AI_PN) ; -- Swe
oper AI_PN = mkPN "AI" ; -- Swe
--- lin to_a_course_a_kurs_PP = DetCN a_Det (UseN kurs_N) ; -- Swe
--- lin to_data_science_Introduktion_to_data_PP = PrepCN (UseN Introduktion_N) (PrepNP to_Prep (MassNP (UseN data_N))) ; -- Swe
oper Introduktion_N = mkN "Introduktion" ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin to_different_audience_to_olik_målgrupp_PP = PrepNP to_Prep (MassNP (AdjCN (PositA olik_A) (UseN målgrupp_N))) ; -- Swe
lin to_function_to_funktion_PP = PrepNP to_Prep (MassNP (UseN funktion_N)) ; -- Swe
lin with_memory_hierarchie_om_minneshierarki_PP = PrepNP om_Prep (MassNP (UseN minneshierarki_N)) ; -- Swe
oper minneshierarki_N = mkN "minneshierarki" ; -- Swe
lin Statistical_Statistisk_A = Statistisk_A ; -- Swe
oper Statistisk_A = mkA "Statistisk" ; -- Swe
lin Statistical_statistisk_A = statistisk_A ; -- Swe
--- lin Summary_om_kurs_kort_Adv = PrepNP om_Prep (MassNP (AdvCN (UseN kurs_N) kort_Adv)) ; -- Swe
lin Syntactic_syntaktisk_A = syntaktisk_A ; -- Swe
lin area_networks_Lan_protokoll_to_medium_for_access_CN = PrepCN (PrepCN (UseN protokoll_N) (PrepNP to_Prep (MassNP (UseN medium_N)))) (PrepNP for_Prep (MassNP (UseN access_N))) ; -- Swe
oper medium_N = mkN "medium" ; -- Swe
lin example_classification_task_klassificeringsuppgift_CN = UseN klassificeringsuppgift_N ; -- Swe
oper klassificeringsuppgift_N = mkN "klassificeringsuppgift" ; -- Swe
--- lin message_pass_interface_ligga_CN = UttVP (UseV ligga_V ; -- Swe
lin research_project_assignment_projektuppgift_CN = UseN projektuppgift_N ; -- Swe
oper projektuppgift_N = mkN "projektuppgift" ; -- Swe
lin analysis_performance_tool_verktyg_for_prestandaanalys_CN = PrepCN (UseN verktyg_N) (PrepNP for_Prep (MassNP (UseN prestandaanalys_N))) ; -- Swe
oper prestandaanalys_N = mkN "prestandaanalys" ; -- Swe
lin analysis_method_analysmetod_CN = UseN analysmetod_N ; -- Swe
oper analysmetod_N = mkN "analysmetod" ; -- Swe
lin application_area_område_CN = UseN område_N ; -- Swe
lin case_study_Fallstudi_CN = UseN Fallstudi_N ; -- Swe
oper Fallstudi_N = mkN "Fallstudi" ; -- Swe
lin code_quality_kodkvalitet_CN = UseN kodkvalitet_N ; -- Swe
oper kodkvalitet_N = mkN "kodkvalitet" ; -- Swe
--- lin computer_Architecture_Computer_Architecture_CN = UsePN (FlatPN Computer_PN Architecture_PN) ; -- Swe
oper Computer_PN = mkPN "Computer" ; -- Swe
oper Architecture_PN = mkPN "Architecture" ; -- Swe
--- lin computer_Architecture_Datorarkitektur_CN = UsePN Datorarkitektur_PN ; -- Swe
oper Datorarkitektur_PN = mkPN "Datorarkitektur" ; -- Swe
lin computer_communication_Datakommunikation_CN = UseN Datakommunikation_N ; -- Swe
oper Datakommunikation_N = mkN "Datakommunikation" ; -- Swe
lin computer_organization_Datorsystemteknik_CN = UseN Datorsystemteknik_N ; -- Swe
oper Datorsystemteknik_N = mkN "Datorsystemteknik" ; -- Swe
lin computer_science_datavetenskap_CN = UseN datavetenskap_N ; -- Swe
oper datavetenskap_N = mkN "datavetenskap" ; -- Swe
--- lin concepts_include_inkludera_CN = UttVP (UseV inkludera_V ; -- Swe
--- lin course_cover_täcka_CN = UttVP (UseV täcka_V ; -- Swe
--- lin cover_part_trend_omfatta_CN = UttVP (UseV omfatta_V ; -- Swe
--lin data_science_data_science_CN = AdjCN (PositA data_A) (UseN science_N) ; -- Swe
--oper data_A = mkA "data" ; -- Swe
--oper science_N = mkN "science" ; -- Swe
lin data_science_data_science_CN = UseN (CompoundN data_N science_N) ; -- Swe
oper data_N = mkN "data" ; -- Swe
oper science_N = mkN "science" ; -- Swe
lin data_structure_Datastrukturer_CN = UseN Datastrukturer_N ; -- Swe
oper Datastrukturer_N = mkN "Datastrukturer" ; -- Swe
lin data_structure_datastruktur_CN = UseN datastruktur_N ; -- Swe
oper datastruktur_N = mkN "datastruktur" ; -- Swe
lin entry_requirement_behörighet_CN = UseN behörighet_N ; -- Swe
--- lin evaluation_measurement_evalueringsmå_CN = evalueringsmå_Adv ; -- Swe
oper evalueringsmå_Adv = mkAdv "evalueringsmå" ; -- Swe
lin expert_system_teckenigenkänning_CN = UseN teckenigenkänning_N ; -- Swe
oper teckenigenkänning_N = mkN "teckenigenkänning" ; -- Swe
lin homework_assignment_inlämningsuppgift_CN = UseN inlämningsuppgift_N ; -- Swe
oper inlämningsuppgift_N = mkN "inlämningsuppgift" ; -- Swe
lin implementation_detail_korrekthet_CN = UseN korrekthet_N ; -- Swe
lin key_component_Datorer_CN = UseN Datorer_N ; -- Swe
oper Datorer_N = mkN "Datorer" ; -- Swe
lin key_component_komponent_CN = UseN komponent_N ; -- Swe
lin lab_exercise_laboration_CN = UseN laboration_N ; -- Swe
lin learn_component_maskininlärningskomponent_CN = UseN maskininlärningskomponent_N ; -- Swe
oper maskininlärningskomponent_N = mkN "maskininlärningskomponent" ; -- Swe
--- lin lecture_start_börja_CN = UttVP (UseV börja_V ; -- Swe
oper börja_V = mkV "börja" ; -- Swe
--- lin literature_list_se_CN = UttVP (UseV se_V ; -- Swe
lin machine_learning_maskininlärning_CN = UseN maskininlärning_N ; -- Swe
oper maskininlärning_N = mkN "maskininlärning" ; -- Swe
--- lin master_concept_redogöra_CN = UttVP (UseV redogöra_V ; -- Swe
lin memory_hierarchie_minneshierarki_CN = UseN minneshierarki_N ; -- Swe
oper minneshierarki_N = mkN "minneshierarki" ; -- Swe
lin micro_architecture_olik_metod_CN = AdjCN (PositA olik_A) (UseN metod_N) ; -- Swe
lin optimization_problem_optimeringsproblem_CN = UseN optimeringsproblem_N ; -- Swe
oper optimeringsproblem_N = mkN "optimeringsproblem" ; -- Swe
--- lin optimization_problem_identifiera_CN = UttVP (UseV identifiera_V ; -- Swe
lin part_cover_del_CN = UseN del_N ; -- Swe
--- lin performance_counter_for_monitorering_possess_prestanda_CN = PrepNP for_Prep (MassNP (PrepCN (UseN monitorering_N) (PrepNP possess_Prep (MassNP (UseN prestanda_N))))) ; -- Swe
oper monitorering_N = mkN "monitorering" ; -- Swe
oper prestanda_N = mkN "prestanda" ; -- Swe
lin probability_theory_grundläggande_sannolikhetsteori_CN = AdjCN (PositA grundläggande_A) (UseN sannolikhetsteori_N) ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
oper sannolikhetsteori_N = mkN "sannolikhetsteori" ; -- Swe
lin program_code_programmeringsspråk_CN = UseN programmeringsspråk_N ; -- Swe
lin program_library_programbibliotek_CN = UseN programbibliotek_N ; -- Swe
oper programbibliotek_N = mkN "programbibliotek" ; -- Swe
lin programm_assignment_programmeringsuppgift_CN = UseN programmeringsuppgift_N ; -- Swe
oper programmeringsuppgift_N = mkN "programmeringsuppgift" ; -- Swe
lin programme_languag_programspråk_CN = UseN programspråk_N ; -- Swe
lin programming_language_programmeringsspråk_CN = UseN programmeringsspråk_N ; -- Swe
lin research_literature_forskningslitteratur_CN = UseN forskningslitteratur_N ; -- Swe
oper forskningslitteratur_N = mkN "forskningslitteratur" ; -- Swe
--- lin section_cover_behandla_CN = UttVP (UseV behandla_V ; -- Swe
lin software_resource_mjukvaruresurs_CN = UseN mjukvaruresurs_N ; -- Swe
oper mjukvaruresurs_N = mkN "mjukvaruresurs" ; -- Swe
lin sound_basis_sund_grund_CN = AdjCN (PositA sund_A) (UseN grund_N) ; -- Swe
oper grund_N = mkN "grund" ; -- Swe
lin sound_knowledge_kunskap_CN = UseN kunskap_N ; -- Swe
lin source_code_källkod_CN = UseN källkod_N ; -- Swe
--- lin structure_program_strukturera_CN = UttVP (UseV strukturera_V ; -- Swe
lin system_level_systemnivå_CN = UseN systemnivå_N ; -- Swe
oper systemnivå_N = mkN "systemnivå" ; -- Swe
lin trade_magazine_facktidskrift_CN = UseN facktidskrift_N ; -- Swe
lin use_cas_typisk_användningsfall_hos_denna_algoritmer_CN = PrepCN (AdjCN (PositA typisk_A) (UseN användningsfall_N)) (PrepNP hos_Prep (DetCN denna_Det (UseN algoritmer_N))) ; -- Swe
oper användningsfall_N = mkN "användningsfall" ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
oper algoritmer_N = mkN "algoritmer" ; -- Swe
--- lin Algorithm_Algoritmer_CN = Algoritmer_Adv ; -- Swe
oper Algoritmer_Adv = mkAdv "Algoritmer" ; -- Swe
lin Article_Artikel_CN = UseN Artikel_N ; -- Swe
oper Artikel_N = mkN "Artikel" ; -- Swe
lin Computability_Beräkningsbarhet_CN = UseN Beräkningsbarhet_N ; -- Swe
oper Beräkningsbarhet_N = mkN "Beräkningsbarhet" ; -- Swe
lin Datatype_datatyp_CN = UseN datatyp_N ; -- Swe
oper datatyp_N = mkN "datatyp" ; -- Swe
--- lin Detection_Upptäcka_CN = UttVP (UseV Upptäcka_V ; -- Swe
oper Upptäcka_V = mkV "Upptäcka" ; -- Swe
lin Eligibility_Behörighet_CN = UseN Behörighet_N ; -- Swe
oper Behörighet_N = mkN "Behörighet" ; -- Swe
--- lin Ethernet_switcha_CN = UttVP (UseV switcha_V ; -- Swe
oper switcha_V = mkV "switcha" ; -- Swe
lin Facility_Lokal_CN = UseN Lokal_N ; -- Swe
oper Lokal_N = mkN "Lokal" ; -- Swe
lin Gpus_accelerator_CN = UseN accelerator_N ; -- Swe
lin Inference_Slutledning_CN = UseN Slutledning_N ; -- Swe
oper Slutledning_N = mkN "Slutledning" ; -- Swe
lin Inference_slutledning_CN = UseN slutledning_N ; -- Swe
lin Judgement_Värderingsförmåga_CN = UseN Värderingsförmåga_N ; -- Swe
oper Värderingsförmåga_N = mkN "Värderingsförmåga" ; -- Swe
lin Judgement_bedömning_CN = UseN bedömning_N ; -- Swe
lin Lecture_Föreläsning_CN = UseN Föreläsning_N ; -- Swe
oper Föreläsning_N = mkN "Föreläsning" ; -- Swe
--- lin Lecture_bedriva_CN = UttVP (UseV bedriva_V ; -- Swe
lin Pinto_Pintos_CN = UseN Pintos_N ; -- Swe
oper Pintos_N = mkN "Pintos" ; -- Swe
lin Pragmatics_pragmatik_CN = UseN pragmatik_N ; -- Swe
lin Prerequisite_Behörighet_CN = UseN Behörighet_N ; -- Swe
oper Behörighet_N = mkN "Behörighet" ; -- Swe
--- lin Publisher_Claypool_CN = UsePN Claypool_PN ; -- Swe
oper Claypool_PN = mkPN "Claypool" ; -- Swe
lin Science_vetenskap_CN = UseN vetenskap_N ; -- Swe
lin Science_vetenskaper_CN = UseN vetenskaper_N ; -- Swe
oper vetenskaper_N = mkN "vetenskaper" ; -- Swe
lin Själander_Själand_CN = UseN Själand_N ; -- Swe
oper Själand_N = mkN "Själand" ; -- Swe
--- lin Stefanos_Martonosi_CN = UsePN Martonosi_PN ; -- Swe
oper Martonosi_PN = mkPN "Martonosi" ; -- Swe
--- lin Student_genomföra_fallstudi_CN = PrepNP genomföra_Prep (MassNP (UseN fallstudi_N)) ; -- Swe
oper genomföra_Prep = mkPrep "genomföra" ; -- Swe
oper fallstudi_N = mkN "fallstudi" ; -- Swe
lin Student_Student_CN = UseN Student_N ; -- Swe
oper Student_N = mkN "Student" ; -- Swe
lin Topics_exempel_CN = UseN exempel_N ; -- Swe
lin Vlan_Ethernet_CN = UseN Ethernet_N ; -- Swe
oper Ethernet_N = mkN "Ethernet" ; -- Swe
--- lin abstraction_possess_abstraktionsmekanismer_CN = PrepNP possess_Prep (MassNP (UseN abstraktionsmekanismer_N)) ; -- Swe
oper abstraktionsmekanismer_N = mkN "abstraktionsmekanismer" ; -- Swe
--- lin act_handla_CN = UttVP (UseV handla_V ; -- Swe
oper handla_V = mkV "handla" ; -- Swe
lin addition_kurs_CN = UseN kurs_N ; -- Swe
lin advantage_fördel_CN = UseN fördel_N ; -- Swe
lin ae_synnerhet_CN = UseN synnerhet_N ; -- Swe
oper synnerhet_N = mkN "synnerhet" ; -- Swe
lin agent_agent_CN = UseN agent_N ; -- Swe
lin aim_Syfte_CN = UseN Syfte_N ; -- Swe
oper Syfte_N = mkN "Syfte" ; -- Swe
lin algorithm_algoritm_CN = UseN algoritm_N ; -- Swe
lin algorithm_algoritmer_CN = UseN algoritmer_N ; -- Swe
oper algoritmer_N = mkN "algoritmer" ; -- Swe
lin analysis_analys_CN = UseN analys_N ; -- Swe
lin analysis_prestandaanalys_CN = UseN prestandaanalys_N ; -- Swe
oper prestandaanalys_N = mkN "prestandaanalys" ; -- Swe
lin analysis_schema_CN = UseN schema_N ; -- Swe
--- lin analysis_presentera_CN = UttVP (UseV presentera_V ; -- Swe
lin annotation_korpora_CN = UseN korpora_N ; -- Swe
oper korpora_N = mkN "korpora" ; -- Swe
lin answer_svar_CN = UseN svar_N ; -- Swe
lin applicant_följande_kunskapsnivå_in_engelska_CN = PrepCN (AdjCN (PositA följande_A) (UseN kunskapsnivå_N)) (PrepNP in_Prep (MassNP (UseN engelska_N))) ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
lin application_data_CN = UseN data_N ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin application_fokus_CN = UseN fokus_N ; -- Swe
oper fokus_N = mkN "fokus" ; -- Swe
lin application_programmeringsmetod_CN = UseN programmeringsmetod_N ; -- Swe
oper programmeringsmetod_N = mkN "programmeringsmetod" ; -- Swe
lin application_tillämpning_CN = UseN tillämpning_N ; -- Swe
--- lin application_ge_CN = UttVP (UseV ge_V ; -- Swe
lin approach_Inlärning_CN = UseN Inlärning_N ; -- Swe
oper Inlärning_N = mkN "Inlärning" ; -- Swe
lin approach_Uppdelning_CN = UseN Uppdelning_N ; -- Swe
oper Uppdelning_N = mkN "Uppdelning" ; -- Swe
lin approach_programmering_CN = UseN programmering_N ; -- Swe
--- lin approach_förhållningssätta_CN = UttVP (UseV förhållningssätta_V ; -- Swe
oper förhållningssätta_V = mkV "förhållningssätta" ; -- Swe
--- lin approach_tillvägagångssätt_CN = tillvägagångssätt_Adv ; -- Swe
oper tillvägagångssätt_Adv = mkAdv "tillvägagångssätt" ; -- Swe
lin approximation_approximation_CN = UseN approximation_N ; -- Swe
lin architecture_arkitektur_CN = UseN arkitektur_N ; -- Swe
lin architecture_rad_CN = UseN rad_N ; -- Swe
oper rad_N = mkN "rad" ; -- Swe
lin area_del_CN = UseN del_N ; -- Swe
lin area_område_CN = UseN område_N ; -- Swe
lin arise_planering_CN = UseN planering_N ; -- Swe
lin assessment_analys_CN = UseN analys_N ; -- Swe
lin audience_målgrupp_CN = UseN målgrupp_N ; -- Swe
lin basics_Grund_CN = UseN Grund_N ; -- Swe
oper Grund_N = mkN "Grund" ; -- Swe
lin bottleneck_flaskhals_CN = UseN flaskhals_N ; -- Swe
lin bound_gräns_CN = UseN gräns_N ; -- Swe
--- lin bridge_Wifi_CN = UsePN Wifi_PN ; -- Swe
oper Wifi_PN = mkPN "Wifi" ; -- Swe
lin cach_cach_CN = UseN cach_N ; -- Swe
oper cach_N = mkN "cach" ; -- Swe
lin cach_hierarki_CN = UseN hierarki_N ; -- Swe
oper hierarki_N = mkN "hierarki" ; -- Swe
lin carbon_koldioxidutsläpp_CN = UseN koldioxidutsläpp_N ; -- Swe
lin cas_fall_CN = UseN fall_N ; -- Swe
lin chip_chip_CN = UseN chip_N ; -- Swe
lin circuit_energieffektivitetsaspekt_CN = UseN energieffektivitetsaspekt_N ; -- Swe
oper energieffektivitetsaspekt_N = mkN "energieffektivitetsaspekt" ; -- Swe
lin class_klass_CN = UseN klass_N ; -- Swe
lin class_modul_CN = UseN modul_N ; -- Swe
lin classification_regression_CN = UseN regression_N ; -- Swe
lin classification_textklassificering_CN = UseN textklassificering_N ; -- Swe
oper textklassificering_N = mkN "textklassificering" ; -- Swe
--- lin code_kod_CN = UttVP (UseV kod_V ; -- Swe
oper kod_V = mkV "kod" ; -- Swe
lin communication_kommunikation_CN = UseN kommunikation_N ; -- Swe
lin competence_Färdighet_CN = UseN Färdighet_N ; -- Swe
oper Färdighet_N = mkN "Färdighet" ; -- Swe
lin competence_Kompet_CN = UseN Kompet_N ; -- Swe
oper Kompet_N = mkN "Kompet" ; -- Swe
lin compiler_maskin_CN = UseN maskin_N ; -- Swe
lin completion_kurs_CN = UseN kurs_N ; -- Swe
lin component_komponent_CN = UseN komponent_N ; -- Swe
lin component_mjukvarukomponent_CN = UseN mjukvarukomponent_N ; -- Swe
oper mjukvarukomponent_N = mkN "mjukvarukomponent" ; -- Swe
--- lin computer_a_data_CN = DetCN a_Det (UseN data_N) ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin computer_modell_CN = UseN modell_N ; -- Swe
--- lin computer_minne_CN = minne_Det ; -- Swe
oper minne_Det = mkDet "minne" ; -- Swe
lin concept_beräkning_CN = UseN beräkning_N ; -- Swe
--- lin concepts_denna_begrepp_CN = DetCN denna_Det (UseN begrepp_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin concepts_begrepp_CN = UseN begrepp_N ; -- Swe
--- lin conclusion_denna_uppgift_CN = DetCN denna_Det (UseN uppgift_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin configuration_simuleringsverktyg_CN = UseN simuleringsverktyg_N ; -- Swe
oper simuleringsverktyg_N = mkN "simuleringsverktyg" ; -- Swe
lin conjunction_samband_CN = UseN samband_N ; -- Swe
lin consumption_energiförbrukning_CN = UseN energiförbrukning_N ; -- Swe
--- lin content_innehåll_CN = innehåll_Adv ; -- Swe
oper innehåll_Adv = mkAdv "innehåll" ; -- Swe
lin context_kontext_CN = UseN kontext_N ; -- Swe
lin context_sammanhang_CN = UseN sammanhang_N ; -- Swe
--- lin correction_rätta_CN = UttVP (UseV rätta_V ; -- Swe
lin correctness_täckning_CN = UseN täckning_N ; -- Swe
--- lin counsellor_studentlunchrum_CN = studentlunchrum_A ; -- Swe
oper studentlunchrum_A = mkA "studentlunchrum" ; -- Swe
lin cours_kurs_CN = UseN kurs_N ; -- Swe
lin course_Kurs_CN = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
lin course_diskussion_CN = UseN diskussion_N ; -- Swe
lin course_fallstudi_CN = UseN fallstudi_N ; -- Swe
oper fallstudi_N = mkN "fallstudi" ; -- Swe
lin course_gång_CN = UseN gång_N ; -- Swe
oper gång_N = mkN "gång" ; -- Swe
lin course_kurs_CN = UseN kurs_N ; -- Swe
lin course_praktik_CN = UseN praktik_N ; -- Swe
lin course_programmering_CN = UseN programmering_N ; -- Swe
lin cycle_behörighet_CN = UseN behörighet_N ; -- Swe
--- lin data_to_Dat_CN = PrepNP to_Prep (MassNP (UseN Dat_N)) ; -- Swe
oper Dat_N = mkN "Dat" ; -- Swe
--- lin data_to_data_CN = PrepNP to_Prep (MassNP (UseN data_N)) ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin data_Data_CN = UseN Data_N ; -- Swe
oper Data_N = mkN "Data" ; -- Swe
lin data_data_CN = UseN data_N ; -- Swe
oper data_N = mkN "data" ; -- Swe
lin data_mining_CN = UseN mining_N ; -- Swe
oper mining_N = mkN "mining" ; -- Swe
lin data_uppgift_CN = UseN uppgift_N ; -- Swe
lin database_databas_CN = UseN databas_N ; -- Swe
lin department_institution_CN = UseN institution_N ; -- Swe
--- lin depth_djup_CN = djup_A ; -- Swe
lin design_algoritmdesign_CN = UseN algoritmdesign_N ; -- Swe
oper algoritmdesign_N = mkN "algoritmdesign" ; -- Swe
lin design_design_CN = UseN design_N ; -- Swe
lin design_konstruktion_CN = UseN konstruktion_N ; -- Swe
lin development_program_CN = UseN program_N ; -- Swe
lin development_utveckling_CN = UseN utveckling_N ; -- Swe
lin device_enhet_CN = UseN enhet_N ; -- Swe
lin discussion_diskussion_CN = UseN diskussion_N ; -- Swe
--- lin discussion_innehålla_CN = UttVP (UseV innehålla_V ; -- Swe
lin duality_dualitet_CN = UseN dualitet_N ; -- Swe
oper dualitet_N = mkN "dualitet" ; -- Swe
lin education_undervisning_CN = UseN undervisning_N ; -- Swe
lin efficiency_flaskhals_CN = UseN flaskhals_N ; -- Swe
lin element_moment_CN = UseN moment_N ; -- Swe
lin english_engelska_CN = UseN engelska_N ; -- Swe
lin environment_miljö_CN = UseN miljö_N ; -- Swe
lin ethics_etik_CN = UseN etik_N ; -- Swe
lin ethics_etisk_CN = UseN etisk_N ; -- Swe
oper etisk_N = mkN "etisk" ; -- Swe
lin exam_tentamen_CN = UseN tentamen_N ; -- Swe
--- lin examination_a_tentamen_CN = DetCN a_Det (UseN tentamen_N) ; -- Swe
lin example_exempel_CN = UseN exempel_N ; -- Swe
lin example_maskininlärningsmetod_CN = UseN maskininlärningsmetod_N ; -- Swe
oper maskininlärningsmetod_N = mkN "maskininlärningsmetod" ; -- Swe
--- lin example_såsom_CN = såsom_Adv ; -- Swe
oper såsom_Adv = mkAdv "såsom" ; -- Swe
lin examples_exempel_CN = UseN exempel_N ; -- Swe
lin examples_tillämpning_CN = UseN tillämpning_N ; -- Swe
lin exbe_salstentamen_CN = UseN salstentamen_N ; -- Swe
oper salstentamen_N = mkN "salstentamen" ; -- Swe
lin execution_exekverande_CN = UseN exekverande_N ; -- Swe
lin exercise_Övning_CN = UseN Övning_N ; -- Swe
oper Övning_N = mkN "Övning" ; -- Swe
lin expression_uttryck_CN = UseN uttryck_N ; -- Swe
lin fact_verk_CN = UseN verk_N ; -- Swe
--- lin feature_possess_särdrag_CN = PrepNP possess_Prep (MassNP (UseN särdrag_N)) ; -- Swe
lin feature_särdrag_CN = UseN särdrag_N ; -- Swe
lin field_område_CN = UseN område_N ; -- Swe
lin flexibility_system_CN = UseN system_N ; -- Swe
lin focus_fokus_CN = UseN fokus_N ; -- Swe
oper fokus_N = mkN "fokus" ; -- Swe
lin form_former_CN = UseN former_N ; -- Swe
oper former_N = mkN "former" ; -- Swe
--- lin foundation_gå_CN = UttVP (UseV gå_V ; -- Swe
lin framework_ramverk_CN = UseN ramverk_N ; -- Swe
lin function_funktion_CN = UseN funktion_N ; -- Swe
--- lin function_återanvändbara_CN = UttVP (UseV återanvändbara_V ; -- Swe
oper återanvändbara_V = mkV "återanvändbara" ; -- Swe
lin functionality_funktion_CN = UseN funktion_N ; -- Swe
lin future_datorsystem_CN = UseN datorsystem_N ; -- Swe
lin geometry_geometri_CN = UseN geometri_N ; -- Swe
oper geometri_N = mkN "geometri" ; -- Swe
lin goal_mål_CN = UseN mål_N ; -- Swe
lin grade_betyg_CN = UseN betyg_N ; -- Swe
lin grade_uppgift_CN = UseN uppgift_N ; -- Swe
lin grammar_grammatikformalismer_CN = UseN grammatikformalismer_N ; -- Swe
oper grammatikformalismer_N = mkN "grammatikformalismer" ; -- Swe
lin group_grupp_CN = UseN grupp_N ; -- Swe
lin hardware_hård_CN = UseN hård_N ; -- Swe
oper hård_N = mkN "hård" ; -- Swe
lin hardware_hårdvara_CN = UseN hårdvara_N ; -- Swe
lin heuristics_heuristik_CN = UseN heuristik_N ; -- Swe
lin heuristics_optimering_CN = UseN optimering_N ; -- Swe
--- lin hypothesis_hypote_CN = UttVP (UseV hypote_V ; -- Swe
oper hypote_V = mkV "hypote" ; -- Swe
lin identification_identifiering_CN = UseN identifiering_N ; -- Swe
lin impact_konsekvens_CN = UseN konsekvens_N ; -- Swe
lin impact_samhällspåverkan_CN = UseN samhällspåverkan_N ; -- Swe
oper samhällspåverkan_N = mkN "samhällspåverkan" ; -- Swe
lin implementation_Implementation_CN = UseN Implementation_N ; -- Swe
oper Implementation_N = mkN "Implementation" ; -- Swe
lin implementation_Implementering_CN = UseN Implementering_N ; -- Swe
oper Implementering_N = mkN "Implementering" ; -- Swe
lin implementation_implementation_CN = UseN implementation_N ; -- Swe
oper implementation_N = mkN "implementation" ; -- Swe
lin implementation_implementering_CN = UseN implementering_N ; -- Swe
lin importance_Vikt_CN = UseN Vikt_N ; -- Swe
oper Vikt_N = mkN "Vikt" ; -- Swe
lin improvement_förbättring_CN = UseN förbättring_N ; -- Swe
lin industry_industri_CN = UseN industri_N ; -- Swe
oper industri_N = mkN "industri" ; -- Swe
lin inference_slutledning_CN = UseN slutledning_N ; -- Swe
lin information_information_CN = UseN information_N ; -- Swe
lin intelligence_Intellig_CN = UseN Intellig_N ; -- Swe
oper Intellig_N = mkN "Intellig" ; -- Swe
lin interaction_interaktion_CN = UseN interaktion_N ; -- Swe
lin introduction_Introduktion_CN = UseN Introduktion_N ; -- Swe
oper Introduktion_N = mkN "Introduktion" ; -- Swe
lin introduction_inledning_CN = UseN inledning_N ; -- Swe
lin introduction_introduktion_CN = UseN introduktion_N ; -- Swe
lin introduction_science_CN = UseN science_N ; -- Swe
oper science_N = mkN "science" ; -- Swe
--- lin judge_värdera_CN = UttVP (UseV värdera_V ; -- Swe
lin kind_slag_CN = UseN slag_N ; -- Swe
lin knowledge_Kunskap_CN = UseN Kunskap_N ; -- Swe
oper Kunskap_N = mkN "Kunskap" ; -- Swe
lin knowledge_kunskap_CN = UseN kunskap_N ; -- Swe
lin lab_laboration_CN = UseN laboration_N ; -- Swe
--- lin language_någon_enkel_rutin_in_a_operativsystem_in_c_CN = DetCN någon_Det (AdjCN (PositA enkel_A) (PrepCN (UseN rutin_N) (PrepNP in_Prep (DetCN a_Det (PrepCN (UseN operativsystem_N) (PrepNP in_Prep (UsePN c_PN))))))) ; -- Swe
oper någon_Det = mkDet "någon" ; -- Swe
oper rutin_N = mkN "rutin" ; -- Swe
oper c_PN = mkPN "c" ; -- Swe
lin language_stöd_CN = UseN stöd_N ; -- Swe
--- lin language_markovmodell_CN = markovmodell_Conj ; -- Swe
oper markovmodell_Conj = mkConj "markovmodell" ; -- Swe
lin layer_lager_CN = UseN lager_N ; -- Swe
oper lager_N = mkN "lager" ; -- Swe
lin lecture_antal_CN = UseN antal_N ; -- Swe
lin lecture_föreläsning_CN = UseN föreläsning_N ; -- Swe
lin level_grundnivå_CN = UseN grundnivå_N ; -- Swe
oper grundnivå_N = mkN "grundnivå" ; -- Swe
lin level_programmering_CN = UseN programmering_N ; -- Swe
--- lin library_använda_CN = UttVP (UseV använda_V ; -- Swe
lin likelihood_likelihood_CN = UseN likelihood_N ; -- Swe
oper likelihood_N = mkN "likelihood" ; -- Swe
lin limit_gräns_CN = UseN gräns_N ; -- Swe
lin limit_program_CN = UseN program_N ; -- Swe
lin limitation_begränsning_CN = UseN begränsning_N ; -- Swe
lin linear_optimering_CN = UseN optimering_N ; -- Swe
lin linguistics_lingvistik_CN = UseN lingvistik_N ; -- Swe
lin literature_litteratur_CN = UseN litteratur_N ; -- Swe
lin literature_metod_CN = UseN metod_N ; -- Swe
--- lin literature_litteratur_CN = litteratur_Adv ; -- Swe
oper litteratur_Adv = mkAdv "litteratur" ; -- Swe
lin logic_logik_CN = UseN logik_N ; -- Swe
lin machine_maskininlärning_CN = UseN maskininlärning_N ; -- Swe
oper maskininlärning_N = mkN "maskininlärning" ; -- Swe
lin management_hantering_CN = UseN hantering_N ; -- Swe
lin manifold_mångfald_CN = UseN mångfald_N ; -- Swe
lin material_tentamen_CN = UseN tentamen_N ; -- Swe
lin mathematics_begrepp_CN = UseN begrepp_N ; -- Swe
lin mathematics_matematik_CN = UseN matematik_N ; -- Swe
lin mechanism_mekanism_CN = UseN mekanism_N ; -- Swe
lin method_litteratur_CN = UseN litteratur_N ; -- Swe
lin method_metod_CN = UseN metod_N ; -- Swe
lin method_problem_CN = UseN problem_N ; -- Swe
--- lin method_ange_CN = UttVP (UseV ange_V ; -- Swe
lin methodology_metodik_CN = UseN metodik_N ; -- Swe
lin microprocessor_mikroprocessa_CN = UseN mikroprocessa_N ; -- Swe
oper mikroprocessa_N = mkN "mikroprocessa" ; -- Swe
--- lin miss_in_minneshierarkin_CN = PrepNP in_Prep (MassNP (UseN minneshierarkin_N)) ; -- Swe
oper minneshierarkin_N = mkN "minneshierarkin" ; -- Swe
lin model_modell_CN = UseN modell_N ; -- Swe
lin model_modells_CN = UseN modells_N ; -- Swe
oper modells_N = mkN "modells" ; -- Swe
lin modeling_fokus_CN = UseN fokus_N ; -- Swe
oper fokus_N = mkN "fokus" ; -- Swe
lin module_modul_CN = UseN modul_N ; -- Swe
--- lin module_innefatta_CN = UttVP (UseV innefatta_V ; -- Swe
lin monad_monad_CN = UseN monad_N ; -- Swe
lin monitor_monitor_CN = UseN monitor_N ; -- Swe
lin month_månad_CN = UseN månad_N ; -- Swe
lin multiple_multipla_CN = UseN multipla_N ; -- Swe
oper multipla_N = mkN "multipla" ; -- Swe
lin need_behov_CN = UseN behov_N ; -- Swe
lin network_nätverk_CN = UseN nätverk_N ; -- Swe
lin network_nätverkskontrolel_CN = UseN nätverkskontrolel_N ; -- Swe
oper nätverkskontrolel_N = mkN "nätverkskontrolel" ; -- Swe
lin notion_kodkvalitet_CN = UseN kodkvalitet_N ; -- Swe
oper kodkvalitet_N = mkN "kodkvalitet" ; -- Swe
lin number_programmeringsuppgift_CN = UseN programmeringsuppgift_N ; -- Swe
oper programmeringsuppgift_N = mkN "programmeringsuppgift" ; -- Swe
lin object_datastruktur_CN = UseN datastruktur_N ; -- Swe
oper datastruktur_N = mkN "datastruktur" ; -- Swe
--- lin office_läsesal_CN = läsesal_A ; -- Swe
oper läsesal_A = mkA "läsesal" ; -- Swe
lin optimization_optimering_CN = UseN optimering_N ; -- Swe
lin optimization_optimeringsproblem_CN = UseN optimeringsproblem_N ; -- Swe
oper optimeringsproblem_N = mkN "optimeringsproblem" ; -- Swe
--- lin order_möjliggöra_CN = UttVP (UseV möjliggöra_V ; -- Swe
lin organisation_organisation_CN = UseN organisation_N ; -- Swe
lin paradigm_paradigm_CN = UseN paradigm_N ; -- Swe
oper paradigm_N = mkN "paradigm" ; -- Swe
lin parallel_pipelining_CN = UseN pipelining_N ; -- Swe
oper pipelining_N = mkN "pipelining" ; -- Swe
lin part_del_CN = UseN del_N ; -- Swe
lin part_system_CN = UseN system_N ; -- Swe
lin participant_deltagare_CN = UseN deltagare_N ; -- Swe
--- lin performance_for_prestandaanalys_CN = PrepNP for_Prep (MassNP (UseN prestandaanalys_N)) ; -- Swe
oper prestandaanalys_N = mkN "prestandaanalys" ; -- Swe
--- lin performance_possess_prestanda_CN = PrepNP possess_Prep (MassNP (UseN prestanda_N)) ; -- Swe
oper prestanda_N = mkN "prestanda" ; -- Swe
lin performance_prestanda_CN = UseN prestanda_N ; -- Swe
oper prestanda_N = mkN "prestanda" ; -- Swe
--- lin periodicity_användbarhetsskäl_CN = UttVP (UseV användbarhetsskäl_V ; -- Swe
oper användbarhetsskäl_V = mkV "användbarhetsskäl" ; -- Swe
lin platform_plattform_CN = UseN plattform_N ; -- Swe
lin polytope_egenskap_CN = UseN egenskap_N ; -- Swe
lin possibility_fel_CN = UseN fel_N ; -- Swe
lin practice_praxis_CN = UseN praxis_N ; -- Swe
oper praxis_N = mkN "praxis" ; -- Swe
--- lin practice_finnas_CN = UttVP (UseV finnas_V ; -- Swe
oper finnas_V = mkV "finnas" ; -- Swe
lin precision_korrekthet_CN = UseN korrekthet_N ; -- Swe
lin premise_lokal_CN = UseN lokal_N ; -- Swe
lin prerequisite_förkunskap_CN = UseN förkunskap_N ; -- Swe
lin presentation_genomgång_CN = UseN genomgång_N ; -- Swe
lin principle_princip_CN = UseN princip_N ; -- Swe
lin problem_problem_CN = UseN problem_N ; -- Swe
--- lin problem_uppstå_CN = UttVP (UseV uppstå_V ; -- Swe
--- lin proceed_fortsätta_CN = UttVP (UseV fortsätta_V ; -- Swe
lin program_adressutrymme_CN = UseN adressutrymme_N ; -- Swe
oper adressutrymme_N = mkN "adressutrymme" ; -- Swe
lin program_program_CN = UseN program_N ; -- Swe
lin program_programsystem_CN = UseN programsystem_N ; -- Swe
oper programsystem_N = mkN "programsystem" ; -- Swe
lin programme_program_CN = UseN program_N ; -- Swe
lin programme_programmering_CN = UseN programmering_N ; -- Swe
lin programmer_programmerare_CN = UseN programmerare_N ; -- Swe
lin programming_princip_CN = UseN princip_N ; -- Swe
lin programming_programmering_CN = UseN programmering_N ; -- Swe
lin property_egenskap_CN = UseN egenskap_N ; -- Swe
lin protocol_protokoll_CN = UseN protokoll_N ; -- Swe
lin purpose_Syfte_CN = UseN Syfte_N ; -- Swe
oper Syfte_N = mkN "Syfte" ; -- Swe
lin purpose_kurs_CN = UseN kurs_N ; -- Swe
lin purpose_syfte_CN = UseN syfte_N ; -- Swe
lin question_fråga_CN = UseN fråga_N ; -- Swe
lin realisation_implementering_CN = UseN implementering_N ; -- Swe
lin reason_skäl_CN = UseN skäl_N ; -- Swe
lin reasons_säkerhet_CN = UseN säkerhet_N ; -- Swe
lin reference_datorteknik_CN = UseN datorteknik_N ; -- Swe
oper datorteknik_N = mkN "datorteknik" ; -- Swe
lin relation_Förhållande_CN = UseN Förhållande_N ; -- Swe
oper Förhållande_N = mkN "Förhållande" ; -- Swe
lin relation_relation_CN = UseN relation_N ; -- Swe
lin reliability_pålitlig_CN = UseN pålitlig_N ; -- Swe
oper pålitlig_N = mkN "pålitlig" ; -- Swe
lin report_rapport_CN = UseN rapport_N ; -- Swe
lin representation_representation_CN = UseN representation_N ; -- Swe
--- lin requirement_Förkunskapskrav_CN = Förkunskapskrav_Prep ; -- Swe
oper Förkunskapskrav_Prep = mkPrep "Förkunskapskrav" ; -- Swe
lin requirement_omvärld_CN = UseN omvärld_N ; -- Swe
--- lin requirement_formuler_CN = UttVP (UseV formuler_V ; -- Swe
oper formuler_V = mkV "formuler" ; -- Swe
--- lin requirement_kräva_CN = UttVP (UseV kräva_V ; -- Swe
lin research_forskning_CN = UseN forskning_N ; -- Swe
lin result_resultat_CN = UseN resultat_N ; -- Swe
lin role_roll_CN = UseN roll_N ; -- Swe
oper roll_N = mkN "roll" ; -- Swe
--- lin role_fördatatstruktur_CN = UttVP (UseV fördatatstruktur_V ; -- Swe
oper fördatatstruktur_V = mkV "fördatatstruktur" ; -- Swe
--- lin room_finnas_CN = UttVP (UseV finnas_V ; -- Swe
oper finnas_V = mkV "finnas" ; -- Swe
lin s_realtidskärna_CN = UseN realtidskärna_N ; -- Swe
oper realtidskärna_N = mkN "realtidskärna" ; -- Swe
lin safety_säker_CN = UseN säker_N ; -- Swe
oper säker_N = mkN "säker" ; -- Swe
lin scenario_scenarion_CN = UseN scenarion_N ; -- Swe
oper scenarion_N = mkN "scenarion" ; -- Swe
--- lin schedulability_nödvändig_CN = nödvändig_A ; -- Swe
lin scheme_programmeringsmodell_CN = UseN programmeringsmodell_N ; -- Swe
oper programmeringsmodell_N = mkN "programmeringsmodell" ; -- Swe
--- lin search_söka_CN = UttVP (UseV söka_V ; -- Swe
--- lin section_denna_avsnitt_CN = DetCN denna_Det (UseN avsnitt_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin segmentation_segmentering_CN = UseN segmentering_N ; -- Swe
lin selection_Urval_CN = UseN Urval_N ; -- Swe
oper Urval_N = mkN "Urval" ; -- Swe
lin selection_urval_CN = UseN urval_N ; -- Swe
lin semantics_semantik_CN = UseN semantik_N ; -- Swe
lin semaphore_semafor_CN = UseN semafor_N ; -- Swe
lin sequence_sekv_CN = UseN sekv_N ; -- Swe
oper sekv_N = mkN "sekv" ; -- Swe
lin session_plenum_CN = UseN plenum_N ; -- Swe
oper plenum_N = mkN "plenum" ; -- Swe
lin session_uppsättning_CN = UseN uppsättning_N ; -- Swe
lin set_föreläsning_CN = UseN föreläsning_N ; -- Swe
lin set_laboration_CN = UseN laboration_N ; -- Swe
lin skill_färdighet_CN = UseN färdighet_N ; -- Swe
lin skill_förmåga_CN = UseN förmåga_N ; -- Swe
lin software_miljard_CN = UseN miljard_N ; -- Swe
lin software_mjuk_CN = UseN mjuk_N ; -- Swe
oper mjuk_N = mkN "mjuk" ; -- Swe
lin software_mjukvara_CN = UseN mjukvara_N ; -- Swe
lin start_hemsid_CN = UseN hemsid_N ; -- Swe
oper hemsid_N = mkN "hemsid" ; -- Swe
--- lin start_börja_CN = UttVP (UseV börja_V ; -- Swe
oper börja_V = mkV "börja" ; -- Swe
lin state_dator_CN = UseN dator_N ; -- Swe
lin statement_uttalande_CN = UseN uttalande_N ; -- Swe
lin step_steg_CN = UseN steg_N ; -- Swe
--- lin structure_in_hanterbara_CN = PrepNP in_Prep (MassNP (UseN hanterbara_N)) ; -- Swe
oper hanterbara_N = mkN "hanterbara" ; -- Swe
lin structure_struktur_CN = UseN struktur_N ; -- Swe
lin student_elev_CN = UseN elev_N ; -- Swe
lin student_student_CN = UseN student_N ; -- Swe
lin study_nytta_CN = UseN nytta_N ; -- Swe
lin study_studi_CN = UseN studi_N ; -- Swe
oper studi_N = mkN "studi" ; -- Swe
lin sustainability_hållbarhet_CN = UseN hållbarhet_N ; -- Swe
--- lin switch_VLAN_CN = UsePN VLAN_PN ; -- Swe
oper VLAN_PN = mkPN "VLAN" ; -- Swe
lin synchronization_synkronisering_CN = UseN synkronisering_N ; -- Swe
lin syntax_Syntax_CN = UseN Syntax_N ; -- Swe
oper Syntax_N = mkN "Syntax" ; -- Swe
--- lin system_denna_diskussion_CN = DetCN denna_Det (UseN diskussion_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
lin system_datorsystem_CN = UseN datorsystem_N ; -- Swe
lin system_flygplan_CN = UseN flygplan_N ; -- Swe
lin system_komponent_CN = UseN komponent_N ; -- Swe
lin system_kurs_CN = UseN kurs_N ; -- Swe
lin system_operativsystem_CN = UseN operativsystem_N ; -- Swe
lin system_process_CN = UseN process_N ; -- Swe
lin system_system_CN = UseN system_N ; -- Swe
lin system_systemkonfiguration_CN = UseN systemkonfiguration_N ; -- Swe
oper systemkonfiguration_N = mkN "systemkonfiguration" ; -- Swe
lin task_mängd_CN = UseN mängd_N ; -- Swe
lin task_process_CN = UseN process_N ; -- Swe
lin task_systemarkitektur_CN = UseN systemarkitektur_N ; -- Swe
oper systemarkitektur_N = mkN "systemarkitektur" ; -- Swe
lin tasks_system_CN = UseN system_N ; -- Swe
lin technique_exempel_CN = UseN exempel_N ; -- Swe
lin technique_mjukvarutekniker_CN = UseN mjukvarutekniker_N ; -- Swe
oper mjukvarutekniker_N = mkN "mjukvarutekniker" ; -- Swe
lin technique_princip_CN = UseN princip_N ; -- Swe
lin technique_tekniker_CN = UseN tekniker_N ; -- Swe
--- lin technique_omfatta_CN = UttVP (UseV omfatta_V ; -- Swe
--- lin technology_den_sannolikt_CN = DetCN den_Det (UseN sannolikt_N) ; -- Swe
oper den_Det = mkDet "den" ; -- Swe
oper sannolikt_N = mkN "sannolikt" ; -- Swe
lin technology_teknik_CN = UseN teknik_N ; -- Swe
lin term_programvarudesign_CN = UseN programvarudesign_N ; -- Swe
oper programvarudesign_N = mkN "programvarudesign" ; -- Swe
lin text_sekvensdata_CN = UseN sekvensdata_N ; -- Swe
oper sekvensdata_N = mkN "sekvensdata" ; -- Swe
lin text_text_CN = UseN text_N ; -- Swe
lin theme_teman_CN = UseN teman_N ; -- Swe
oper teman_N = mkN "teman" ; -- Swe
lin theories_teori_CN = UseN teori_N ; -- Swe
oper teori_N = mkN "teori" ; -- Swe
lin theory_automatateori_CN = UseN automatateori_N ; -- Swe
lin theory_teori_CN = UseN teori_N ; -- Swe
oper teori_N = mkN "teori" ; -- Swe
--- lin theory_behandla_CN = UttVP (UseV behandla_V ; -- Swe
lin thesis_beräkningsmodell_CN = UseN beräkningsmodell_N ; -- Swe
oper beräkningsmodell_N = mkN "beräkningsmodell" ; -- Swe
lin timer_realtidsklocka_CN = UseN realtidsklocka_N ; -- Swe
oper realtidsklocka_N = mkN "realtidsklocka" ; -- Swe
--- lin today_utgör_a_viktig_komponent_CN = PrepNP utgör_Prep (DetCN a_Det (AdjCN (PositA viktig_A) (UseN komponent_N))) ; -- Swe
oper utgör_Prep = mkPrep "utgör" ; -- Swe
lin tool_verktyg_CN = UseN verktyg_N ; -- Swe
--- lin tool_förlita_CN = UttVP (UseV förlita_V ; -- Swe
oper förlita_V = mkV "förlita" ; -- Swe
lin topic_ämne_CN = UseN ämne_N ; -- Swe
lin topic_ämnesområde_CN = UseN ämnesområde_N ; -- Swe
--- lin topic_beskriva_CN = UttVP (UseV beskriva_V ; -- Swe
lin topics_block_CN = UseN block_N ; -- Swe
lin topics_moment_CN = UseN moment_N ; -- Swe
--- lin topics_vara_CN = vara_Adv ; -- Swe
oper vara_Adv = mkAdv "vara" ; -- Swe
lin topology_topologi_CN = UseN topologi_N ; -- Swe
oper topologi_N = mkN "topologi" ; -- Swe
lin trace_scheduling_CN = UseN scheduling_N ; -- Swe
oper scheduling_N = mkN "scheduling" ; -- Swe
--- lin train_fokusera_CN = UttVP (UseV fokusera_V ; -- Swe
lin transport_Transportprotokoll_CN = UseN Transportprotokoll_N ; -- Swe
oper Transportprotokoll_N = mkN "Transportprotokoll" ; -- Swe
--- lin use_hos_denna_algoritmer_CN = PrepNP hos_Prep (DetCN denna_Det (UseN algoritmer_N)) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
oper algoritmer_N = mkN "algoritmer" ; -- Swe
lin use_Användning_CN = UseN Användning_N ; -- Swe
oper Användning_N = mkN "Användning" ; -- Swe
lin value_värd_CN = UseN värd_N ; -- Swe
lin variety_arkitektur_CN = UseN arkitektur_N ; -- Swe
lin view_bakgrund_CN = UseN bakgrund_N ; -- Swe
lin way_sätt_CN = UseN sätt_N ; -- Swe
--- lin word_ord_CN = UsePN ord_PN ; -- Swe
oper ord_PN = mkPN "ord" ; -- Swe
--- lin work_arbeta_CN = UttVP (UseV arbeta_V ; -- Swe
--- lin Vector_Machine_supportvektormaskin_NP = UseN supportvektormaskin_N ; -- Swe
oper supportvektormaskin_N = mkN "supportvektormaskin" ; -- Swe
lin AI_AI_NP = UsePN AI_PN ; -- Swe
oper AI_PN = mkPN "AI" ; -- Swe
--- lin Discrete_matematik_NP = UseN matematik_N ; -- Swe
lin FrameNet_FrameN_NP = UsePN FrameN_PN ; -- Swe
oper FrameN_PN = mkPN "FrameN" ; -- Swe
--- lin Kaxira_and_NP = UseN and_N ; -- Swe
oper and_N = mkN "and" ; -- Swe
--- lin MCMC_dola_NP = dola_A ; -- Swe
oper dola_A = mkA "dola" ; -- Swe
lin MPI_MPI_NP = UsePN MPI_PN ; -- Swe
oper MPI_PN = mkPN "MPI" ; -- Swe
--- lin Machine_konstruktion_NP = UseN konstruktion_N ; -- Swe
lin NLP_NLP_NP = UsePN NLP_PN ; -- Swe
oper NLP_PN = mkPN "NLP" ; -- Swe
lin TCP_UDP_NP = UsePN UDP_PN ; -- Swe
oper UDP_PN = mkPN "UDP" ; -- Swe
lin Wordnet_Wordn_NP = UsePN Wordn_PN ; -- Swe
oper Wordn_PN = mkPN "Wordn" ; -- Swe
lin c_c_NP = UsePN c_PN ; -- Swe
oper c_PN = mkPN "c" ; -- Swe
--- lin explain_förklara_NP = UttVP (UseV förklara_V ; -- Swe
lin ae_syfte_NP = UsePN syfte_PN ; -- Swe
oper syfte_PN = mkPN "syfte" ; -- Swe
--- lin it_Kurs_NP = UseN Kurs_N ; -- Swe
oper Kurs_N = mkN "Kurs" ; -- Swe
lin one_a_sådan_metod_NP = DetCN a_Det (AdjCN (PositA sådan_A) (UseN metod_N)) ; -- Swe
oper sådan_A = mkA "sådan" ; -- Swe
--- lin one_huvudsyfte_NP = UseN huvudsyfte_N ; -- Swe
oper huvudsyfte_N = mkN "huvudsyfte" ; -- Swe
lin this_denna_moment_NP = DetCN denna_Det (UseN moment_N) ; -- Swe
oper denna_Det = mkDet "denna" ; -- Swe
--- lin youSg_student_NP = UseN student_N ; -- Swe
--- lin present_only_not_viktig_Utt = viktig_A ; -- Swe
--- lin important_much_statisk_Utt = statisk_A ; -- Swe
--- lin specific_course_Kursspecifik_Utt = Kursspecifik_A ; -- Swe
oper Kursspecifik_A = mkA "Kursspecifik" ; -- Swe
lin just_not_bara_inte_Utt = UttVP (AdvVP (UseAdv bara_Adv) inte_Adv) ; -- Swe
--- lin learn_outcomes_Lärandemål_Utt = UseN Lärandemål_N ; -- Swe
oper Lärandemål_N = mkN "Lärandemål" ; -- Swe
--- lin learn_theory_Inlärningsteori_Utt = Inlärningsteori_Adv ; -- Swe
oper Inlärningsteori_Adv = mkAdv "Inlärningsteori" ; -- Swe
--- lin structur_a_scientific_text_strukturering_possess_a_vetenskaplig_text_Utt = PrepCN (UseN strukturering_N) (PrepNP possess_Prep (DetCN a_Det (AdjCN (PositA vetenskaplig_A) (UseN text_N)))) ; -- Swe
--- lin tes_functional_program_testning_possess_funktionell_program_Utt = PrepCN (UseN testning_N) (PrepNP possess_Prep (MassNP (AdjCN (PositA funktionell_A) (UseN program_N)))) ; -- Swe
oper testning_N = mkN "testning" ; -- Swe
lin Construct_Konstruera_V = Konstruera_V ; -- Swe
oper Konstruera_V = mkV "Konstruera" ; -- Swe
--- lin Network_Nätverksapplikation_Utt = UseN Nätverksapplikation_N ; -- Swe
oper Nätverksapplikation_N = mkN "Nätverksapplikation" ; -- Swe
--- lin abstract_datatyp_Utt = UseN datatyp_N ; -- Swe
oper datatyp_N = mkN "datatyp" ; -- Swe
lin acquaint_bli_V = bli_V ; -- Swe
lin acquire_inhämta_V = inhämta_V ; -- Swe
--- lin address_adressering_Utt = UseN adressering_N ; -- Swe
--- lin advance_Algoritmer_Utt = UseN Algoritmer_N ; -- Swe
oper Algoritmer_N = mkN "Algoritmer" ; -- Swe
--- lin advance_differentialkalkyl_Utt = UseN differentialkalkyl_N ; -- Swe
lin advanced_basera_V = basera_V ; -- Swe
lin affect_beträffa_V = beträffa_V ; -- Swe
lin affect_påverka_V = påverka_V ; -- Swe
lin allow_göra_V = göra_V ; -- Swe
--- lin applied_maskininlärning_Utt = UseN maskininlärning_N ; -- Swe
oper maskininlärning_N = mkN "maskininlärning" ; -- Swe
lin apply_tillämpa_V = tillämpa_V ; -- Swe
lin appreciate_uppskatta_V = uppskatta_V ; -- Swe
lin appro_godkänd_V = godkänd_V ; -- Swe
oper godkänd_V = mkV "godkänd" ; -- Swe
lin ask_bli_V = bli_V ; -- Swe
lin assess_tillhöra_V = tillhöra_V ; -- Swe
lin avoid_välja_V = välja_V ; -- Swe
--- lin base_c_Utt = UsePN c_PN ; -- Swe
oper c_PN = mkPN "c" ; -- Swe
lin base_presentera_V = presentera_V ; -- Swe
--- lin base_basera_Utt = basera_A ; -- Swe
oper basera_A = mkA "basera" ; -- Swe
lin be_finnas_V = finnas_V ; -- Swe
oper finnas_V = mkV "finnas" ; -- Swe
lin be_handla_V = handla_V ; -- Swe
oper handla_V = mkV "handla" ; -- Swe
lin be_renommera_V = renommera_V ; -- Swe
oper renommera_V = mkV "renommera" ; -- Swe
lin capture_representera_V = representera_V ; -- Swe
oper representera_V = mkV "representera" ; -- Swe
--- lin communicate_kommunicering_Utt = UseN kommunicering_N ; -- Swe
lin communicate_kommunicera_V = kommunicera_V ; -- Swe
oper kommunicera_V = mkV "kommunicera" ; -- Swe
--- lin compound_datastruktur_Utt = UseN datastruktur_N ; -- Swe
oper datastruktur_N = mkN "datastruktur" ; -- Swe
lin compute_bestämma_V = bestämma_V ; -- Swe
--- lin concepts_grundbegrepp_Utt = UseN grundbegrepp_N ; -- Swe
lin consider_betrakta_V = betrakta_V ; -- Swe
lin consist_bestå_V = bestå_V ; -- Swe
oper bestå_V = mkV "bestå" ; -- Swe
--- lin construct_programmering_Utt = UseN programmering_N ; -- Swe
lin contain_innehålla_V = innehålla_V ; -- Swe
--- lin control_styrsystem_Utt = UseN styrsystem_N ; -- Swe
lin correspond_motsvara_V = motsvara_V ; -- Swe
--- lin cover_delområde_Utt = UseN delområde_N ; -- Swe
oper delområde_N = mkN "delområde" ; -- Swe
--- lin cover_tekniker_Utt = UseN tekniker_N ; -- Swe
lin cover_innehålla_V = innehålla_V ; -- Swe
lin cover_omfatta_V = omfatta_V ; -- Swe
lin cover_täcka_V = täcka_V ; -- Swe
lin deal_behandla_V = behandla_V ; -- Swe
lin deal_handla_V = handla_V ; -- Swe
oper handla_V = mkV "handla" ; -- Swe
lin demonstrate_demonstrera_V = demonstrera_V ; -- Swe
oper demonstrera_V = mkV "demonstrera" ; -- Swe
lin describe_beskriva_V = beskriva_V ; -- Swe
lin design_konstruerad_V = konstruerad_V ; -- Swe
oper konstruerad_V = mkV "konstruerad" ; -- Swe
lin detect_upptäcka_V = upptäcka_V ; -- Swe
lin determine_bestämma_V = bestämma_V ; -- Swe
lin develop_utveckla_V = utveckla_V ; -- Swe
lin directly_mäta_V = mäta_V ; -- Swe
--- lin discuss_teori_Utt = UseN teori_N ; -- Swe
oper teori_N = mkN "teori" ; -- Swe
lin discuss_diskutera_V = diskutera_V ; -- Swe
--- lin disk_hantering_Utt = UseN hantering_N ; -- Swe
--- lin distribute_distribuera_Utt = distribuera_A ; -- Swe
oper distribuera_A = mkA "distribuera" ; -- Swe
--- lin distribute_minne_Utt = minne_Adv ; -- Swe
oper minne_Adv = mkAdv "minne" ; -- Swe
lin divide_indela_V = indela_V ; -- Swe
lin divide_uppdela_V = uppdela_V ; -- Swe
--- lin do_Laboration_Utt = UseN Laboration_N ; -- Swe
oper Laboration_N = mkN "Laboration" ; -- Swe
--- lin e_Computer_Utt = UsePN Computer_PN ; -- Swe
oper Computer_PN = mkPN "Computer" ; -- Swe
lin estimate_uppskatta_V = uppskatta_V ; -- Swe
lin exemplify_exemplifiera_V = exemplifiera_V ; -- Swe
lin exist_finnas_V = finnas_V ; -- Swe
oper finnas_V = mkV "finnas" ; -- Swe
--- lin explain_egenskap_Utt = UseN egenskap_N ; -- Swe
--- lin explain_syfte_Utt = UseN syfte_N ; -- Swe
lin explain_redogöra_V = redogöra_V ; -- Swe
lin explore_utforska_V = utforska_V ; -- Swe
--- lin express_formel_Utt = UseN formel_N ; -- Swe
lin find_hitta_V = hitta_V ; -- Swe
--- lin flow_nätverksflöde_Utt = UseN nätverksflöde_N ; -- Swe
oper nätverksflöde_N = mkN "nätverksflöde" ; -- Swe
lin focus_behandla_V = behandla_V ; -- Swe
lin focus_fokusera_V = fokusera_V ; -- Swe
lin follow_följa_V = följa_V ; -- Swe
lin formulate_formulera_V = formulera_V ; -- Swe
lin give_ge_V = ge_V ; -- Swe
--- lin have_datavetenskap_Utt = UseN datavetenskap_N ; -- Swe
oper datavetenskap_N = mkN "datavetenskap" ; -- Swe
lin have_avklara_V = avklara_V ; -- Swe
oper avklara_V = mkV "avklara" ; -- Swe
lin have_flytta_V = flytta_V ; -- Swe
lin have_ha_V = ha_V ; -- Swe
--- lin idealise_dator_Utt = UseN dator_N ; -- Swe
--- lin identify_styrka_Utt = UseN styrka_N ; -- Swe
lin implement_realisera_V = realisera_V ; -- Swe
--- lin include_Examination_Utt = UseN Examination_N ; -- Swe
oper Examination_N = mkN "Examination" ; -- Swe
lin include_behandla_V = behandla_V ; -- Swe
lin include_bestå_V = bestå_V ; -- Swe
oper bestå_V = mkV "bestå" ; -- Swe
--- lin including_hp_Utt = UseN hp_N ; -- Swe
oper hp_N = mkN "hp" ; -- Swe
lin intend_avse_V = avse_V ; -- Swe
lin intend_syfta_V = syfta_V ; -- Swe
lin introduce_introducera_V = introducera_V ; -- Swe
lin investigate_undersöka_V = undersöka_V ; -- Swe
lin involve_omfatta_V = omfatta_V ; -- Swe
--- lin learn_Inlärning_Utt = UseN Inlärning_N ; -- Swe
oper Inlärning_N = mkN "Inlärning" ; -- Swe
--- lin learn_Introduktion_Utt = UseN Introduktion_N ; -- Swe
oper Introduktion_N = mkN "Introduktion" ; -- Swe
--- lin learn_inledning_Utt = UseN inledning_N ; -- Swe
--- lin learn_inlärning_Utt = UseN inlärning_N ; -- Swe
--- lin learn_learning_Utt = UseN learning_N ; -- Swe
oper learning_N = mkN "learning" ; -- Swe
lin learn_Algoritmer_V = Algoritmer_V ; -- Swe
oper Algoritmer_V = mkV "Algoritmer" ; -- Swe
lin learn_lära_V = lära_V ; -- Swe
lin level_behandla_V = behandla_V ; -- Swe
lin limit_omfatta_V = omfatta_V ; -- Swe
lin look_behandla_V = behandla_V ; -- Swe
--- lin loop_unrolling_Utt = UseN unrolling_N ; -- Swe
oper unrolling_N = mkN "unrolling" ; -- Swe
lin make_göra_V = göra_V ; -- Swe
lin manipulate_manipulera_V = manipulera_V ; -- Swe
lin mean_använda_V = använda_V ; -- Swe
lin measure_mäta_V = mäta_V ; -- Swe
--- lin mechanism_mekanismer_Utt = mekanismer_A ; -- Swe
oper mekanismer_A = mkA "mekanismer" ; -- Swe
lin meet_kre_V = kre_V ; -- Swe
oper kre_V = mkV "kre" ; -- Swe
lin mining_använda_V = använda_V ; -- Swe
--- lin modelle_Modellering_Utt = UseN Modellering_N ; -- Swe
oper Modellering_N = mkN "Modellering" ; -- Swe
lin modelling_modellera_V = modellera_V ; -- Swe
lin need_Utvärdera_V = Utvärdera_V ; -- Swe
oper Utvärdera_V = mkV "Utvärdera" ; -- Swe
lin need_behöver_V = behöver_V ; -- Swe
oper behöver_V = mkV "behöver" ; -- Swe
lin need_vara_V = vara_V ; -- Swe
oper vara_V = mkV "vara" ; -- Swe
lin obtain_bestämma_V = bestämma_V ; -- Swe
lin obtain_upprätthålla_V = upprätthålla_V ; -- Swe
--- lin organize_föreläsningsserie_Utt = UseN föreläsningsserie_N ; -- Swe
oper föreläsningsserie_N = mkN "föreläsningsserie" ; -- Swe
lin organize_organiserad_V = organiserad_V ; -- Swe
oper organiserad_V = mkV "organiserad" ; -- Swe
--- lin organize_organiserad_Utt = organiserad_A ; -- Swe
--- lin orient_programmeringsbegrepp_Utt = UseN programmeringsbegrepp_N ; -- Swe
oper programmeringsbegrepp_N = mkN "programmeringsbegrepp" ; -- Swe
lin parallelize_parallellisera_V = parallellisera_V ; -- Swe
--- lin parse_parsningsalgoritmer_Utt = UseN parsningsalgoritmer_N ; -- Swe
oper parsningsalgoritmer_N = mkN "parsningsalgoritmer" ; -- Swe
lin perform_utföra_V = utföra_V ; -- Swe
lin pertain_röra_V = röra_V ; -- Swe
--- lin pipelining_pipelining_Utt = UseN pipelining_N ; -- Swe
oper pipelining_N = mkN "pipelining" ; -- Swe
--- lin predict_gräns_Utt = UseN gräns_N ; -- Swe
--- lin prefetch_prefetching_Utt = UseN prefetching_N ; -- Swe
oper prefetching_N = mkN "prefetching" ; -- Swe
lin present_presentera_V = presentera_V ; -- Swe
--- lin present_ombedd_Utt = ombedd_A ; -- Swe
oper ombedd_A = mkA "ombedd" ; -- Swe
lin problem_Modellera_V = Modellera_V ; -- Swe
oper Modellera_V = mkV "Modellera" ; -- Swe
--- lin process_språkteknologi_Utt = UseN språkteknologi_N ; -- Swe
oper språkteknologi_N = mkN "språkteknologi" ; -- Swe
--- lin program_typ_Utt = UseN typ_N ; -- Swe
--- lin programme_Programming_Utt = UseN Programming_N ; -- Swe
oper Programming_N = mkN "Programming" ; -- Swe
--- lin programme_kurs_Utt = UseN kurs_N ; -- Swe
lin programme_använda_V = använda_V ; -- Swe
lin programming_Implementera_V = Implementera_V ; -- Swe
oper Implementera_V = mkV "Implementera" ; -- Swe
lin provide_ge_V = ge_V ; -- Swe
lin put_sitta_V = sitta_V ; -- Swe
--- lin randomize_algoritmer_Utt = UseN algoritmer_N ; -- Swe
oper algoritmer_N = mkN "algoritmer" ; -- Swe
lin read_läsa_V = läsa_V ; -- Swe
--- lin recommend_rekommenderad_Utt = rekommenderad_A ; -- Swe
oper rekommenderad_A = mkA "rekommenderad" ; -- Swe
lin reduce_angripa_V = angripa_V ; -- Swe
lin relate_relatera_V = relatera_V ; -- Swe
--- lin require_krav_Utt = UseN krav_N ; -- Swe
--- lin rout_LAN_Utt = UsePN LAN_PN ; -- Swe
oper LAN_PN = mkPN "LAN" ; -- Swe
lin save_spara_V = spara_V ; -- Swe
oper spara_V = mkV "spara" ; -- Swe
--- lin scheduling_hantering_Utt = UseN hantering_N ; -- Swe
lin show_beskriva_V = beskriva_V ; -- Swe
lin solve_lösa_V = lösa_V ; -- Swe
lin specify_specificera_V = specificera_V ; -- Swe
--- lin structur_strukturering_Utt = UseN strukturering_N ; -- Swe
lin structure_användbara_V = användbara_V ; -- Swe
oper användbara_V = mkV "användbara" ; -- Swe
lin study_studera_V = studera_V ; -- Swe
lin support_Deep_V = Deep_V ; -- Swe
oper Deep_V = mkV "Deep" ; -- Swe
--- lin tag_ordklasstaggning_Utt = UseN ordklasstaggning_N ; -- Swe
oper ordklasstaggning_N = mkN "ordklasstaggning" ; -- Swe
lin take_ske_V = ske_V ; -- Swe
lin teach_bestå_V = bestå_V ; -- Swe
oper bestå_V = mkV "bestå" ; -- Swe
--- lin tes_testning_Utt = UseN testning_N ; -- Swe
oper testning_N = mkN "testning" ; -- Swe
lin tes_ter_V = ter_V ; -- Swe
oper ter_V = mkV "ter" ; -- Swe
lin training_bia_V = bia_V ; -- Swe
oper bia_V = mkV "bia" ; -- Swe
--- lin understand_förståelse_Utt = UseN förståelse_N ; -- Swe
lin understand_redogöra_V = redogöra_V ; -- Swe
lin unrolle_predicatida_V = predicatida_V ; -- Swe
oper predicatida_V = mkV "predicatida" ; -- Swe
--- lin use_användning_Utt = UseN användning_N ; -- Swe
--- lin use_fokus_Utt = UseN fokus_N ; -- Swe
oper fokus_N = mkN "fokus" ; -- Swe
lin use_använda_V = använda_V ; -- Swe
lin use_demonstrera_V = demonstrera_V ; -- Swe
oper demonstrera_V = mkV "demonstrera" ; -- Swe
lin use_tillämpa_V = tillämpa_V ; -- Swe
--- lin welcome_grund_Utt = UseN grund_N ; -- Swe
oper grund_N = mkN "grund" ; -- Swe
--- lin able_visa_A = UttVP (UseV visa_V ; -- Swe
--- lin able_kunna_A = kunna_Adv ; -- Swe
oper kunna_Adv = mkAdv "kunna" ; -- Swe
lin additional_ytterlig_A = ytterlig_A ; -- Swe
lin adequate_lämplig_A = lämplig_A ; -- Swe
lin algebraic_algebraisk_A = algebraisk_A ; -- Swe
lin algorithm_energibesparande_A = energibesparande_A ; -- Swe
oper energibesparande_A = mkA "energibesparande" ; -- Swe
--- lin algorithm_randomisera_Adv = randomisera_A ; -- Swe
oper randomisera_A = mkA "randomisera" ; -- Swe
lin algorithmic_algoritmisk_A = algoritmisk_A ; -- Swe
oper algoritmisk_A = mkA "algoritmisk" ; -- Swe
lin almost_nästan_Adv = nästan_Adv ; -- Swe
lin already_redan_Adv = redan_Adv ; -- Swe
lin also_dels_Adv = dels_Adv ; -- Swe
lin also_också_Adv = också_Adv ; -- Swe
lin also_även_Adv = även_Adv ; -- Swe
lin analytical_analytisk_A = analytisk_A ; -- Swe
lin appropriate_lämplig_A = lämplig_A ; -- Swe
lin appropriate_stokastisk_A = stokastisk_A ; -- Swe
lin arbitrary_godtycklig_A = godtycklig_A ; -- Swe
lin architectural_arkitekturell_A = arkitekturell_A ; -- Swe
oper arkitekturell_A = mkA "arkitekturell" ; -- Swe
lin architectural_fler_A = fler_A ; -- Swe
oper fler_A = mkA "fler" ; -- Swe
lin architectural_kvantitativ_A = kvantitativ_A ; -- Swe
lin architecture_parallell_Adv = parallell_Adv ; -- Swe
oper parallell_Adv = mkAdv "parallell" ; -- Swe
--- lin artificial_Artificiell_A = Artificiell_Adv ; -- Swe
oper Artificiell_Adv = mkAdv "Artificiell" ; -- Swe
lin artificial_formell_A = formell_A ; -- Swe
lin associate_tillhörande_A = tillhörande_A ; -- Swe
oper tillhörande_A = mkA "tillhörande" ; -- Swe
lin automatically_kommersiellt_Adv = kommersiellt_Adv ; -- Swe
oper kommersiellt_Adv = mkAdv "kommersiellt" ; -- Swe
lin autonomous_autono_A = autono_A ; -- Swe
oper autono_A = mkA "autono" ; -- Swe
lin available_total_A = total_A ; -- Swe
lin available_vetenskaplig_A = vetenskaplig_A ; -- Swe
lin basic_fundamental_A = fundamental_A ; -- Swe
lin basic_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin basic_statistisk_A = statistisk_A ; -- Swe
lin binary_binära_A = binära_A ; -- Swe
oper binära_A = mkA "binära" ; -- Swe
lin branch_viktig_A = viktig_A ; -- Swe
lin broad_bred_A = bred_A ; -- Swe
--- lin build_bygga_Adv = UttVP (UseV bygga_V ; -- Swe
lin certain_viss_A = viss_A ; -- Swe
lin characteristic_karaktäristisk_A = karaktäristisk_A ; -- Swe
lin circuit_minska_A = minska_A ; -- Swe
oper minska_A = mkA "minska" ; -- Swe
lin classical_klassisk_A = klassisk_A ; -- Swe
lin commercial_kommersiell_A = kommersiell_A ; -- Swe
lin commercially_algoritmer_Adv = algoritmer_Adv ; -- Swe
oper algoritmer_Adv = mkAdv "algoritmer" ; -- Swe
lin common_vanlig_A = vanlig_A ; -- Swe
lin common_vanligen_Adv = vanligen_Adv ; -- Swe
lin complete_komplett_A = komplett_A ; -- Swe
lin complex_komplex_A = komplex_A ; -- Swe
lin complex_komplext_A = komplext_A ; -- Swe
oper komplext_A = mkA "komplext" ; -- Swe
lin comprehensive_omfattande_A = omfattande_A ; -- Swe
oper omfattande_A = mkA "omfattande" ; -- Swe
lin compulsory_obligatorisk_A = obligatorisk_A ; -- Swe
lin comput_viktig_A = viktig_A ; -- Swe
lin computational_linjär_A = linjär_A ; -- Swe
lin computational_seen_A = seen_A ; -- Swe
oper seen_A = mkA "seen" ; -- Swe
lin computer_energiförbrukningenbeskriv_A = energiförbrukningenbeskriv_A ; -- Swe
oper energiförbrukningenbeskriv_A = mkA "energiförbrukningenbeskriv" ; -- Swe
lin computer_industriell_A = industriell_A ; -- Swe
lin computer_olik_A = olik_A ; -- Swe
lin computer_specifik_A = specifik_A ; -- Swe
lin computer_sund_A = sund_A ; -- Swe
lin concurrent_förbereda_A = förbereda_A ; -- Swe
oper förbereda_A = mkA "förbereda" ; -- Swe
lin concurrent_parallell_A = parallell_A ; -- Swe
lin concurrent_parallella_A = parallella_A ; -- Swe
oper parallella_A = mkA "parallella" ; -- Swe
lin constraint_heuristisk_A = heuristisk_A ; -- Swe
lin contemporary_använda_A = använda_A ; -- Swe
oper använda_A = mkA "använda" ; -- Swe
lin contemporary_elementär_A = elementär_A ; -- Swe
lin contemporary_nutida_A = nutida_A ; -- Swe
oper nutida_A = mkA "nutida" ; -- Swe
lin core_data_A = data_A ; -- Swe
oper data_A = mkA "data" ; -- Swe
lin core_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin course_cyklisk_A = cyklisk_A ; -- Swe
lin course_dela_A = dela_A ; -- Swe
oper dela_A = mkA "dela" ; -- Swe
lin course_länka_A = länka_A ; -- Swe
oper länka_A = mkA "länka" ; -- Swe
lin course_muntlig_A = muntlig_A ; -- Swe
lin course_skriftlig_A = skriftlig_A ; -- Swe
lin course_dvs_Adv = dvs_Adv ; -- Swe
oper dvs_Adv = mkAdv "dvs" ; -- Swe
lin cross_tvärvetenskaplig_A = tvärvetenskaplig_A ; -- Swe
lin crucial_avgörande_A = avgörande_A ; -- Swe
oper avgörande_A = mkA "avgörande" ; -- Swe
lin current_aktuell_A = aktuell_A ; -- Swe
--- lin describe_beskrivad_Adv = UttVP (UseV beskrivad_V ; -- Swe
oper beskrivad_V = mkV "beskrivad" ; -- Swe
lin desire_önska_A = önska_A ; -- Swe
oper önska_A = mkA "önska" ; -- Swe
lin detailed_detaljerad_A = detaljerad_A ; -- Swe
lin different_identifiera_A = identifiera_A ; -- Swe
oper identifiera_A = mkA "identifiera" ; -- Swe
lin different_olik_A = olik_A ; -- Swe
lin difficult_svår_A = svår_A ; -- Swe
lin distribute_parallell_A = parallell_A ; -- Swe
--- lin do_presentera_Adv = UttVP (UseV presentera_V ; -- Swe
lin dual_dual_A = dual_A ; -- Swe
oper dual_A = mkA "dual" ; -- Swe
lin dualize_Dual_A = Dual_A ; -- Swe
oper Dual_A = mkA "Dual" ; -- Swe
lin dynamic_dynamisk_A = dynamisk_A ; -- Swe
lin efficient_högeffektiv_A = högeffektiv_A ; -- Swe
lin electrical_elektrisk_A = elektrisk_A ; -- Swe
lin electronic_liten_A = liten_A ; -- Swe
lin elementary_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin embed_inbygg_A = inbygg_A ; -- Swe
oper inbygg_A = mkA "inbygg" ; -- Swe
lin embed_inbyggd_A = inbyggd_A ; -- Swe
lin embed_strikt_A = strikt_A ; -- Swe
lin embed_viss_A = viss_A ; -- Swe
lin energy_elektronisk_A = elektronisk_A ; -- Swe
lin energy_inbyggt_A = inbyggt_A ; -- Swe
oper inbyggt_A = mkA "inbyggt" ; -- Swe
lin energy_minska_A = minska_A ; -- Swe
oper minska_A = mkA "minska" ; -- Swe
lin energy_energi_Adv = energi_Adv ; -- Swe
oper energi_Adv = mkAdv "energi" ; -- Swe
lin engineer_ultrasnabb_A = ultrasnabb_A ; -- Swe
lin enhance_viktig_A = viktig_A ; -- Swe
lin entry_avancerad_A = avancerad_A ; -- Swe
--- lin equivalent_hp_A = UseN hp_N ; -- Swe
oper hp_N = mkN "hp" ; -- Swe
lin equivalent_motsvarande_A = motsvarande_A ; -- Swe
oper motsvarande_A = mkA "motsvarande" ; -- Swe
lin especially_Trådlöst_Adv = Trådlöst_Adv ; -- Swe
oper Trådlöst_Adv = mkAdv "Trådlöst" ; -- Swe
lin especially_samtidigt_Adv = samtidigt_Adv ; -- Swe
oper samtidigt_Adv = mkAdv "samtidigt" ; -- Swe
--- lin etc_Grund_Adv = UseN Grund_N ; -- Swe
oper Grund_N = mkN "Grund" ; -- Swe
lin ethical_etisk_A = etisk_A ; -- Swe
lin evaluate_hur_Adv = hur_Adv ; -- Swe
lin everywhere_överallt_Adv = överallt_Adv ; -- Swe
lin exact_exakt_A = exakt_A ; -- Swe
lin extremely_extremd_Adv = extremd_Adv ; -- Swe
oper extremd_Adv = mkAdv "extremd" ; -- Swe
--- lin familiar_bekanta_A = UttVP (UseV bekanta_V ; -- Swe
--- lin familiar_ha_A = UttVP (UseV ha_V ; -- Swe
lin familiar_välbekant_A = välbekant_A ; -- Swe
lin fast_idag_Adv = idag_Adv ; -- Swe
lin final_slutlig_A = slutlig_A ; -- Swe
lin first_först_A = först_A ; -- Swe
oper först_A = mkA "först" ; -- Swe
lin follow_följande_A = följande_A ; -- Swe
oper följande_A = mkA "följande" ; -- Swe
--- lin for_datavetare_Prep = UseN datavetare_N ; -- Swe
oper datavetare_N = mkN "datavetare" ; -- Swe
lin formal_god_A = god_A ; -- Swe
oper god_A = mkA "god" ; -- Swe
lin formal_vanlig_A = vanlig_A ; -- Swe
lin foundational_matematisk_A = matematisk_A ; -- Swe
lin four_fyra_A = fyra_A ; -- Swe
oper fyra_A = mkA "fyra" ; -- Swe
lin four_fyra_Adv = fyra_Adv ; -- Swe
oper fyra_Adv = mkAdv "fyra" ; -- Swe
lin free_val_A = val_A ; -- Swe
oper val_A = mkA "val" ; -- Swe
lin functional_allmän_A = allmän_A ; -- Swe
lin functional_funktionell_A = funktionell_A ; -- Swe
lin functional_teknisk_A = teknisk_A ; -- Swe
lin fundamental_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin fundamental_konjunktivad_A = konjunktivad_A ; -- Swe
oper konjunktivad_A = mkA "konjunktivad" ; -- Swe
lin general_generell_A = generell_A ; -- Swe
lin general_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin general_motsvarande_A = motsvarande_A ; -- Swe
oper motsvarande_A = mkA "motsvarande" ; -- Swe
lin generate_skriv_A = skriv_A ; -- Swe
oper skriv_A = mkA "skriv" ; -- Swe
lin generic_generisk_A = generisk_A ; -- Swe
lin given_viss_A = viss_A ; -- Swe
lin good_gå_A = gå_A ; -- Swe
oper gå_A = mkA "gå" ; -- Swe
lin good_sådan_A = sådan_A ; -- Swe
oper sådan_A = mkA "sådan" ; -- Swe
lin graduate_inledande_A = inledande_A ; -- Swe
oper inledande_A = mkA "inledande" ; -- Swe
lin graph_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin hardware_inbygga_A = inbygga_A ; -- Swe
oper inbygga_A = mkA "inbygga" ; -- Swe
lin here_här_Adv = här_Adv ; -- Swe
lin high_hög_A = hög_A ; -- Swe
lin how_dessutom_Adv = dessutom_Adv ; -- Swe
lin how_hur_Adv = hur_Adv ; -- Swe
lin how_idag_Adv = idag_Adv ; -- Swe
lin how_kvantitativa_Adv = kvantitativa_Adv ; -- Swe
oper kvantitativa_Adv = mkAdv "kvantitativa" ; -- Swe
lin how_programmeringsmodell_Adv = programmeringsmodell_Adv ; -- Swe
oper programmeringsmodell_Adv = mkAdv "programmeringsmodell" ; -- Swe
lin how_även_Adv = även_Adv ; -- Swe
lin identify_olik_A = olik_A ; -- Swe
lin illustrate_konkret_A = konkret_A ; -- Swe
lin impact_kommande_A = kommande_A ; -- Swe
oper kommande_A = mkA "kommande" ; -- Swe
lin imperative_imperativad_A = imperativad_A ; -- Swe
oper imperativad_A = mkA "imperativad" ; -- Swe
--- lin important_Argumentera_A = UttVP (UseV Argumentera_V ; -- Swe
oper Argumentera_V = mkV "Argumentera" ; -- Swe
lin important_data_A = data_A ; -- Swe
oper data_A = mkA "data" ; -- Swe
lin important_fundamental_A = fundamental_A ; -- Swe
lin important_viktig_A = viktig_A ; -- Swe
--- lin individual_skriftligt_individuell_A = UttVP (AdvVP (UseAP (PositA skriftligt_A)) individuell_Adv) ; -- Swe
oper skriftligt_A = mkA "skriftligt" ; -- Swe
oper individuell_Adv = mkAdv "individuell" ; -- Swe
lin individual_individuell_A = individuell_A ; -- Swe
lin industrial_mången_A = mången_A ; -- Swe
oper mången_A = mkA "mången" ; -- Swe
lin integer_speciell_A = speciell_A ; -- Swe
lin interactive_interaktiv_A = interaktiv_A ; -- Swe
lin interest_intressant_A = intressant_A ; -- Swe
lin international_väletablerad_A = väletablerad_A ; -- Swe
lin intuitive_intuitiv_A = intuitiv_A ; -- Swe
lin intuitive_naturlig_A = naturlig_A ; -- Swe
lin joint_gemensam_A = gemensam_A ; -- Swe
lin just_bara_Adv = bara_Adv ; -- Swe
lin key_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin kind_industriell_A = industriell_A ; -- Swe
lin laboratory_samverkande_A = samverkande_A ; -- Swe
oper samverkande_A = mkA "samverkande" ; -- Swe
lin large_stor_A = stor_A ; -- Swe
lin last_själv_A = själv_A ; -- Swe
oper själv_A = mkA "själv" ; -- Swe
lin late_god_A = god_A ; -- Swe
oper god_A = mkA "god" ; -- Swe
lin late_successiva_Adv = successiva_Adv ; -- Swe
oper successiva_Adv = mkAdv "successiva" ; -- Swe
lin lazy_la_A = la_A ; -- Swe
oper la_A = mkA "la" ; -- Swe
lin learning_maskininlärningsbaserad_A = maskininlärningsbaserad_A ; -- Swe
oper maskininlärningsbaserad_A = mkA "maskininlärningsbaserad" ; -- Swe
lin linear_geometrisk_A = geometrisk_A ; -- Swe
lin logic_linjär_A = linjär_A ; -- Swe
lin logical_logisk_A = logisk_A ; -- Swe
lin low_låg_A = låg_A ; -- Swe
lin low_maskinnär_A = maskinnär_A ; -- Swe
oper maskinnär_A = mkA "maskinnär" ; -- Swe
lin main_Virtuellt_A = Virtuellt_A ; -- Swe
oper Virtuellt_A = mkA "Virtuellt" ; -- Swe
lin main_stor_A = stor_A ; -- Swe
lin main_täcker_A = täcker_A ; -- Swe
oper täcker_A = mkA "täcker" ; -- Swe
--- lin manageable_beräkningsmetod_A = UseN beräkningsmetod_N ; -- Swe
lin mandatory_obligatorisk_A = obligatorisk_A ; -- Swe
lin many_olik_A = olik_A ; -- Swe
lin mathematical_matematisk_A = matematisk_A ; -- Swe
lin medical_medicinsk_A = medicinsk_A ; -- Swe
lin miss_minska_A = minska_A ; -- Swe
oper minska_A = mkA "minska" ; -- Swe
lin mobile_lokal_A = lokal_A ; -- Swe
lin modern_modern_A = modern_A ; -- Swe
lin morphological_morfologisk_A = morfologisk_A ; -- Swe
--- lin much_grundlig_Adv = grundlig_A ; -- Swe
lin multiple_vanlig_A = vanlig_A ; -- Swe
lin naive_neural_A = neural_A ; -- Swe
lin natural_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin natural_huvudsaklig_A = huvudsaklig_A ; -- Swe
lin neural_neural_A = neural_A ; -- Swe
lin neural_reinforcement_A = reinforcement_A ; -- Swe
oper reinforcement_A = mkA "reinforcement" ; -- Swe
lin new_ny_A = ny_A ; -- Swe
lin normal_normal_Adv = normal_Adv ; -- Swe
oper normal_Adv = mkAdv "normal" ; -- Swe
lin now_hur_Adv = hur_Adv ; -- Swe
lin often_ofta_Adv = ofta_Adv ; -- Swe
oper ofta_Adv = mkAdv "ofta" ; -- Swe
--- lin one_modell_Adv = UseN modell_N ; -- Swe
lin one_en_Adv = en_Adv ; -- Swe
--- lin only_bara_inte_Adv = UttVP (AdvVP (UseAdv bara_Adv) inte_Adv) ; -- Swe
lin only_hur_Adv = hur_Adv ; -- Swe
lin operat_kommande_A = kommande_A ; -- Swe
oper kommande_A = mkA "kommande" ; -- Swe
lin oral_muntlig_A = muntlig_A ; -- Swe
lin orient_objektorienterad_A = objektorienterad_A ; -- Swe
oper objektorienterad_A = mkA "objektorienterad" ; -- Swe
lin other_annan_A = annan_A ; -- Swe
oper annan_A = mkA "annan" ; -- Swe
lin other_linjär_A = linjär_A ; -- Swe
lin parallel_distribuerad_A = distribuerad_A ; -- Swe
oper distribuerad_A = mkA "distribuerad" ; -- Swe
lin parallel_lämplig_A = lämplig_A ; -- Swe
lin parallel_parallell_A = parallell_A ; -- Swe
lin parallel_övre_A = övre_A ; -- Swe
oper övre_A = mkA "övre" ; -- Swe
lin particular_specifik_A = specifik_A ; -- Swe
lin philosophy_exekverande_A = exekverande_A ; -- Swe
oper exekverande_A = mkA "exekverande" ; -- Swe
lin pipelining_fler_A = fler_A ; -- Swe
oper fler_A = mkA "fler" ; -- Swe
lin popular_populär_A = populär_A ; -- Swe
--- lin possess_grund_Prep = UseN grund_N ; -- Swe
oper grund_N = mkN "grund" ; -- Swe
lin possible_möjlig_A = möjlig_A ; -- Swe
--- lin posterior_posteria_A = UseN posteria_N ; -- Swe
oper posteria_N = mkN "posteria" ; -- Swe
lin potential_eventuell_A = eventuell_A ; -- Swe
lin powerful_Kraftfull_A = Kraftfull_A ; -- Swe
oper Kraftfull_A = mkA "Kraftfull" ; -- Swe
lin practical_praktisk_A = praktisk_A ; -- Swe
lin predicate_model_A = model_A ; -- Swe
oper model_A = mkA "model" ; -- Swe
lin predicate_naturlig_A = naturlig_A ; -- Swe
lin primary_främ_A = främ_A ; -- Swe
oper främ_A = mkA "främ" ; -- Swe
--- lin probabilistic_on_tillämpning_A = PrepNP on_Prep (MassNP (UseN tillämpning_N)) ; -- Swe
lin professional_framtid_A = framtid_A ; -- Swe
oper framtid_A = mkA "framtid" ; -- Swe
lin programm_annan_A = annan_A ; -- Swe
oper annan_A = mkA "annan" ; -- Swe
lin programm_gemensam_A = gemensam_A ; -- Swe
lin programme_effektiv_A = effektiv_A ; -- Swe
lin propositional_logik_A = logik_A ; -- Swe
oper logik_A = mkA "logik" ; -- Swe
lin pure_ren_A = ren_A ; -- Swe
lin quantitative_kvantitativ_A = kvantitativ_A ; -- Swe
lin quantitative_för_Adv = för_Adv ; -- Swe
lin raw_inneboende_A = inneboende_A ; -- Swe
oper inneboende_A = mkA "inneboende" ; -- Swe
lin real_verklig_A = verklig_A ; -- Swe
lin realistic_realistisk_A = realistisk_A ; -- Swe
lin regularly_ofta_Adv = ofta_Adv ; -- Swe
oper ofta_Adv = mkAdv "ofta" ; -- Swe
lin relevant_relevant_A = relevant_A ; -- Swe
--- lin same_behörighet_A = UseN behörighet_N ; -- Swe
lin sample_parallell_A = parallell_A ; -- Swe
lin scientific_tillgänglig_A = tillgänglig_A ; -- Swe
lin scientific_vetenskaplig_A = vetenskaplig_A ; -- Swe
lin second_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin second_olik_A = olik_A ; -- Swe
lin secondary_minska_A = minska_A ; -- Swe
oper minska_A = mkA "minska" ; -- Swe
lin sequential_sekventiell_A = sekventiell_A ; -- Swe
lin several_viss_A = viss_A ; -- Swe
lin share_dela_A = dela_A ; -- Swe
oper dela_A = mkA "dela" ; -- Swe
lin short_kort_A = kort_A ; -- Swe
lin simple_bra_A = bra_A ; -- Swe
lin simple_enkel_A = enkel_A ; -- Swe
lin simple_idealisera_A = idealisera_A ; -- Swe
oper idealisera_A = mkA "idealisera" ; -- Swe
lin small_stor_A = stor_A ; -- Swe
lin smooth_differentiabel_A = differentiabel_A ; -- Swe
oper differentiabel_A = mkA "differentiabel" ; -- Swe
lin societal_samhällelig_A = samhällelig_A ; -- Swe
lin software_liten_A = liten_A ; -- Swe
lin software_parallell_A = parallell_A ; -- Swe
lin special_annan_A = annan_A ; -- Swe
oper annan_A = mkA "annan" ; -- Swe
lin specific_Utforma_A = Utforma_A ; -- Swe
oper Utforma_A = mkA "Utforma" ; -- Swe
lin specific_specifik_A = specifik_A ; -- Swe
lin specific_särskild_A = särskild_A ; -- Swe
lin standard_god_A = god_A ; -- Swe
oper god_A = mkA "god" ; -- Swe
lin static_statisk_A = statisk_A ; -- Swe
lin static_viktig_A = viktig_A ; -- Swe
lin statistical_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin statistical_probabilistisk_A = probabilistisk_A ; -- Swe
lin statistical_statistisk_A = statistisk_A ; -- Swe
lin still_fortfarande_Adv = fortfarande_Adv ; -- Swe
lin stochastic_stokastisk_A = stokastisk_A ; -- Swe
lin strict_inbyggd_A = inbyggd_A ; -- Swe
lin strict_strikt_A = strikt_A ; -- Swe
lin strong_diskret_A = diskret_A ; -- Swe
lin strong_stark_A = stark_A ; -- Swe
lin study_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin such_sådan_A = sådan_A ; -- Swe
oper sådan_A = mkA "sådan" ; -- Swe
--- lin sufficient_tillräckligt_A = tillräckligt_Adv ; -- Swe
oper tillräckligt_Adv = mkAdv "tillräckligt" ; -- Swe
lin suitable_lämplig_A = lämplig_A ; -- Swe
--- lin supervised_kurs_A = UseN kurs_N ; -- Swe
lin sustainable_hållbar_A = hållbar_A ; -- Swe
lin syntactic_syntaktisk_A = syntaktisk_A ; -- Swe
--- lin technical_skriva_A = UttVP (UseV skriva_V ; -- Swe
lin technical_viktig_A = viktig_A ; -- Swe
lin temporal_tidsmässig_A = tidsmässig_A ; -- Swe
lin textual_vanlig_A = vanlig_A ; -- Swe
lin theoretical_teoretisk_A = teoretisk_A ; -- Swe
lin there_där_Adv = där_Adv ; -- Swe
lin third_tre_A = tre_A ; -- Swe
oper tre_A = mkA "tre" ; -- Swe
lin thorough_grundläggande_A = grundläggande_A ; -- Swe
oper grundläggande_A = mkA "grundläggande" ; -- Swe
lin three_tre_Adv = tre_Adv ; -- Swe
oper tre_Adv = mkAdv "tre" ; -- Swe
lin topic_topic_A = topic_A ; -- Swe
oper topic_A = mkA "topic" ; -- Swe
lin two_två_Adv = två_Adv ; -- Swe
oper två_Adv = mkAdv "två" ; -- Swe
lin typical_lista_A = lista_A ; -- Swe
oper lista_A = mkA "lista" ; -- Swe
lin typical_typisk_A = typisk_A ; -- Swe
lin unnecessary_onödig_A = onödig_A ; -- Swe
lin unsupervised_olinjär_A = olinjär_A ; -- Swe
oper olinjär_A = mkA "olinjär" ; -- Swe
lin upper_parallell_A = parallell_A ; -- Swe
lin various_annan_A = annan_A ; -- Swe
oper annan_A = mkA "annan" ; -- Swe
lin very_dessutom_Adv = dessutom_Adv ; -- Swe
lin virtual_distribuerad_A = distribuerad_A ; -- Swe
oper distribuerad_A = mkA "distribuerad" ; -- Swe
lin virtual_virtual_A = virtual_A ; -- Swe
oper virtual_A = mkA "virtual" ; -- Swe
lin where_automatiskt_Adv = automatiskt_Adv ; -- Swe
oper automatiskt_Adv = mkAdv "automatiskt" ; -- Swe
lin where_där_Adv = där_Adv ; -- Swe
lin where_utgör_Adv = utgör_Adv ; -- Swe
oper utgör_Adv = mkAdv "utgör" ; -- Swe
lin whole_hel_A = hel_A ; -- Swe
lin why_varför_Adv = varför_Adv ; -- Swe
lin wide_bredd_A = bredd_A ; -- Swe
oper bredd_A = mkA "bredd" ; -- Swe
lin wide_olik_A = olik_A ; -- Swe
lin write_skriftlig_A = skriftlig_A ; -- Swe
--- lin write_skriv_Adv = skriv_A ; -- Swe
oper skriv_A = mkA "skriv" ; -- Swe
} -- Swe
