# newdoc id = data/course_plans/all_GU_en.txt
# newpar
# sent_id = 1
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 2
# text = Computer Organization and Design with a foundation in basic computer architecture design principles (pipelining and cache memory) corresponding to the Chalmers course EDA332/EDA331.
1	Computer	computer	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	Organization	organization	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	Design	design	NOUN	SG-NOM	Number=Sing	2	conj	_	_
5	with	with	ADP	_	_	7	case	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
7	foundation	foundation	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
8	in	in	ADP	_	_	13	case	_	_
9	basic	basic	ADJ	POS	Degree=Pos	13	amod	_	_
10	computer	computer	NOUN	SG-NOM	Number=Sing	13	compound	_	_
11	architecture	architecture	NOUN	SG-NOM	Number=Sing	13	compound	_	_
12	design	design	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	principles	principle	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
14	(	(	PUNCT	LeftParenthesis	_	15	punct	_	SpaceAfter=No
15	pipelining	pipelin	VERB	ING	Tense=Pres|VerbForm=Part	13	appos	_	_
16	and	and	CCONJ	_	_	18	cc	_	_
17	cache	cache	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
18	memory	memory	NOUN	SG-NOM	Number=Sing	15	conj	_	SpaceAfter=No
19	)	)	PUNCT	RightParenthesis	_	15	punct	_	_
20	corresponding	corresponde	VERB	ING	Tense=Pres|VerbForm=Part	7	acl	_	_
21	to	to	ADP	_	_	23	case	_	_
22	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
23	Chalmers	Chalmer	NOUN	PL-NOM	Number=Plur	20	obl	_	_
24	course	course	ADV	_	_	25	advmod	_	_
25	EDA332/EDA331	EDA332/EDA331	NUM	ID	_	23	nummod	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 3
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 4
# text = Computers are a key component in almost any technical system today because of their functional flexibility as well as ability to execute fast in a power efficient way.
1	Computers	Computer	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
2	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	5	cop	_	_
3	a	a	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
4	key	key	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	component	component	NOUN	SG-NOM	Number=Sing	0	root	_	_
6	in	in	ADP	_	_	10	case	_	_
7	almost	almost	ADV	_	_	10	advmod	_	_
8	any	any	DET	IND	_	10	det	_	_
9	technical	technical	ADJ	POS	Degree=Pos	10	amod	_	_
10	system	system	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
11	today	today	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
12	because	because	ADP	_	_	16	case	_	_
13	of	of	ADP	_	_	12	fixed	_	_
14	their	they	PRON	P3PL-GEN	_	16	nmod:poss	_	_
15	functional	functional	ADJ	POS	Degree=Pos	16	amod	_	_
16	flexibility	flexibility	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
17	as	as	ADV	_	_	19	advmod	_	_
18	well	well	ADV	_	Degree=Pos	17	fixed	_	_
19	as	as	SCONJ	_	_	22	mark	_	_
20	ability	ability	NOUN	SG-NOM	Number=Sing	22	nsubj	_	_
21	to	to	PART	_	_	22	mark	_	_
22	execute	execute	VERB	INF	VerbForm=Inf	16	acl	_	_
23	fast	fast	ADV	_	Degree=Pos	22	advmod	_	_
24	in	in	ADP	_	_	28	case	_	_
25	a	a	DET	IND-SG	Definite=Ind|PronType=Art	28	det	_	_
26	power	pow	NOUN	SG-NOM	Number=Sing	27	compound	_	_
27	efficient	efficient	NOUN	SG-NOM	Number=Sing	28	compound	_	_
28	way	way	NOUN	SG-NOM	Number=Sing	22	obl	_	SpaceAfter=No
29	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 5
# text = In fact, the computational performance of computers has doubled every 18 months over the last several decades.
1	In	in	ADP	_	_	2	case	_	_
2	fact	fact	NOUN	SG-NOM	Number=Sing	10	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	computational	computational	ADJ	POS	Degree=Pos	6	amod	_	_
6	performance	performance	NOUN	SG-NOM	Number=Sing	10	nsubj	_	_
7	of	of	ADP	_	_	8	case	_	_
8	computers	computer	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	has	have	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux	_	_
10	doubled	double	VERB	PERF	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
11	every	every	DET	TOT-SG	_	13	det	_	_
12	18	18	NUM	CARD-PL	NumType=Card	13	nummod	_	_
13	months	month	NOUN	PL-NOM	Number=Plur	10	obj	_	_
14	over	over	ADP	_	_	18	case	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
16	last	last	ADJ	SPL	Degree=Pos	18	amod	_	_
17	several	several	ADJ	POS	Degree=Pos	18	amod	_	_
18	decades	decade	NOUN	PL-NOM	Number=Plur	10	obl	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	10	punct	_	SpacesAfter=\s\n

# sent_id = 6
# text = One important reason is progress in computer architecture, which is the engineering discipline on computer design, which conveys principles for how to convert the raw speed of transistors into application software performance through computational structures that exploit the parallelism in software.
1	One	one	NUM	CARD-SG	NumType=Card	3	nummod	_	_
2	important	important	ADJ	POS	Degree=Pos	3	amod	_	_
3	reason	reason	NOUN	SG-NOM	Number=Sing	5	nsubj	_	_
4	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	progress	progress	VERB	IMP	VerbForm=Inf	0	root	_	_
6	in	in	ADP	_	_	8	case	_	_
7	computer	computer	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	architecture	architecture	NOUN	SG-NOM	Number=Sing	5	obl	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	14	punct	_	_
10	which	which	PRON	WH-REL	PronType=Int	14	nsubj	_	_
11	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
13	engineering	engineer	ADJ	ING	Degree=Pos	14	amod	_	_
14	discipline	discipline	NOUN	SG-NOM	Number=Sing	5	appos	_	_
15	on	on	ADP	_	_	17	case	_	_
16	computer	computer	NOUN	SG-NOM	Number=Sing	17	compound	_	_
17	design	design	NOUN	SG-NOM	Number=Sing	14	nmod	_	SpaceAfter=No
18	,	,	PUNCT	Comma	_	20	punct	_	_
19	which	which	PRON	WH-REL	PronType=Int	20	nsubj	_	_
20	conveys	convey	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	acl:relcl	_	_
21	principles	principle	NOUN	PL-NOM	Number=Plur	20	obj	_	_
22	for	for	ADP	_	_	25	mark	_	_
23	how	how	ADV	WH	PronType=Int	25	advmod	_	_
24	to	to	PART	_	_	25	mark	_	_
25	convert	convert	VERB	INF	VerbForm=Inf	21	acl	_	_
26	the	the	DET	DEF	Definite=Def|PronType=Art	28	det	_	_
27	raw	raw	ADJ	POS	Degree=Pos	28	amod	_	_
28	speed	speed	NOUN	SG-NOM	Number=Sing	25	obj	_	_
29	of	of	ADP	_	_	30	case	_	_
30	transistors	transistor	NOUN	PL-NOM	Number=Plur	28	nmod	_	_
31	into	into	ADP	_	_	34	case	_	_
32	application	application	NOUN	SG-NOM	Number=Sing	34	compound	_	_
33	software	software	ADJ	POS	Degree=Pos	34	amod	_	_
34	performance	performance	NOUN	SG-NOM	Number=Sing	30	nmod	_	_
35	through	through	ADP	_	_	37	case	_	_
36	computational	computational	ADJ	POS	Degree=Pos	37	amod	_	_
37	structures	structure	NOUN	PL-NOM	Number=Plur	34	nmod	_	_
38	that	that	PRON	REL	PronType=Rel	39	nsubj	_	_
39	exploit	exploit	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	37	acl:relcl	_	_
40	the	the	DET	DEF	Definite=Def|PronType=Art	41	det	_	_
41	parallelism	parallelism	NOUN	SG-NOM	Number=Sing	39	obj	_	_
42	in	in	ADP	_	_	43	case	_	_
43	software	software	NOUN	SG-NOM	Number=Sing	41	nmod	_	SpaceAfter=No
44	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 7
# text = This course covers the important principles for how to design a computer that offers high performance to the application software.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	covers	cover	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	important	important	ADJ	POS	Degree=Pos	6	amod	_	_
6	principles	principle	NOUN	PL-NOM	Number=Plur	3	obj	_	_
7	for	for	ADP	_	_	10	mark	_	_
8	how	how	ADV	WH	PronType=Int	10	advmod	_	_
9	to	to	PART	_	_	10	mark	_	_
10	design	design	VERB	INF	VerbForm=Inf	6	acl	_	_
11	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
12	computer	computer	NOUN	SG-NOM	Number=Sing	10	obj	_	_
13	that	that	PRON	REL	PronType=Rel	14	nsubj	_	_
14	offers	offer	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	acl:relcl	_	_
15	high	high	ADJ	POS	Degree=Pos	16	amod	_	_
16	performance	performance	NOUN	SG-NOM	Number=Sing	14	obj	_	_
17	to	to	ADP	_	_	20	case	_	_
18	the	the	DET	DEF	Definite=Def|PronType=Art	20	det	_	_
19	application	application	NOUN	SG-NOM	Number=Sing	20	compound	_	_
20	software	software	NOUN	SG-NOM	Number=Sing	16	nmod	_	SpaceAfter=No
21	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 8
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 9
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 10
# text = master concepts and structures in modern computer architectures in order to follow the research advances in this field;
1	master	master	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	concepts	concept	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	structures	structure	NOUN	PL-NOM	Number=Plur	2	conj	_	_
5	in	in	ADP	_	_	8	case	_	_
6	modern	modern	ADJ	POS	Degree=Pos	8	amod	_	_
7	computer	computer	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	architectures	architecture	NOUN	PL-NOM	Number=Plur	2	nmod	_	_
9	in	in	ADP	_	Case=Nom	10	case	_	_
10	order	order	NOUN	_	Number=Sing	8	nmod	_	_
11	to	to	PART	_	_	12	mark	_	_
12	follow	follow	VERB	INF	VerbForm=Inf	2	acl	_	_
13	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
14	research	research	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	advances	advance	NOUN	PL-NOM	Number=Plur	12	obj	_	_
16	in	in	ADP	_	_	18	case	_	_
17	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	18	det	_	_
18	field	field	NOUN	SG-NOM	Number=Sing	12	obl	_	SpaceAfter=No
19	;	;	PUNCT	SemiColon	_	2	punct	_	SpacesAfter=\n

# sent_id = 11
# text = understand the principles behind a modern microprocessor; especially advanced pipelining techniques that can execute multiple instructions in parallel
1	understand	understand	VERB	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	principles	principle	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	behind	behind	ADP	_	_	7	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
6	modern	modern	ADJ	POS	Degree=Pos	7	amod	_	_
7	microprocessor	microprocessor	NOUN	SG-NOM	Number=Sing	3	nmod	_	SpaceAfter=No
8	;	;	PUNCT	SemiColon	_	1	punct	_	_
9	especially	especially	ADV	_	_	10	advmod	_	_
10	advanced	advanced	VERB	PAST	Case=Nom	1	conj	_	_
11	pipelining	pipelining	ADJ	POS	Degree=Pos	12	amod	_	_
12	techniques	technique	NOUN	PL-NOM	Number=Plur	10	obj	_	_
13	that	that	PRON	REL	PronType=Rel	15	nsubj	_	_
14	can	can	AUX	PRES-AUX	VerbForm=Fin	15	aux	_	_
15	execute	execute	VERB	INF	VerbForm=Inf	12	acl:relcl	_	_
16	multiple	multiple	ADJ	POS	Degree=Pos	17	amod	_	_
17	instructions	instruction	NOUN	PL-NOM	Number=Plur	15	obj	_	_
18	in	in	ADP	_	_	19	case	_	_
19	parallel	parallel	NOUN	SG-NOM	Number=Sing	15	obl	_	SpacesAfter=\n

# sent_id = 12
# text = understand the principles behind modern memory hierarchies
1	understand	understand	VERB	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	principles	principle	NOUN	PL-NOM	Number=Plur	7	compound	_	_
4	behind	behind	ADP	_	_	6	case	_	_
5	modern	modern	ADJ	POS	Degree=Pos	6	amod	_	_
6	memory	memory	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	hierarchies	hierarchie	NOUN	PL-NOM	Number=Plur	1	obj	_	SpacesAfter=\n

# sent_id = 13
# text = proficiency in quantitatively establishing the impact of architectural techniques on the performance of application software using state-of-the-art simulation tools.
1	proficiency	proficiency	NOUN	SG-NOM	Number=Sing	16	nsubj	_	_
2	in	in	ADP	_	_	4	mark	_	_
3	quantitatively	quantitative	ADV	_	_	4	advmod	_	_
4	establishing	establish	VERB	ING	Tense=Pres|VerbForm=Part	1	acl	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	impact	impact	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	of	of	ADP	_	_	9	case	_	_
8	architectural	architectural	ADJ	POS	Degree=Pos	9	amod	_	_
9	techniques	technique	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
10	on	on	ADP	_	_	12	case	_	_
11	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
12	performance	performance	NOUN	SG-NOM	Number=Sing	9	nmod	_	_
13	of	of	ADP	_	_	14	case	_	_
14	application	application	NOUN	SG-NOM	Number=Sing	12	nmod	_	_
15	software	software	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	16	aux	_	_
16	using	use	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
17	state-of-the-art	state-of-the-art	NOUN	SG-NOM	Number=Sing	19	compound	_	_
18	simulation	simulation	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	tools	tool	NOUN	PL-NOM	Number=Plur	16	obj	_	SpaceAfter=No
20	.	.	PUNCT	Period	_	16	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 14
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 15
# text = The course covers architectural techniques essential for achieving high performance for application software.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	covers	cover	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
4	architectural	architectural	ADJ	POS	Degree=Pos	5	amod	_	_
5	techniques	technique	NOUN	PL-NOM	Number=Plur	0	root	_	_
6	essential	essential	ADJ	POS	Degree=Pos	5	amod	_	_
7	for	for	ADP	_	_	8	mark	_	_
8	achieving	achieve	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
9	high	high	ADJ	POS	Degree=Pos	10	amod	_	_
10	performance	performance	NOUN	SG-NOM	Number=Sing	8	obj	_	_
11	for	for	ADP	_	_	13	case	_	_
12	application	application	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	software	software	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n

# sent_id = 16
# text = It also covers simulation-based analysis methods for quantitative assessment of the impact a certain architectural technique has on performance and power consumption.
1	It	it	PRON	PERS-SG	_	3	nsubj	_	_
2	also	also	ADV	_	_	3	advmod	_	_
3	covers	cover	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	simulation-based	simulation-base	ADJ	POS	Degree=Pos	6	amod	_	_
5	analysis	analysis	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	methods	method	NOUN	PL-NOM	Number=Plur	3	obj	_	_
7	for	for	ADP	_	_	9	case	_	_
8	quantitative	quantitative	ADJ	POS	Degree=Pos	9	amod	_	_
9	assessment	assessment	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
10	of	of	ADP	_	_	12	case	_	_
11	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
12	impact	impact	NOUN	SG-NOM	Number=Sing	9	nmod	_	_
13	a	a	DET	IND-SG	Definite=Ind|PronType=Art	16	det	_	_
14	certain	certain	ADJ	POS	Degree=Pos	16	amod	_	_
15	architectural	architectural	ADJ	POS	Degree=Pos	16	amod	_	_
16	technique	technique	NOUN	SG-NOM	Number=Sing	17	nsubj	_	_
17	has	have	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	acl:relcl	_	_
18	on	on	ADP	_	_	19	case	_	_
19	performance	performance	NOUN	SG-NOM	Number=Sing	17	obl	_	_
20	and	and	CCONJ	_	_	22	cc	_	_
21	power	power	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	consumption	consumption	NOUN	SG-NOM	Number=Sing	19	conj	_	SpaceAfter=No
23	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 17
# text = The content is divided into the following parts:
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	content	content	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	divided	divide	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	into	into	ADP	_	_	8	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
7	following	follow	ADJ	ING	Case=Nom	8	amod	_	_
8	parts	part	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
9	:	:	PUNCT	Colon	_	4	punct	_	SpacesAfter=\n

# sent_id = 18
# text = The first part covers trends that affect the evolution of computer technology including Moore s law, metrics of performance (execution time versus throughput) and power consumption, benchmarking as well as fundamentals of computer performance such as Amdahl's law and locality of reference.
1	The	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
2	first	first	ADJ	ORD	Degree=Pos|NumType=Ord	5	amod	_	_
3	part	part	NOUN	SG-NOM	Number=Sing	5	compound	_	_
4	covers	cover	NOUN	PL-NOM	Number=Plur	5	compound	_	_
5	trends	trend	NOUN	PL-NOM	Number=Plur	0	root	_	_
6	that	that	PRON	REL	PronType=Rel	7	nsubj	_	_
7	affect	affect	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	5	acl:relcl	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
9	evolution	evolution	NOUN	SG-NOM	Number=Sing	7	obj	_	_
10	of	of	ADP	_	_	12	case	_	_
11	computer	computer	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	technology	technology	NOUN	SG-NOM	Number=Sing	9	nmod	_	_
13	including	include	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
14	Moore	Moore	ADJ	CMP	Degree=Cmp	15	amod	_	_
15	s	s	NOUN	PL-NOM	Number=Plur	13	obj	_	_
16	law	law	NOUN	SG-NOM	Number=Sing	15	appos	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	metrics	metrics	NOUN	PL-NOM	Number=Plur	16	conj	_	_
19	of	of	ADP	_	_	20	case	_	_
20	performance	performance	NOUN	SG-NOM	Number=Sing	18	nmod	_	_
21	(	(	PUNCT	LeftParenthesis	_	25	punct	_	SpaceAfter=No
22	execution	execution	NOUN	SG-NOM	Number=Sing	24	compound	_	_
23	time	time	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	versus	versus	NOUN	PL-NOM	Number=Plur	25	nsubj	_	_
25	throughput	throughput	VERB	PERF	Mood=Ind|Tense=Pres|VerbForm=Fin	20	acl:relcl	_	SpaceAfter=No
26	)	)	PUNCT	RightParenthesis	_	25	punct	_	_
27	and	and	CCONJ	_	_	29	cc	_	_
28	power	pow	NOUN	SG-NOM	Number=Sing	29	compound	_	_
29	consumption	consumption	NOUN	SG-NOM	Number=Sing	25	conj	_	SpaceAfter=No
30	,	,	PUNCT	Comma	_	31	punct	_	_
31	benchmarking	benchmark	VERB	ING	Tense=Pres|VerbForm=Part	29	acl	_	_
32	as	as	ADV	_	_	31	advmod	_	_
33	well	well	ADV	_	Degree=Pos	32	fixed	_	_
34	as	as	ADP	_	_	35	case	_	_
35	fundamentals	fundamental	NOUN	PL-NOM	Number=Plur	31	obl	_	_
36	of	of	ADP	_	_	38	case	_	_
37	computer	computer	NOUN	SG-NOM	Number=Sing	38	compound	_	_
38	performance	performance	NOUN	SG-NOM	Number=Sing	35	nmod	_	_
39	such	such	ADJ	ADJ	Case=Nom	38	amod	_	_
40	as	as	ADP	_	_	43	case	_	_
41	Amdahl	Amdahl	PROPN	SG-NOM	Number=Sing	43	nmod:poss	_	SpaceAfter=No
42	's	's	PART	GEN	_	41	case	_	_
43	law	law	NOUN	SG-NOM	Number=Sing	39	nmod	_	_
44	and	and	CCONJ	_	_	45	cc	_	_
45	locality	locality	NOUN	SG-NOM	Number=Sing	43	conj	_	_
46	of	of	ADP	_	_	47	case	_	_
47	reference	reference	NOUN	SG-NOM	Number=Sing	45	nmod	_	SpaceAfter=No
48	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 19
# text = It also covers how simulation based techniques can be used to quantitatively evaluate the impact of design principles on computer performance.
1	It	it	PRON	PERS-SG	_	3	expl	_	_
2	also	also	ADV	_	_	3	advmod	_	_
3	covers	cover	NOUN	PL-NOM	Number=Plur	10	nsubj:pass	_	_
4	how	how	ADV	WH	PronType=Int	5	advmod	_	_
5	simulation	simulation	NOUN	SG-NOM	Number=Sing	7	compound	_	_
6	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	5	acl	_	_
7	techniques	technique	NOUN	PL-NOM	Number=Plur	10	nsubj:pass	_	_
8	can	can	AUX	PRES-AUX	VerbForm=Fin	10	aux	_	_
9	be	be	AUX	INF	VerbForm=Inf	10	aux:pass	_	_
10	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
11	to	to	PART	_	_	12	mark	_	_
12	quantitatively	quantitative	VERB	INF	VerbForm=Inf	10	xcomp	_	_
13	evaluate	evaluate	ADV	_	Degree=Pos	12	advmod	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
15	impact	impact	NOUN	SG-NOM	Number=Sing	12	obj	_	_
16	of	of	ADP	_	_	18	case	_	_
17	design	design	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	principles	principle	NOUN	PL-NOM	Number=Plur	15	nmod	_	_
19	on	on	ADP	_	_	21	case	_	_
20	computer	computer	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	performance	performance	NOUN	SG-NOM	Number=Sing	18	nmod	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	10	punct	_	SpacesAfter=\n

# sent_id = 20
# text = The second part covers various techniques for exploitation of instruction level parallelism (ILP) by defining key concepts for what ILP is and what limits it.
1	The	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
2	second	second	ADJ	ORD	Degree=Pos|NumType=Ord	3	amod	_	_
3	part	part	NOUN	SG-NOM	Number=Sing	6	compound	_	_
4	covers	cover	NOUN	PL-NOM	Number=Plur	6	compound	_	_
5	various	various	ADJ	POS	Degree=Pos	6	amod	_	_
6	techniques	technique	NOUN	PL-NOM	Number=Plur	26	nsubj	_	_
7	for	for	ADP	_	_	8	case	_	_
8	exploitation	exploitation	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
9	of	of	ADP	_	_	12	case	_	_
10	instruction	instruction	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	level	level	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	parallelism	parallelism	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
13	(	(	PUNCT	LeftParenthesis	_	14	punct	_	SpaceAfter=No
14	ILP	ILP	PROPN	SG-NOM	Case=Nom	12	appos	_	SpaceAfter=No
15	)	)	PUNCT	RightParenthesis	_	14	punct	_	_
16	by	by	ADP	_	_	17	mark	_	_
17	defining	define	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
18	key	key	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	concepts	concept	NOUN	PL-NOM	Number=Plur	17	obj	_	_
20	for	for	ADP	_	_	22	case	_	_
21	what	what	DET	WH	PronType=Int	22	det	_	_
22	ILP	ILP	NOUN	SG-NOM	Number=Sing	17	obl	_	_
23	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	26	cop	_	_
24	and	and	CCONJ	_	_	26	cc	_	_
25	what	what	PRON	WH	PronType=Int	26	nsubj	_	_
26	limits	limit	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
27	it	it	PRON	PERS-SG	_	26	obj	_	SpaceAfter=No
28	.	.	PUNCT	Period	_	26	punct	_	SpacesAfter=\s\n

# sent_id = 21
# text = The techniques covered fall into two broad categories: dynamic and static techniques.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	techniques	technique	NOUN	PL-NOM	Number=Plur	3	nsubj	_	_
3	covered	cover	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
4	fall	fall	NOUN	SG-NOM	Number=Sing	3	obj	_	_
5	into	into	ADP	_	_	8	case	_	_
6	two	two	NUM	CARD-PL	NumType=Card	8	nummod	_	_
7	broad	broad	ADJ	POS	Degree=Pos	8	amod	_	_
8	categories	category	NOUN	PL-NOM	Number=Plur	3	obl	_	SpaceAfter=No
9	:	:	PUNCT	Colon	_	3	punct	_	_
10	dynamic	dynamic	ADJ	POS	Degree=Pos	13	amod	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	static	static	ADJ	POS	Degree=Pos	10	conj	_	_
13	techniques	technique	NOUN	PL-NOM	Number=Plur	3	conj	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 22
# text = The most important dynamic techniques covered are Tomasulo s algorithm, branch prediction, and speculation.
1	The	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
2	most	much	ADV	SPL	_	3	advmod	_	_
3	important	important	ADJ	POS	Degree=Pos	5	amod	_	_
4	dynamic	dynamic	ADJ	POS	Degree=Pos	5	amod	_	_
5	techniques	technique	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
6	covered	cover	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
7	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	10	cop	_	_
8	Tomasulo	Tomasulo	PROPN	SG-NOM	Number=Sing	10	compound	_	_
9	s	s	NOUN	PL-NOM	Number=Plur	10	compound	_	_
10	algorithm	algorithm	NOUN	PL-NOM	Number=Plur	6	obj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	13	punct	_	_
12	branch	branch	ADJ	POS	Degree=Pos	13	amod	_	_
13	prediction	prediction	NOUN	SG-NOM	Number=Sing	10	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	13	punct	_	_
15	and	and	CCONJ	_	_	16	cc	_	_
16	speculation	speculation	NOUN	SG-NOM	Number=Sing	10	conj	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 23
# text = The most important static techniques are loop unrolling, software pipelining, trace scheduling, and predicated execution.
1	The	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
2	most	much	ADV	SPL	_	3	advmod	_	_
3	important	important	ADJ	POS	Degree=Pos	5	amod	_	_
4	static	static	ADJ	POS	Degree=Pos	5	amod	_	_
5	techniques	technique	NOUN	PL-NOM	Number=Plur	7	nsubj	_	_
6	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	loop	loop	VERB	IMP	VerbForm=Inf	0	root	_	_
8	unrolling	unrolle	VERB	ING	Tense=Pres|VerbForm=Part	7	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	8	punct	_	_
10	software	software	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	11	aux	_	_
11	pipelining	pipelining	VERB	ING	Tense=Pres|VerbForm=Part	7	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	13	punct	_	_
13	trace	trace	NOUN	SG-NOM	Number=Sing	7	conj	_	_
14	scheduling	scheduling	VERB	ING	Tense=Pres|VerbForm=Part	7	conj	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	7	punct	_	_
16	and	and	CCONJ	_	_	17	cc	_	_
17	predicated	predicate	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	7	conj	_	_
18	execution	execution	NOUN	SG-NOM	Number=Sing	17	obj	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	7	punct	_	SpacesAfter=\n

# sent_id = 24
# text = The third part deals with memory hierarchies.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	third	third	ADJ	ORD	Degree=Pos|NumType=Ord	3	amod	_	_
3	part	part	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
4	deals	deal	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	with	with	ADP	_	_	7	case	_	_
6	memory	memory	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	hierarchies	hierarchie	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 25
# text = This part covers techniques to attack the different sources of performance bottlenecks in the memory hierarchy such as techniques to reduce the miss rate, the miss penalty, and the hit time.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
2	part	part	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	covers	cover	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
4	techniques	technique	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	to	to	PART	_	_	6	mark	_	_
6	attack	attack	VERB	INF	VerbForm=Inf	0	root	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
8	different	different	ADJ	POS	Degree=Pos	9	amod	_	_
9	sources	source	NOUN	PL-NOM	Number=Plur	6	obj	_	_
10	of	of	ADP	_	_	12	case	_	_
11	performance	performance	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	bottlenecks	bottleneck	NOUN	PL-NOM	Number=Plur	9	nmod	_	_
13	in	in	ADP	_	_	15	case	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
15	memory	memory	NOUN	SG-NOM	Number=Sing	6	obl	_	_
16	hierarchy	hierarchy	ADV	WH	PronType=Int	17	advmod	_	_
17	such	such	ADJ	ADJ	Case=Nom	15	amod	_	_
18	as	as	ADP	_	_	19	case	_	_
19	techniques	technique	NOUN	PL-NOM	Number=Plur	17	nmod	_	_
20	to	to	PART	_	_	21	mark	_	_
21	reduce	reduce	VERB	INF	VerbForm=Inf	6	advcl	_	_
22	the	the	DET	DEF	Definite=Def|PronType=Art	24	det	_	_
23	miss	miss	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	rate	rate	NOUN	SG-NOM	Number=Sing	21	obj	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	28	punct	_	_
26	the	the	DET	DEF	Definite=Def|PronType=Art	28	det	_	_
27	miss	miss	ADJ	POS	Degree=Pos	28	amod	_	_
28	penalty	penalty	NOUN	SG-NOM	Number=Sing	24	conj	_	SpaceAfter=No
29	,	,	PUNCT	Comma	_	6	punct	_	_
30	and	and	CCONJ	_	_	33	cc	_	_
31	the	the	DET	DEF	Definite=Def|PronType=Art	33	det	_	_
32	hit	hit	NOUN	SG-NOM	Number=Sing	33	compound	_	_
33	time	time	NOUN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
34	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 26
# text = Example techniques covered are victim caches, lockup-free caches, prefetching, virtually addressed caches.
1	Example	example	ADJ	POS	Degree=Pos	2	amod	_	_
2	techniques	technique	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
3	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	acl	_	_
4	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	6	cop	_	_
5	victim	victim	ADJ	POS	Degree=Pos	6	amod	_	_
6	caches	cach	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	lockup-free	lockup-free	ADJ	POS	Degree=Pos	9	amod	_	_
9	caches	cach	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	prefetching	prefetch	VERB	ING	Tense=Pres|VerbForm=Part	6	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	virtually	virtually	ADV	_	_	14	advmod	_	_
14	addressed	address	ADJ	PASS	Degree=Pos	15	amod	_	_
15	caches	cach	NOUN	PL-NOM	Number=Plur	11	obj	_	SpaceAfter=No
16	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 27
# text = Also main memory technology is covered in this part.
1	Also	also	ADV	_	_	6	advmod	_	_
2	main	main	ADJ	POS	Degree=Pos	3	amod	_	_
3	memory	memory	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	technology	technology	NOUN	SG-NOM	Number=Sing	6	nsubj:pass	_	_
5	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	_	_
6	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
7	in	in	ADP	_	_	9	case	_	_
8	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	9	det	_	_
9	part	part	NOUN	SG-NOM	Number=Sing	6	obl	_	SpaceAfter=No
10	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n

# sent_id = 28
# text = The fourth part deals with multicore/multithreaded architectures.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	fourth	four	ADJ	ORD	Degree=Pos|NumType=Ord	3	amod	_	_
3	part	part	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
4	deals	deal	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	with	with	ADP	_	_	7	case	_	_
6	multicore/multithreaded	multicore/multithreaded	ADJ	PASS	Degree=Pos	7	amod	_	_
7	architectures	architecture	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 29
# text = At the system level it deals with the programming model and how processor cores on a chip can communicate with each other through a shared address space.
1	At	at	ADP	_	_	4	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	system	system	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	level	level	NOUN	SG-NOM	Number=Sing	6	obl	_	_
5	it	it	PRON	PERS-SG	_	6	nsubj	_	_
6	deals	deal	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	with	with	ADP	_	_	10	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
9	programming	programm	ADJ	POS	Degree=Pos	10	amod	_	_
10	model	model	NOUN	SG-NOM	Number=Sing	6	obl	_	_
11	and	and	CCONJ	_	_	14	cc	_	_
12	how	how	ADV	WH	PronType=Int	14	advmod	_	_
13	processor	processor	ADJ	POS	Degree=Pos	14	amod	_	_
14	cores	core	NOUN	PL-NOM	Number=Plur	10	conj	_	_
15	on	on	ADP	_	_	17	case	_	_
16	a	a	DET	IND-SG	Definite=Ind|PronType=Art	17	det	_	_
17	chip	chip	NOUN	SG-NOM	Number=Sing	14	nmod	_	_
18	can	can	AUX	PRES-AUX	VerbForm=Fin	19	aux	_	_
19	communicate	communicate	VERB	INF	VerbForm=Inf	6	conj	_	_
20	with	with	ADP	_	_	21	case	_	_
21	each	each	PRON	RCP-SG-ACC	Case=Nom	19	obl	_	_
22	other	other	PRON	RCP-SG-ACC	Case=Nom	21	fixed	_	_
23	through	through	ADP	_	_	27	case	_	_
24	a	a	DET	IND-SG	Definite=Ind|PronType=Art	27	det	_	_
25	shared	share	ADJ	PASS	Degree=Pos	26	amod	_	_
26	address	address	NOUN	SG-NOM	Number=Sing	27	compound	_	_
27	space	space	NOUN	SG-NOM	Number=Sing	19	obl	_	SpaceAfter=No
28	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 30
# text = At the micro architecture level it deals with different approaches for how multiple threads can share architectural resources: fine-grain/coarse-grain and simultaneous multithreading.
1	At	at	ADP	_	_	4	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	micro	micro	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	architecture	architecture	NOUN	SG-NOM	Number=Sing	5	nsubj	_	_
5	level	level	VERB	PRES	Case=Nom	0	root	_	_
6	it	it	PRON	PERS-SG	_	5	obj	_	_
7	deals	deal	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	advcl	_	_
8	with	with	ADP	_	_	10	case	_	_
9	different	different	ADJ	POS	Degree=Pos	10	amod	_	_
10	approaches	approach	NOUN	PL-NOM	Number=Plur	7	obl	_	_
11	for	for	ADP	_	_	14	case	_	_
12	how	how	ADV	WH	PronType=Int	13	advmod	_	_
13	multiple	multiple	ADJ	POS	Degree=Pos	14	amod	_	_
14	threads	thread	NOUN	PL-NOM	Number=Plur	16	nsubj	_	_
15	can	can	AUX	PRES-AUX	VerbForm=Fin	16	aux	_	_
16	share	share	VERB	INF	VerbForm=Inf	10	acl	_	_
17	architectural	architectural	ADJ	POS	Degree=Pos	18	amod	_	_
18	resources	resource	NOUN	PL-NOM	Number=Plur	16	obj	_	SpaceAfter=No
19	:	:	PUNCT	Colon	_	16	punct	_	_
20	fine-grain/coarse-grain	fine-grain/coarse-grain	ADJ	POS	Degree=Pos	23	amod	_	_
21	and	and	CCONJ	_	_	22	cc	_	_
22	simultaneous	simultaneous	ADJ	POS	Degree=Pos	20	conj	_	_
23	multithreading	multithreading	NOUN	SG-NOM	Number=Sing	16	conj	_	SpaceAfter=No
24	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 31
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 32
# text = The course is organized into lectures, exercises, case studies, two laboratory tasks, and a mini research project assignment.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	organized	organize	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	into	into	ADP	_	_	6	case	_	_
6	lectures	lecture	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	exercises	exercise	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	8	punct	_	_
10	case	case	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	studies	study	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	two	two	NUM	CARD-PL	NumType=Card	15	nummod	_	_
14	laboratory	laboratory	ADJ	POS	Degree=Pos	15	amod	_	_
15	tasks	task	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	15	punct	_	_
17	and	and	CCONJ	_	_	22	cc	_	_
18	a	a	DET	IND-SG	Definite=Ind|PronType=Art	22	det	_	_
19	mini	mini	NOUN	SG-NOM	Number=Sing	20	compound	_	_
20	research	research	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	project	project	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	assignment	assignment	NOUN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
23	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 33
# text = Lectures focus on fundamental concepts and structures.
1	Lectures	Lecture	NOUN	PL-NOM	Number=Plur	2	nsubj	_	_
2	focus	focus	VERB	INF	VerbForm=Inf	0	root	_	_
3	on	on	ADP	_	_	5	case	_	_
4	fundamental	fundamental	ADJ	POS	Degree=Pos	5	amod	_	_
5	concepts	concepts	NOUN	PL-NOM	Number=Plur	2	obl	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	structures	structure	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
8	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 34
# text = Exercises provide in-depth analysis of the concepts and structures and train the students in problem solving approaches.
1	Exercises	exercise	NOUN	PL-NOM	Number=Plur	2	nsubj	_	_
2	provide	provide	VERB	IMP	VerbForm=Inf	0	root	_	_
3	in-depth	in-depth	ADJ	POS	Degree=Pos	4	amod	_	_
4	analysis	analysis	NOUN	SG-NOM	Number=Sing	2	obj	_	_
5	of	of	ADP	_	_	7	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	concepts	concepts	NOUN	PL-NOM	Number=Plur	4	nmod	_	_
8	and	and	CCONJ	_	_	9	cc	_	_
9	structures	structure	NOUN	PL-NOM	Number=Plur	7	conj	_	_
10	and	and	CCONJ	_	_	11	cc	_	_
11	train	train	NOUN	SG-NOM	Number=Sing	2	conj	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	students	student	NOUN	PL-NOM	Number=Plur	2	obj	_	_
14	in	in	ADP	_	_	15	case	_	_
15	problem	problem	NOUN	SG-NOM	Number=Sing	13	nmod	_	_
16	solving	solve	VERB	ING	Tense=Pres|VerbForm=Part	15	acl	_	_
17	approaches	approach	NOUN	PL-NOM	Number=Plur	16	obj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 35
# text = Case studies are based on state of the art computers that are documented in the scientific literature.
1	Case	case	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	studies	study	NOUN	PL-NOM	Number=Plur	4	nsubj:pass	_	_
3	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	on	on	ADP	_	_	6	case	_	_
6	state	state	NOUN	SG-NOM	Number=Sing	4	obl	_	_
7	of	of	ADP	_	_	10	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
9	art	art	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	computers	computer	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
11	that	that	PRON	REL	PronType=Rel	13	nsubj:pass	_	_
12	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	13	aux:pass	_	_
13	documented	document	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	10	acl:relcl	_	_
14	in	in	ADP	_	_	17	case	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
16	scientific	scientific	ADJ	POS	Degree=Pos	17	amod	_	_
17	literature	literature	NOUN	SG-NOM	Number=Sing	13	obl	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 36
# text = Students carry out the case studies and present them in plenary sessions to fellow students and the instructors.
1	Students	Student	NOUN	PL-NOM	Number=Plur	2	nsubj	_	_
2	carry	carry	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
3	out	out	ADV	_	_	2	compound:prt	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	case	case	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	studies	study	NOUN	PL-NOM	Number=Plur	2	obj	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	present	present	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	2	conj	_	_
9	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	8	obj	_	_
10	in	in	ADP	_	_	12	case	_	_
11	plenary	plenary	ADJ	POS	Degree=Pos	12	amod	_	_
12	sessions	session	NOUN	PL-NOM	Number=Plur	8	obl	_	_
13	to	to	PART	_	_	14	mark	_	_
14	fellow	fellow	VERB	INF	VerbForm=Inf	12	acl	_	_
15	students	student	NOUN	PL-NOM	Number=Plur	14	obj	_	_
16	and	and	CCONJ	_	_	18	cc	_	_
17	the	the	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
18	instructors	instructor	NOUN	PL-NOM	Number=Plur	15	conj	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 37
# text = Finally, students get familiar with simulation methodologies and tools used in industry to analyze the impact of design decisions on computer performance.
1	Finally	final	ADV	_	_	5	advmod	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	1	punct	_	_
3	students	student	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
4	get	get	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	5	cop	_	_
5	familiar	familiar	ADJ	POS	Degree=Pos	0	root	_	_
6	with	with	ADP	_	_	8	case	_	_
7	simulation	simulation	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	methodologies	methodology	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	tools	tool	NOUN	PL-NOM	Number=Plur	8	conj	_	_
11	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	8	acl	_	_
12	in	in	ADP	_	_	13	case	_	_
13	industry	industry	NOUN	SG-NOM	Number=Sing	11	obl	_	_
14	to	to	PART	_	_	15	mark	_	_
15	analyze	analyze	VERB	INF	VerbForm=Inf	11	advcl	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
17	impact	impact	NOUN	SG-NOM	Number=Sing	15	obj	_	_
18	of	of	ADP	_	_	20	case	_	_
19	design	design	NOUN	SG-NOM	Number=Sing	20	compound	_	_
20	decisions	decision	NOUN	PL-NOM	Number=Plur	17	nmod	_	_
21	on	on	ADP	_	_	23	case	_	_
22	computer	computer	NOUN	SG-NOM	Number=Sing	23	compound	_	_
23	performance	performance	NOUN	SG-NOM	Number=Sing	20	nmod	_	SpaceAfter=No
24	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 38
# text = This is trained in a sequence of labs and in a small research project assignment.
1	This	this	PRON	DEM-SG	Number=Sing|PronType=Dem	3	nsubj:pass	_	_
2	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux:pass	_	_
3	trained	train	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
4	in	in	ADP	_	_	6	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	sequence	sequence	NOUN	SG-NOM	Number=Sing	3	obl	_	_
7	of	of	ADP	_	_	8	case	_	_
8	labs	lab	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	and	and	CCONJ	_	_	15	cc	_	_
10	in	in	ADP	_	_	15	case	_	_
11	a	a	DET	IND-SG	Definite=Ind|PronType=Art	15	det	_	_
12	small	small	ADJ	POS	Degree=Pos	13	amod	_	_
13	research	research	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	project	project	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	assignment	assignment	NOUN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
16	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 39
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 40
# text = Computer Architecture (DAT105) or equivalent is strongly recommended. Students must understand how the processor pipeline and caches work and must be comfortable reading assembly language.
1	Computer	computer	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	Architecture	Architecture	NOUN	SG-NOM	Number=Sing	10	nsubj	_	_
3	(	(	PUNCT	LeftParenthesis	_	4	punct	_	SpaceAfter=No
4	DAT105	DAT105	NUM	ID	_	2	appos	_	SpaceAfter=No
5	)	)	PUNCT	RightParenthesis	_	4	punct	_	_
6	or	or	CCONJ	_	_	7	cc	_	_
7	equivalent	equivalent	ADJ	POS	Degree=Pos	2	conj	_	_
8	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
9	strongly	strong	ADV	_	_	10	advmod	_	_
10	recommended	recommend	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	10	punct	_	_
12	Students	Student	NOUN	PL-NOM	Number=Plur	14	nsubj	_	_
13	must	must	AUX	PRES-AUX	VerbForm=Fin	14	aux	_	_
14	understand	understand	VERB	INF	VerbForm=Inf	10	parataxis	_	_
15	how	how	ADV	WH	PronType=Int	18	advmod	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
17	processor	processor	ADJ	POS	Degree=Pos	18	amod	_	_
18	pipeline	pipeline	NOUN	SG-NOM	Number=Sing	14	obj	_	_
19	and	and	CCONJ	_	_	21	cc	_	_
20	caches	cach	NOUN	PL-NOM	Number=Plur	21	compound	_	_
21	work	work	NOUN	SG-NOM	Number=Sing	18	conj	_	_
22	and	and	CCONJ	_	_	26	cc	_	_
23	must	must	AUX	PRES-AUX	VerbForm=Fin	26	aux	_	_
24	be	be	AUX	INF	VerbForm=Inf	26	aux	_	_
25	comfortable	comfortable	ADJ	POS	Degree=Pos	26	amod	_	_
26	reading	read	VERB	ING	Tense=Pres|VerbForm=Part	14	conj	_	_
27	assembly	assemb	ADV	_	_	28	advmod	_	_
28	language	language	NOUN	SG-NOM	Number=Sing	26	obj	_	SpaceAfter=No
29	.	.	PUNCT	Period	_	14	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 41
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 42
# text = The aim of the course is to make students aware of the importance of sustainability in computing and to show techniques to achieve it at the different levels of a computer system.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	aim	aim	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	to	to	PART	_	_	8	mark	_	_
8	make	make	VERB	INF	VerbForm=Inf	0	root	_	_
9	students	student	NOUN	PL-NOM	Number=Plur	8	obj	_	_
10	aware	aware	ADJ	POS	Degree=Pos	9	amod	_	_
11	of	of	ADP	_	_	13	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	importance	importance	NOUN	SG-NOM	Number=Sing	10	nmod	_	_
14	of	of	ADP	_	_	15	case	_	_
15	sustainability	sustainability	NOUN	SG-NOM	Number=Sing	13	nmod	_	_
16	in	in	ADP	_	_	17	mark	_	_
17	computing	comput	VERB	ING	Tense=Pres|VerbForm=Part	15	acl	_	_
18	and	and	CCONJ	_	_	20	cc	_	_
19	to	to	PART	_	_	20	mark	_	_
20	show	show	VERB	INF	VerbForm=Inf	17	conj	_	_
21	techniques	technique	NOUN	PL-NOM	Number=Plur	20	obj	_	_
22	to	to	PART	_	_	23	mark	_	_
23	achieve	achieve	VERB	INF	VerbForm=Inf	20	advcl	_	_
24	it	it	PRON	PERS-SG	_	23	obj	_	_
25	at	at	ADP	_	_	28	case	_	_
26	the	the	DET	DEF	Definite=Def|PronType=Art	28	det	_	_
27	different	different	ADJ	POS	Degree=Pos	28	amod	_	_
28	levels	level	NOUN	PL-NOM	Number=Plur	23	obl	_	_
29	of	of	ADP	_	_	32	case	_	_
30	a	a	DET	IND-SG	Definite=Ind|PronType=Art	32	det	_	_
31	computer	computer	NOUN	SG-NOM	Number=Sing	32	compound	_	_
32	system	system	NOUN	SG-NOM	Number=Sing	28	nmod	_	SpaceAfter=No
33	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 43
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 44
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 45
# text = Knowledge and understanding:
1	Knowledge	knowledge	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	understanding	understand	VERB	ING	Case=Nom	1	conj	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	1	punct	_	SpacesAfter=\n

# sent_id = 46
# text = describe why sustainable computing is an important current topic
1	describe	describe	AUX	INF	VerbForm=Inf	4	aux	_	_
2	why	why	ADV	WH	PronType=Int	4	advmod	_	_
3	sustainable	sustainable	ADJ	POS	Degree=Pos	4	amod	_	_
4	computing	comput	VERB	ING	Tense=Pres|VerbForm=Part	9	csubj	_	_
5	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	_	_
6	an	an	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
7	important	important	ADJ	POS	Degree=Pos	9	amod	_	_
8	current	current	ADJ	POS	Degree=Pos	9	amod	_	_
9	topic	topic	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 47
# text = describe the electrical mechanisms that cause power to be dissipated
1	describe	describe	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	electrical	electrical	ADJ	POS	Degree=Pos	4	amod	_	_
4	mechanisms	mechanism	NOUN	PL-NOM	Number=Plur	1	obj	_	_
5	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	7	det	_	_
6	cause	cause	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	power	power	NOUN	SG-NOM	Number=Sing	10	nsubj:pass	_	_
8	to	to	PART	_	_	10	mark	_	_
9	be	be	AUX	INF	VerbForm=Inf	10	aux:pass	_	_
10	dissipated	dissipate	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	4	acl	_	SpacesAfter=\n

# sent_id = 48
# text = describe circuit techniques for reducing power dissipation and the impact on performance
1	describe	describe	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
2	circuit	circuit	ADJ	PASS	Degree=Pos	3	amod	_	_
3	techniques	technique	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	for	for	ADP	_	_	5	mark	_	_
5	reducing	reduce	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	_
6	power	power	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	dissipation	dissipation	NOUN	SG-NOM	Number=Sing	5	obj	_	_
8	and	and	CCONJ	_	_	10	cc	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	impact	impact	NOUN	SG-NOM	Number=Sing	5	conj	_	_
11	on	on	ADP	_	_	12	case	_	_
12	performance	performance	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpacesAfter=\n

# sent_id = 49
# text = describe computer architecture, memory, and secondary storage techniques for reducing energy consumption
1	describe	describe	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
2	computer	computer	ADJ	CMP	Degree=Cmp	3	amod	_	_
3	architecture	architecture	NOUN	SG-NOM	Number=Sing	1	obj	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	memory	memory	NOUN	SG-NOM	Number=Sing	3	conj	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	and	and	CCONJ	_	_	10	cc	_	_
8	secondary	secondary	ADJ	POS	Degree=Pos	10	amod	_	_
9	storage	storage	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	techniques	technique	NOUN	PL-NOM	Number=Plur	3	conj	_	_
11	for	for	ADP	_	_	12	mark	_	_
12	reducing	reduce	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	_
13	energy	energy	ADJ	POS	Degree=Pos	14	amod	_	_
14	consumption	consumption	NOUN	SG-NOM	Number=Sing	12	obj	_	SpacesAfter=\n

# sent_id = 50
# text = explain what affects the energy consumption of computer systems especially concerning their architecture
1	explain	explain	VERB	INF	VerbForm=Inf	0	root	_	_
2	what	what	PRON	WH	PronType=Int	3	nsubj	_	_
3	affects	affect	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	ccomp	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	energy	energy	ADJ	POS	Degree=Pos	6	amod	_	_
6	consumption	consumption	NOUN	SG-NOM	Number=Sing	3	obj	_	_
7	of	of	ADP	_	_	9	case	_	_
8	computer	computer	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	systems	system	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
10	especially	especially	ADV	_	_	11	advmod	_	_
11	concerning	concern	VERB	ING	Tense=Pres|VerbForm=Part	3	xcomp	_	_
12	their	they	PRON	P3PL-GEN	_	13	nmod:poss	_	_
13	architecture	architecture	NOUN	SG-NOM	Number=Sing	11	obj	_	SpacesAfter=\n

# sent_id = 51
# text = Competence and skills:
1	Competence	competence	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	skills	skill	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	1	punct	_	SpacesAfter=\n

# sent_id = 52
# text = use specific devices to directly measure energy consumption of the whole system
1	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	devices	device	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	to	to	PART	_	_	5	mark	_	_
5	directly	directly	VERB	INF	VerbForm=Inf	1	advcl	_	_
6	measure	measure	ADJ	POS	Degree=Pos	8	amod	_	_
7	energy	energy	ADJ	POS	Degree=Pos	8	amod	_	_
8	consumption	consumption	NOUN	SG-NOM	Number=Sing	5	obj	_	_
9	of	of	ADP	_	_	12	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
11	whole	whole	ADJ	POS	Degree=Pos	12	amod	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	8	nmod	_	SpacesAfter=\n

# sent_id = 53
# text = use performance counters to measure the energy consumption of certain components in the system
1	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
2	performance	performance	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	counters	counter	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	to	to	PART	_	_	5	mark	_	_
5	measure	measure	VERB	INF	VerbForm=Inf	1	advcl	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
7	energy	energy	ADJ	POS	Degree=Pos	8	amod	_	_
8	consumption	consumption	NOUN	SG-NOM	Number=Sing	5	obj	_	_
9	of	of	ADP	_	_	11	case	_	_
10	certain	certain	ADJ	POS	Degree=Pos	11	amod	_	_
11	components	component	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
12	in	in	ADP	_	_	14	case	_	_
13	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
14	system	system	NOUN	SG-NOM	Number=Sing	11	nmod	_	SpacesAfter=\n

# sent_id = 54
# text = use simulation tools to estimate the energy consumption of different system configurations
1	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
2	simulation	simulation	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	tools	tool	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	to	to	PART	_	_	5	mark	_	_
5	estimate	estimate	VERB	INF	VerbForm=Inf	1	advcl	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
7	energy	energy	ADJ	POS	Degree=Pos	8	amod	_	_
8	consumption	consumption	NOUN	SG-NOM	Number=Sing	5	obj	_	_
9	of	of	ADP	_	_	11	case	_	_
10	different	different	ADJ	POS	Degree=Pos	11	amod	_	_
11	system	system	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
12	configurations	configuration	NOUN	PL-NOM	Number=Plur	1	obj	_	SpacesAfter=\n

# sent_id = 55
# text = Judgement and approach:
1	Judgement	Judgement	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	approach	approach	NOUN	SG-NOM	Number=Sing	1	conj	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	1	punct	_	SpacesAfter=\n

# sent_id = 56
# text = identify the strengths and weaknesses of different classes of computer system components (e.g. processor, memory), with respect to energy efficiency
1	identify	identify	VERB	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	strengths	strength	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	weaknesses	weakness	NOUN	PL-NOM	Number=Plur	3	conj	_	_
6	of	of	ADP	_	_	8	case	_	_
7	different	different	ADJ	POS	Degree=Pos	8	amod	_	_
8	classes	classes	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	of	of	ADP	_	_	12	case	_	_
10	computer	computer	ADJ	POS	Degree=Pos	11	amod	_	_
11	system	system	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	components	component	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
13	(	(	PUNCT	LeftParenthesis	_	14	punct	_	SpaceAfter=No
14	e.g	e.g	NOUN	ING	Number=Sing	12	appos	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	14	punct	_	_
16	processor	processor	NOUN	SG-NOM	Number=Sing	14	conj	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	memory	memory	NOUN	SG-NOM	Number=Sing	14	conj	_	SpaceAfter=No
19	)	)	PUNCT	RightParenthesis	_	14	punct	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	1	punct	_	_
21	with	with	ADP	_	_	22	case	_	_
22	respect	respect	NOUN	SG-NOM	Number=Sing	1	obl	_	_
23	to	to	ADP	_	_	25	case	_	_
24	energy	energy	ADJ	POS	Degree=Pos	25	amod	_	_
25	efficiency	efficiency	NOUN	SG-NOM	Number=Sing	22	nmod	_	SpacesAfter=\n

# sent_id = 57
# text = evaluate and compare different architecture and system techniques in terms of the energy efficiency
1	evaluate	evaluate	ADJ	POS	Degree=Pos	5	amod	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	compare	compare	VERB	INF	VerbForm=Inf	1	conj	_	_
4	different	different	ADJ	POS	Degree=Pos	5	amod	_	_
5	architecture	architecture	NOUN	SG-NOM	Number=Sing	8	compound	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	system	system	NOUN	SG-NOM	Number=Sing	5	conj	_	_
8	techniques	technique	NOUN	PL-NOM	Number=Plur	0	root	_	_
9	in	in	ADP	_	_	10	case	_	_
10	terms	term	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
11	of	of	ADP	_	_	14	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
13	energy	energy	ADJ	POS	Degree=Pos	14	amod	_	_
14	efficiency	efficiency	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpacesAfter=\n

# sent_id = 58
# text = explain the methods for evaluating and reporting the energy consumption in computer systems and how these can be used to optimize the system
1	explain	explain	VERB	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	methods	method	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	for	for	ADP	_	_	5	mark	_	_
5	evaluating	evaluat	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	reporting	report	VERB	ING	Tense=Pres|VerbForm=Part	5	conj	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
9	energy	energy	ADJ	POS	Degree=Pos	10	amod	_	_
10	consumption	consumption	NOUN	SG-NOM	Number=Sing	7	obj	_	_
11	in	in	ADP	_	_	13	case	_	_
12	computer	computer	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	systems	system	NOUN	PL-NOM	Number=Plur	7	obl	_	_
14	and	and	CCONJ	_	_	19	cc	_	_
15	how	how	ADV	WH	PronType=Int	19	advmod	_	_
16	these	this	PRON	DEM-PL	Number=Plur|PronType=Dem	19	nsubj:pass	_	_
17	can	can	AUX	PRES-AUX	VerbForm=Fin	19	aux	_	_
18	be	be	AUX	INF	VerbForm=Inf	19	aux:pass	_	_
19	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	1	conj	_	_
20	to	to	PART	_	_	21	mark	_	_
21	optimize	optimize	VERB	INF	VerbForm=Inf	19	advcl	_	_
22	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
23	system	system	NOUN	SG-NOM	Number=Sing	21	obj	_	SpacesAfter=\n

# sent_id = 59
# text = judge the importance of energy consumption from societal and ethical perspectives
1	judge	judge	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	importance	importance	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
4	of	of	ADP	_	_	6	case	_	_
5	energy	energy	ADJ	POS	Degree=Pos	6	amod	_	_
6	consumption	consumption	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	from	from	ADP	_	_	11	case	_	_
8	societal	societal	ADJ	POS	Degree=Pos	11	amod	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	ethical	ethical	ADJ	POS	Degree=Pos	8	conj	_	_
11	perspectives	perspective	NOUN	PL-NOM	Number=Plur	6	nmod	_	SpacesAfter=\n

# sent_id = 60
# text = interpret requirements on the architecture of computer systems to meet societal needs for sustainability
1	interpret	interpret	ADJ	POS	Degree=Pos	2	amod	_	_
2	requirements	requirement	NOUN	PL-NOM	Number=Plur	10	nsubj	_	_
3	on	on	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	architecture	architecture	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	of	of	ADP	_	_	8	case	_	_
7	computer	computer	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	systems	system	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	to	to	PART	_	_	10	mark	_	_
10	meet	meet	VERB	INF	VerbForm=Inf	0	root	_	_
11	societal	societal	ADJ	POS	Degree=Pos	12	amod	_	_
12	needs	need	NOUN	PL-NOM	Number=Plur	10	obj	_	_
13	for	for	ADP	_	_	14	case	_	_
14	sustainability	sustainability	NOUN	SG-NOM	Number=Sing	12	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 61
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 62
# text = The course is intended to give an overview of the energy efficiency aspects of computer systems and computing, ranging from the electronic circuits up to the applications for systems ranging from small IoT devices to large data centers.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	intended	intend	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	to	to	PART	_	_	6	mark	_	_
6	give	give	VERB	INF	VerbForm=Inf	4	xcomp	_	_
7	an	an	DET	IND-SG	Definite=Ind|PronType=Art	8	det	_	_
8	overview	overview	NOUN	SG-NOM	Number=Sing	6	obj	_	_
9	of	of	ADP	_	_	12	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
11	energy	energy	ADJ	POS	Degree=Pos	12	amod	_	_
12	efficiency	efficiency	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
13	aspects	aspect	NOUN	PL-NOM	Number=Plur	12	nmod	_	_
14	of	of	ADP	_	_	16	case	_	_
15	computer	computer	NOUN	SG-NOM	Number=Sing	16	compound	_	_
16	systems	system	NOUN	PL-NOM	Number=Plur	13	nmod	_	_
17	and	and	CCONJ	_	_	18	cc	_	_
18	computing	comput	VERB	ING	Tense=Pres|VerbForm=Part	13	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	20	punct	_	_
20	ranging	range	VERB	ING	Tense=Pres|VerbForm=Part	4	advcl	_	_
21	from	from	ADP	_	_	24	case	_	_
22	the	the	DET	DEF	Definite=Def|PronType=Art	24	det	_	_
23	electronic	electronic	ADJ	POS	Degree=Pos	24	amod	_	_
24	circuits	circuit	NOUN	PL-NOM	Number=Plur	20	obl	_	_
25	up	up	ADV	_	_	20	compound:prt	_	_
26	to	to	ADP	_	_	28	case	_	_
27	the	the	DET	DEF	Definite=Def|PronType=Art	28	det	_	_
28	applications	application	NOUN	PL-NOM	Number=Plur	20	obl	_	_
29	for	for	ADP	_	_	30	case	_	_
30	systems	system	NOUN	PL-NOM	Number=Plur	28	nmod	_	_
31	ranging	range	VERB	ING	Tense=Pres|VerbForm=Part	30	acl	_	_
32	from	from	ADP	_	_	35	case	_	_
33	small	small	ADJ	POS	Degree=Pos	35	amod	_	_
34	IoT	IoT	NOUN	SG-NOM	Number=Sing	35	compound	_	_
35	devices	device	NOUN	PL-NOM	Number=Plur	31	obl	_	_
36	to	to	PART	_	_	37	mark	_	_
37	large	large	VERB	INF	VerbForm=Inf	35	acl	_	_
38	data	data	NOUN	PL-NOM	Number=Sing	39	compound	_	_
39	centers	center	NOUN	PL-NOM	Number=Plur	37	obj	_	SpaceAfter=No
40	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n

# sent_id = 63
# text = For instance, students will learn about approaches to measuring and estimating the energy consumption of different architectural components as well as architecture and software techniques to save energy in the system.
1	For	for	ADP	_	_	2	case	_	_
2	instance	instance	NOUN	SG-NOM	Number=Sing	6	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	students	student	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
5	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
6	learn	learn	VERB	INF	VerbForm=Inf	0	root	_	_
7	about	about	ADP	_	_	8	case	_	_
8	approaches	approach	NOUN	PL-NOM	Number=Plur	6	obl	_	_
9	to	to	ADP	_	_	10	mark	_	_
10	measuring	measure	VERB	ING	Tense=Pres|VerbForm=Part	8	acl	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	estimating	estimate	VERB	ING	Tense=Pres|VerbForm=Part	10	conj	_	_
13	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
14	energy	energy	ADJ	POS	Degree=Pos	15	amod	_	_
15	consumption	consumption	NOUN	SG-NOM	Number=Sing	12	obj	_	_
16	of	of	ADP	_	_	19	case	_	_
17	different	different	ADJ	POS	Degree=Pos	19	amod	_	_
18	architectural	architectural	ADJ	POS	Degree=Pos	19	amod	_	_
19	components	component	NOUN	PL-NOM	Number=Plur	15	nmod	_	_
20	as	as	CCONJ	_	Case=Nom	23	cc	_	_
21	well	well	ADV	_	Degree=Pos	20	fixed	_	_
22	as	as	ADP	_	_	20	fixed	_	_
23	architecture	architecture	NOUN	SG-NOM	Number=Sing	6	conj	_	_
24	and	and	CCONJ	_	_	26	cc	_	_
25	software	software	ADJ	POS	Degree=Pos	26	amod	_	_
26	techniques	technique	NOUN	PL-NOM	Number=Plur	6	conj	_	_
27	to	to	PART	_	_	28	mark	_	_
28	save	save	VERB	INF	VerbForm=Inf	26	acl	_	_
29	energy	energy	ADV	_	_	28	advmod	_	_
30	in	in	ADP	_	_	32	case	_	_
31	the	the	DET	DEF	Definite=Def|PronType=Art	32	det	_	_
32	system	system	NOUN	SG-NOM	Number=Sing	28	obl	_	SpaceAfter=No
33	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 64
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 65
# text = The course consists of a lecture series, homework assignments, and labs assignments including a group project.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	ADJ	CMP	Degree=Cmp	3	amod	_	_
3	consists	consist	NOUN	PL-NOM	Number=Plur	15	nsubj	_	_
4	of	of	ADP	_	_	14	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
6	lecture	lecture	NOUN	SG-NOM	Number=Sing	14	compound	_	_
7	series	series	NOUN	SG-NOM	Number=Sing	14	compound	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	7	punct	_	_
9	homework	homework	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	assignments	assignment	NOUN	PL-NOM	Number=Plur	7	conj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	7	punct	_	_
12	and	and	CCONJ	_	_	13	cc	_	_
13	labs	labs	NOUN	PL-NOM	Number=Plur	7	conj	_	_
14	assignments	assignment	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
15	including	include	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
16	a	a	DET	IND-SG	Definite=Ind|PronType=Art	18	det	_	_
17	group	group	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	project	project	NOUN	SG-NOM	Number=Sing	15	obj	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	15	punct	_	SpacesAfter=\s\n

# sent_id = 66
# text = Students will be asked to present the results of their homework and in-class assignments through short oral presentations to demonstrate their understanding and to facilitate discussion.
1	Students	Student	NOUN	PL-NOM	Number=Plur	4	nsubj:pass	_	_
2	will	will	AUX	PRES-AUX	VerbForm=Fin	4	aux	_	_
3	be	be	AUX	INF	VerbForm=Inf	4	aux:pass	_	_
4	asked	ask	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	to	to	PART	_	_	6	mark	_	_
6	present	present	VERB	INF	VerbForm=Inf	4	xcomp	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	results	result	NOUN	PL-NOM	Number=Plur	6	obj	_	_
9	of	of	ADP	_	_	11	case	_	_
10	their	they	PRON	P3PL-GEN	_	11	nmod:poss	_	_
11	homework	homework	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	in-class	in-class	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	assignments	assignment	NOUN	PL-NOM	Number=Plur	11	conj	_	_
15	through	through	ADP	_	_	18	case	_	_
16	short	short	ADJ	POS	Degree=Pos	18	amod	_	_
17	oral	oral	ADJ	POS	Degree=Pos	18	amod	_	_
18	presentations	presentations	NOUN	PL-NOM	Number=Plur	14	nmod	_	_
19	to	to	PART	_	_	20	mark	_	_
20	demonstrate	demonstrate	VERB	INF	VerbForm=Inf	18	acl	_	_
21	their	they	PRON	P3PL-GEN	_	22	nmod:poss	_	_
22	understanding	understand	VERB	ING	Case=Nom	20	obj	_	_
23	and	and	CCONJ	_	_	25	cc	_	_
24	to	to	PART	_	_	25	mark	_	_
25	facilitate	facilitate	VERB	INF	VerbForm=Inf	22	conj	_	_
26	discussion	discussion	NOUN	SG-NOM	Number=Sing	25	obj	_	SpaceAfter=No
27	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 67
# text = Discussions will not only focus on technology, but also on how that technology affects the world's carbon footprint and will likely impact society now and in future generations.
1	Discussions	discussion	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
2	will	will	AUX	PRES-AUX	VerbForm=Fin	5	aux	_	_
3	not	not	PART	NEG	_	5	advmod	_	_
4	only	only	ADV	_	_	5	advmod	_	_
5	focus	focus	VERB	INF	VerbForm=Inf	0	root	_	_
6	on	on	ADP	_	_	7	case	_	_
7	technology	technology	NOUN	SG-NOM	Number=Sing	5	obl	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	5	punct	_	_
9	but	but	CCONJ	_	_	15	cc	_	_
10	also	also	ADV	_	_	15	advmod	_	_
11	on	on	ADP	_	_	15	mark	_	_
12	how	how	ADV	WH	PronType=Int	15	advmod	_	_
13	that	that	SCONJ	_	_	15	mark	_	_
14	technology	technology	NOUN	SG-NOM	Number=Sing	15	nsubj	_	_
15	affects	affect	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	conj	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	19	det	_	_
17	world	world	NOUN	SG	Number=Sing	19	nmod	_	SpaceAfter=No
18	's	's	PART	GEN	_	17	case	_	_
19	carbon	carbon	NOUN	SG-NOM	Number=Sing	15	obj	_	_
20	footprint	footprint	ADJ	POS	Degree=Pos	15	xcomp	_	_
21	and	and	CCONJ	_	_	25	cc	_	_
22	will	will	AUX	PRES-AUX	VerbForm=Fin	25	aux	_	_
23	likely	likely	ADJ	POS	Degree=Pos	25	amod	_	_
24	impact	impact	ADJ	POS	Degree=Pos	25	amod	_	_
25	society	society	NOUN	SG-NOM	Number=Sing	20	conj	_	_
26	now	now	ADV	_	_	30	advmod	_	_
27	and	and	CCONJ	_	_	30	cc	_	_
28	in	in	ADP	_	_	30	case	_	_
29	future	future	NOUN	SG-NOM	Number=Sing	30	compound	_	_
30	generations	generation	NOUN	PL-NOM	Number=Plur	25	conj	_	SpaceAfter=No
31	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 68
# text = Literature
1	Literature	literature	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 69
# text = Stefanos Kaxiras and Margaret Martonosi.
1	Stefanos	Stefanos	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	Kaxiras	Kaxira	PROPN	PL	Number=Plur	1	nmod	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	Margaret	Margaret	PROPN	SG-NOM	Number=Sing	2	conj	_	_
5	Martonosi	Martonosi	PROPN	SG-NOM	Number=Sing	2	flat	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 70
# text = 2008.
1	2008	2008	NUM	CARD-PL	NumType=Card	0	root	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 71
# text = Computer Architecture Techniques for Power-Efficiency (1st ed.). Morgan and Claypool Publishers.
1	Computer	computer	NOUN	SG-NOM	Number=Sing	3	compound	_	_
2	Architecture	Architecture	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	Techniques	technique	NOUN	PL-NOM	Number=Plur	8	nsubj	_	_
4	for	for	ADP	_	_	5	case	_	_
5	Power-Efficiency	Power-Efficiency	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
6	(	(	PUNCT	LeftParenthesis	_	8	punct	_	SpaceAfter=No
7	1st	1st	ADV	SPL	Degree=Sup	8	advmod	_	_
8	ed	e	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	SpaceAfter=No
9	.)	.)	PUNCT	Period	_	8	punct	_	SpaceAfter=No
10	.	.	PUNCT	Period	_	8	punct	_	_
11	Morgan	Morgan	PROPN	SG-NOM	Number=Sing	14	compound	_	_
12	and	and	CCONJ	_	_	13	cc	_	_
13	Claypool	Claypool	PROPN	SG-NOM	Number=Sing	11	conj	_	_
14	Publishers	Publisher	NOUN	PL-NOM	Number=Plur	8	conj	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n

# sent_id = 72
# text = Magnus Själander, Margaret Martonosi, Stefanos Kaxiras.
1	Magnus	Magnus	ADJ	POS	Degree=Pos	2	amod	_	_
2	Själander	Själander	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	Margaret	Margaret	PROPN	SG-NOM	Number=Sing	7	compound	_	_
5	Martonosi	Martonosi	PROPN	SG-NOM	Number=Sing	4	flat	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	Stefanos	Stefanos	PROPN	SG-NOM	Number=Sing	2	nmod	_	_
8	Kaxiras	Kaxira	PROPN	SG-NOM	Number=Sing	7	flat	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 73
# text = 2014.
1	2014	2014	NUM	CARD-PL	NumType=Card	0	root	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 74
# text = Power-efficient Computer Architectures: Recent Advances.
1	Power-efficient	Power-efficient	ADJ	POS	Degree=Pos	3	amod	_	_
2	Computer	computer	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	Architectures	Architecture	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	_
5	Recent	recent	ADJ	POS	Degree=Pos	6	amod	_	_
6	Advances	Advance	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 75
# text = Morgan and Claypool Publishers.
1	Morgan	Morgan	ADJ	POS	Degree=Pos	4	amod	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	Claypool	Claypool	ADJ	POS	Degree=Pos	1	conj	_	_
4	Publishers	Publisher	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n

# sent_id = 76
# text = Articles from the research literature and trade magazines.
1	Articles	Article	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	from	from	ADP	_	_	5	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
4	research	research	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	literature	literature	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
6	and	and	CCONJ	_	_	8	cc	_	_
7	trade	trade	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	magazines	magazine	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 77
# text = Examination including compulsory elements
1	Examination	Examination	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	including	include	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	compulsory	compulsory	ADJ	POS	Degree=Pos	4	amod	_	_
4	elements	element	NOUN	PL-NOM	Number=Plur	2	obj	_	SpacesAfter=\n

# sent_id = 78
# text = The course is examined by an individual written exam done in an examination hall and approved lab exercises.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	examined	examine	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	by	by	ADP	_	_	9	case	_	_
6	an	an	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
7	individual	individual	ADJ	POS	Degree=Pos	9	amod	_	_
8	written	write	ADJ	PASS	Case=Nom	9	amod	_	_
9	exam	exbe	NOUN	SG-NOM	Number=Sing	4	obl	_	_
10	done	do	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	9	acl	_	_
11	in	in	ADP	_	_	14	case	_	_
12	an	an	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
13	examination	examination	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	hall	hall	NOUN	SG-NOM	Number=Sing	10	obl	_	_
15	and	and	CCONJ	_	_	16	cc	_	_
16	approved	appro	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	4	conj	_	_
17	lab	lab	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	exercises	exercise	NOUN	PL-NOM	Number=Plur	16	obj	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 79
# text = The lab work is done in groups of normally 2-3 students.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	lab	lab	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	work	work	NOUN	SG-NOM	Number=Sing	5	nsubj:pass	_	_
4	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	done	do	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
6	in	in	ADP	_	_	7	case	_	_
7	groups	group	NOUN	PL-NOM	Number=Plur	5	obl	_	_
8	of	of	ADP	_	_	11	case	_	_
9	normally	normal	ADV	_	_	11	advmod	_	_
10	2-3	2-3	NUM	ID	_	11	nummod	_	_
11	students	student	NOUN	PL-NOM	Number=Plur	7	nmod	_	SpaceAfter=No
12	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 80
# text = Grades/
1	Grades/	Grades/	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 81
# text = The final grade is based on the results on the written exam.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	final	final	ADJ	POS	Degree=Pos	3	amod	_	_
3	grade	grade	NOUN	SG-NOM	Number=Sing	5	nsubj:pass	_	_
4	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
6	on	on	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	results	result	NOUN	PL-NOM	Number=Plur	5	obl	_	_
9	on	on	ADP	_	_	12	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
11	written	write	ADJ	PASS	Case=Nom	12	amod	_	_
12	exam	exam	NOUN	SG-NOM	Number=Sing	8	nmod	_	SpaceAfter=No
13	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 82
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 83
# text = The course DAT017 - Machine oriented programming or similar course is required
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	DAT017	Dat017	NUM	ID	_	12	nsubj:pass	_	_
4	-	-	PUNCT	Period	_	3	punct	_	_
5	Machine	Machine	PROPN	SG-NOM	Number=Sing	6	nsubj	_	_
6	oriented	orient	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	3	conj	_	_
7	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	6	xcomp	_	_
8	or	or	CCONJ	_	_	9	cc	_	_
9	similar	similar	ADJ	POS	Degree=Pos	10	amod	_	_
10	course	course	NOUN	SG-NOM	Number=Sing	7	obj	_	_
11	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	_	_
12	required	require	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpacesAfter=\n

# sent_id = 84
# text = The course TDA384 - Principles for Concurrent programming is recommended
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	TDA384	Tda384	NUM	ID	_	10	discourse	_	_
4	-	-	PUNCT	Period	_	3	punct	_	_
5	Principles	principle	NOUN	PL-NOM	Number=Plur	10	nsubj:pass	_	_
6	for	for	ADP	_	_	8	case	_	_
7	Concurrent	Concurrent	ADJ	POS	Degree=Pos	8	amod	_	_
8	programming	programming	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
9	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	_	_
10	recommended	recommend	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpacesAfter=\n\n\n

# newpar
# sent_id = 85
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 86
# text = This course looks at parallel programming models, efficient programming methodologies and performance tools with the objective of developing highly efficient parallel programs
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	looks	look	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	at	at	ADP	_	_	7	case	_	_
5	parallel	parallel	ADJ	POS	Degree=Pos	6	amod	_	_
6	programming	programming	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	models	model	NOUN	PL-NOM	Number=Plur	3	obl	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	3	punct	_	_
9	efficient	efficient	ADJ	POS	Degree=Pos	11	amod	_	_
10	programming	programme	ADJ	POS	Degree=Pos	11	amod	_	_
11	methodologies	methodology	NOUN	PL-NOM	Number=Plur	3	conj	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	performance	performance	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	tools	tool	NOUN	PL-NOM	Number=Plur	3	conj	_	_
15	with	with	ADP	_	_	17	case	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
17	objective	objective	ADJ	POS	Degree=Pos	14	amod	_	_
18	of	of	ADP	_	_	19	mark	_	_
19	developing	develop	VERB	ING	Tense=Pres|VerbForm=Part	17	acl	_	_
20	highly	high	ADV	_	_	21	advmod	_	_
21	efficient	efficient	ADJ	POS	Degree=Pos	23	amod	_	_
22	parallel	parallel	ADJ	POS	Degree=Pos	23	amod	_	_
23	programs	program	NOUN	PL-NOM	Number=Plur	19	obj	_	SpacesAfter=\n\n\n

# newpar
# sent_id = 87
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 88
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 89
# text = List the different types of parallel computer architectures, programming models and paradigms, as well as different schemes for synchronization and communication
1	List	List	ADP	_	_	4	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	different	different	ADJ	POS	Degree=Pos	4	amod	_	_
4	types	type	NOUN	PL-NOM	Number=Plur	10	obl	_	_
5	of	of	ADP	_	_	8	case	_	_
6	parallel	parallel	ADJ	POS	Degree=Pos	7	amod	_	_
7	computer	computer	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	architectures	architecture	NOUN	PL-NOM	Number=Plur	4	nmod	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	10	punct	_	_
10	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
11	models	model	NOUN	PL-NOM	Number=Plur	10	obj	_	_
12	and	and	CCONJ	_	_	13	cc	_	_
13	paradigms	paradigm	NOUN	PL-NOM	Number=Plur	11	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	10	punct	_	_
15	as	as	CCONJ	_	Case=Nom	19	cc	_	_
16	well	well	ADV	_	Degree=Pos	15	fixed	_	_
17	as	as	ADP	_	_	15	fixed	_	_
18	different	different	ADJ	POS	Degree=Pos	19	amod	_	_
19	schemes	scheme	NOUN	PL-NOM	Number=Plur	10	conj	_	_
20	for	for	ADP	_	_	21	case	_	_
21	synchronization	synchronization	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
22	and	and	CCONJ	_	_	23	cc	_	_
23	communication	communication	NOUN	SG-NOM	Number=Sing	21	conj	_	SpacesAfter=\n

# sent_id = 90
# text = List the typical steps to parallelize a sequential algorithm
1	List	List	ADP	_	_	4	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	typical	typical	ADJ	POS	Degree=Pos	4	amod	_	_
4	steps	step	NOUN	PL-NOM	Number=Plur	0	root	_	_
5	to	to	PART	_	_	6	mark	_	_
6	parallelize	parallelize	VERB	INF	VerbForm=Inf	4	acl	_	_
7	a	a	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
8	sequential	sequential	ADJ	POS	Degree=Pos	9	amod	_	_
9	algorithm	algorithm	NOUN	SG-NOM	Number=Sing	6	obj	_	SpacesAfter=\n

# sent_id = 91
# text = List different methods for analysis methodologies of parallel program systems
1	List	List	ADP	_	_	3	case	_	_
2	different	different	ADJ	POS	Degree=Pos	3	amod	_	_
3	methods	method	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	for	for	ADP	_	_	6	case	_	_
5	analysis	analysis	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	methodologies	methodology	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
7	of	of	ADP	_	_	9	case	_	_
8	parallel	parallel	ADJ	POS	Degree=Pos	9	amod	_	_
9	program	program	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
10	systems	system	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpacesAfter=\n

# sent_id = 92
# text = Apply performance analysis methodologies to determine the bottlenecks in the execution of a parallel program
1	Apply	app	ADV	_	_	2	advmod	_	_
2	performance	performance	NOUN	SG-NOM	Number=Sing	4	compound	_	_
3	analysis	analysis	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	methodologies	methodology	NOUN	PL-NOM	Number=Plur	0	root	_	_
5	to	to	PART	_	_	6	mark	_	_
6	determine	determine	VERB	INF	VerbForm=Inf	4	acl	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	bottlenecks	bottleneck	NOUN	PL-NOM	Number=Plur	6	obj	_	_
9	in	in	ADP	_	_	11	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	execution	execution	NOUN	SG-NOM	Number=Sing	6	obl	_	_
12	of	of	ADP	_	_	15	case	_	_
13	a	a	DET	IND-SG	Definite=Ind|PronType=Art	15	det	_	_
14	parallel	parallel	ADJ	POS	Degree=Pos	15	amod	_	_
15	program	program	NOUN	SG-NOM	Number=Sing	11	nmod	_	SpacesAfter=\n

# sent_id = 93
# text = Predict the upper limit to the performance of a parallel program
1	Predict	predict	VERB	IMP	Mood=Imp|VerbForm=Fin	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	upper	upper	ADJ	POS	Degree=Pos	4	amod	_	_
4	limit	limit	NOUN	SG-NOM	Number=Sing	1	obj	_	_
5	to	to	ADP	_	_	7	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	performance	performance	NOUN	SG-NOM	Number=Sing	1	obl	_	_
8	of	of	ADP	_	_	11	case	_	_
9	a	a	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
10	parallel	parallel	ADJ	POS	Degree=Pos	11	amod	_	_
11	program	program	NOUN	SG-NOM	Number=Sing	7	nmod	_	SpacesAfter=\n

# sent_id = 94
# text = Given a particular software, specify what performance bottlenecks are limiting the efficiency of parallel code and select appropriate strategies to overcome these bottlenecks
1	Given	give	SCONJ	_	Case=Nom	6	mark	_	_
2	a	a	DET	IND-SG	Definite=Ind|PronType=Art	4	det	_	_
3	particular	particular	ADJ	POS	Degree=Pos	4	amod	_	_
4	software	software	NOUN	SG-NOM	Number=Sing	6	nsubj	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	6	punct	_	_
6	specify	specify	VERB	INF	VerbForm=Inf	11	advcl	_	_
7	what	what	PRON	WH	PronType=Int	11	obj	_	_
8	performance	performance	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	bottlenecks	bottleneck	NOUN	PL-NOM	Number=Plur	11	nsubj	_	_
10	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	11	aux	_	_
11	limiting	limit	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	efficiency	efficiency	NOUN	SG-NOM	Number=Sing	11	obj	_	_
14	of	of	ADP	_	_	16	case	_	_
15	parallel	parallel	ADJ	POS	Degree=Pos	16	amod	_	_
16	code	code	NOUN	SG-NOM	Number=Sing	13	nmod	_	_
17	and	and	CCONJ	_	_	18	cc	_	_
18	select	select	VERB	INF	VerbForm=Inf	16	conj	_	_
19	appropriate	appropriate	ADJ	POS	Degree=Pos	20	amod	_	_
20	strategies	strategy	NOUN	PL-NOM	Number=Plur	18	obj	_	_
21	to	to	PART	_	_	22	mark	_	_
22	overcome	overcome	VERB	INF	VerbForm=Inf	18	advcl	_	_
23	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	24	det	_	_
24	bottlenecks	bottleneck	NOUN	PL-NOM	Number=Plur	22	obj	_	SpacesAfter=\n

# sent_id = 95
# text = Design energy-aware parallelization strategies based on a specific algorithms structure and computing system organization
1	Design	design	NOUN	SG-NOM	Number=Sing	3	compound	_	_
2	energy-aware	energy-aware	ADJ	POS	Degree=Pos	3	amod	_	_
3	parallelization	parallelization	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	strategies	strategy	NOUN	PL-NOM	Number=Plur	5	nsubj:pass	_	_
5	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
6	on	on	ADP	_	_	10	case	_	_
7	a	a	DET	IND-SG	Definite=Ind|PronType=Art	10	det	_	_
8	specific	specific	ADJ	POS	Degree=Pos	10	amod	_	_
9	algorithms	algorithm	ADJ	POS	Degree=Pos	10	amod	_	_
10	structure	structure	NOUN	SG-NOM	Number=Sing	5	obl	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	computing	comput	VERB	ING	Tense=Pres|VerbForm=Part	5	conj	_	_
13	system	system	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	organization	organization	NOUN	SG-NOM	Number=Sing	12	obj	_	SpacesAfter=\n

# sent_id = 96
# text = Argue which performance analysis methods are important given a specific context
1	Argue	argue	PROPN	SG-NOM	Number=Sing	7	nsubj	_	_
2	which	which	DET	WH	PronType=Int	5	det	_	_
3	performance	performance	NOUN	SG-NOM	Number=Sing	5	compound	_	_
4	analysis	analysis	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	methods	method	NOUN	PL-NOM	Number=Plur	1	flat	_	_
6	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	7	cop	_	_
7	important	important	ADJ	POS	Degree=Pos	0	root	_	_
8	given	give	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	7	acl	_	_
9	a	a	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
10	specific	specific	ADJ	POS	Degree=Pos	11	amod	_	_
11	context	context	NOUN	SG-NOM	Number=Sing	8	obj	_	SpacesAfter=\n\n

# newpar
# sent_id = 97
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 98
# text = The course consists of a set of lectures and laboratory sessions
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	consists	consist	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	of	of	ADP	_	_	6	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	set	set	NOUN	SG-NOM	Number=Sing	3	obl	_	_
7	of	of	ADP	_	_	8	case	_	_
8	lectures	lecture	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	and	and	CCONJ	_	_	11	cc	_	_
10	laboratory	laboratory	ADJ	POS	Degree=Pos	11	amod	_	_
11	sessions	session	NOUN	PL-NOM	Number=Plur	8	conj	_	SpacesAfter=\n

# sent_id = 99
# text = The lectures start with an overview of parallel computer architectures and parallel programming models and paradigms
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	lectures	lecture	NOUN	PL-NOM	Number=Plur	3	compound	_	_
3	start	start	NOUN	SG-NOM	Number=Sing	0	root	_	_
4	with	with	ADP	_	_	6	case	_	_
5	an	an	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	overview	overview	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	of	of	ADP	_	_	10	case	_	_
8	parallel	parallel	ADJ	POS	Degree=Pos	10	amod	_	_
9	computer	computer	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	architectures	architecture	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
11	and	and	CCONJ	_	_	14	cc	_	_
12	parallel	parallel	ADJ	POS	Degree=Pos	14	amod	_	_
13	programming	program	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	models	model	NOUN	PL-NOM	Number=Plur	10	conj	_	_
15	and	and	CCONJ	_	_	16	cc	_	_
16	paradigms	paradigm	NOUN	PL-NOM	Number=Plur	10	conj	_	SpacesAfter=\n

# sent_id = 100
# text = An important part of the discussion are mechanisms for synchronization and data exchange
1	An	an	DET	IND-SG	Definite=Ind|PronType=Art	3	det	_	_
2	important	important	ADJ	POS	Degree=Pos	3	amod	_	_
3	part	part	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	discussion	discussion	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	mechanisms	mechanism	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
9	for	for	ADP	_	_	10	case	_	_
10	synchronization	synchronization	NOUN	SG-NOM	Number=Sing	13	compound	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	data	data	NOUN	PL-NOM	Number=Sing	10	conj	_	_
13	exchange	exchange	NOUN	SG-NOM	Number=Sing	8	obj	_	SpacesAfter=\n

# sent_id = 101
# text = Next, performance analysis of parallel programs is covered
1	Next	next	ADV	_	_	3	advmod	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	1	punct	_	_
3	performance	performance	VERB	PRES	Case=Nom	9	nsubj:pass	_	_
4	analysis	analysis	NOUN	SG-NOM	Number=Sing	3	obj	_	_
5	of	of	ADP	_	_	7	case	_	_
6	parallel	parallel	ADJ	POS	Degree=Pos	7	amod	_	_
7	programs	program	NOUN	PL-NOM	Number=Plur	4	nmod	_	_
8	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	_	_
9	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpacesAfter=\n

# sent_id = 102
# text = The course proceeds with a discussion of tools and techniques for developing parallel programs in shared address spaces
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	ADJ	CMP	Degree=Cmp	3	amod	_	_
3	proceeds	proceed	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	with	with	ADP	_	_	6	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	discussion	discussion	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	of	of	ADP	_	_	8	case	_	_
8	tools	tool	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	techniques	technique	NOUN	PL-NOM	Number=Plur	8	conj	_	_
11	for	for	ADP	_	_	12	mark	_	_
12	developing	develop	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	_
13	parallel	parallel	ADJ	POS	Degree=Pos	14	amod	_	_
14	programs	program	NOUN	PL-NOM	Number=Plur	12	obj	_	_
15	in	in	ADP	_	_	18	case	_	_
16	shared	share	ADJ	PASS	Degree=Pos	17	amod	_	_
17	address	address	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	spaces	space	NOUN	PL-NOM	Number=Plur	12	obl	_	SpacesAfter=\n

# sent_id = 103
# text = This section covers popular programming environments such as pthreads and OpenMP
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
2	section	section	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	covers	cover	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	popular	popular	ADJ	POS	Degree=Pos	5	amod	_	_
5	programming	programme	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	environments	environments	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
7	such	such	ADJ	ADJ	Case=Nom	6	amod	_	_
8	as	as	ADP	_	_	9	case	_	_
9	pthreads	pthread	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	_	_	11	cc	_	_
11	OpenMP	OpenMP	PROPN	SG-NOM	Case=Nom	9	conj	_	SpacesAfter=\n

# sent_id = 104
# text = Next the course discusses the development of parallel programs for distributed address space
1	Next	next	ADP	_	_	3	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	4	obl	_	_
4	discusses	discuss	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	development	development	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	of	of	ADP	_	_	9	case	_	_
8	parallel	parallel	ADJ	POS	Degree=Pos	9	amod	_	_
9	programs	program	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
10	for	for	ADP	_	_	13	case	_	_
11	distributed	distribute	ADJ	PASS	Degree=Pos	12	amod	_	_
12	address	address	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	space	space	NOUN	SG-NOM	Number=Sing	9	nmod	_	SpacesAfter=\n

# sent_id = 105
# text = The focus in this part is on the Message Passing Interface (MPI)
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	focus	focus	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
3	in	in	ADP	_	_	5	case	_	_
4	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	5	det	_	_
5	part	part	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	_	_
7	on	on	ADP	_	_	11	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
9	Message	message	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	Passing	pass	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	Interface	interface	NOUN	SG-NOM	Number=Sing	0	root	_	_
12	(	(	PUNCT	LeftParenthesis	_	13	punct	_	SpaceAfter=No
13	MPI	MPI	PROPN	SG-NOM	Number=Sing	11	appos	_	SpaceAfter=No
14	)	)	PUNCT	RightParenthesis	_	13	punct	_	SpacesAfter=\n

# sent_id = 106
# text = Finally, we discuss programming approaches for executing applications on accelerators such as GPUs
1	Finally	final	ADV	_	_	4	advmod	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	1	punct	_	_
3	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	nsubj	_	_
4	discuss	discuss	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
5	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	4	xcomp	_	_
6	approaches	approach	NOUN	PL-NOM	Number=Plur	5	obj	_	_
7	for	for	ADP	_	_	8	mark	_	_
8	executing	execut	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
9	applications	application	NOUN	PL-NOM	Number=Plur	8	obj	_	_
10	on	on	ADP	_	_	11	case	_	_
11	accelerators	accelerator	NOUN	PL-NOM	Number=Plur	8	obl	_	_
12	such	such	ADJ	ADJ	Case=Nom	11	amod	_	_
13	as	as	ADP	_	_	14	case	_	_
14	GPUs	Gpus	NOUN	PL-NOM	Number=Plur	12	nmod	_	SpacesAfter=\n

# sent_id = 107
# text = This part introduces the CUDA (Compute Unified Device Architecture) programming environment
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	part	part	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	introduces	introduce	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	CUDA	Cuda	PROPN	SG-NOM	Number=Sing	8	nsubj	_	_
6	(	(	PUNCT	LeftParenthesis	_	8	punct	_	SpaceAfter=No
7	Compute	Compute	PROPN	SG-NOM	Number=Sing	8	nsubj	_	_
8	Unified	Unify	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	3	conj	_	_
9	Device	Device	PROPN	SG-NOM	Number=Sing	8	obj	_	_
10	Architecture	Architecture	PROPN	SG-NOM	Case=Nom	9	flat	_	SpaceAfter=No
11	)	)	PUNCT	RightParenthesis	_	8	punct	_	_
12	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	3	conj	_	_
13	environment	environment	NOUN	SG-NOM	Number=Sing	12	obj	_	SpacesAfter=\n\n

# newpar
# sent_id = 108
# text = The lectures are complemented with a set of laboratory sessions in which participants explore the topics introduced in the lectures
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	lectures	lecture	NOUN	PL-NOM	Number=Plur	4	nsubj:pass	_	_
3	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	complemented	complement	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	with	with	ADP	_	_	7	case	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
7	set	set	NOUN	SG-NOM	Number=Sing	4	obl	_	_
8	of	of	ADP	_	_	10	case	_	_
9	laboratory	laboratory	ADJ	POS	Degree=Pos	10	amod	_	_
10	sessions	session	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
11	in	in	ADP	_	_	13	case	_	_
12	which	which	PRON	WH-REL	PronType=Int	13	nsubj	_	_
13	participants	participant	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
14	explore	explore	SCONJ	_	_	17	mark	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	16	det	_	_
16	topics	topic	NOUN	PL-NOM	Number=Plur	17	nsubj	_	_
17	introduced	introduce	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	13	acl	_	_
18	in	in	ADP	_	_	20	case	_	_
19	the	the	DET	DEF	Definite=Def|PronType=Art	20	det	_	_
20	lectures	lecture	NOUN	PL-NOM	Number=Plur	17	obl	_	SpacesAfter=\n

# sent_id = 109
# text = During the lab sessions, participants parallelize sample programs over a variety of parallel architectures, and use performance analysis tools to detect and remove bottlenecks in the parallel implementations of the programs
1	During	during	ADP	_	_	4	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	lab	lab	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	sessions	session	NOUN	PL-NOM	Number=Plur	7	obl	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	participants	participant	NOUN	PL-NOM	Number=Plur	7	nsubj	_	_
7	parallelize	parallelize	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
8	sample	sample	ADJ	POS	Degree=Pos	9	amod	_	_
9	programs	program	NOUN	PL-NOM	Number=Plur	7	obj	_	_
10	over	over	ADP	_	_	12	case	_	_
11	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
12	variety	variety	NOUN	SG-NOM	Number=Sing	7	obl	_	_
13	of	of	ADP	_	_	15	case	_	_
14	parallel	parallel	ADJ	POS	Degree=Pos	15	amod	_	_
15	architectures	architecture	NOUN	PL-NOM	Number=Plur	12	nmod	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	7	punct	_	_
17	and	and	CCONJ	_	_	18	cc	_	_
18	use	use	VERB	INF	VerbForm=Inf	7	conj	_	_
19	performance	performance	NOUN	SG-NOM	Number=Sing	21	compound	_	_
20	analysis	analysis	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	tools	tool	NOUN	PL-NOM	Number=Plur	18	obj	_	_
22	to	to	PART	_	_	23	mark	_	_
23	detect	detect	VERB	INF	VerbForm=Inf	18	advcl	_	_
24	and	and	CCONJ	_	_	25	cc	_	_
25	remove	remove	VERB	INF	VerbForm=Inf	23	conj	_	_
26	bottlenecks	bottleneck	NOUN	PL-NOM	Number=Plur	25	obj	_	_
27	in	in	ADP	_	_	30	case	_	_
28	the	the	DET	DEF	Definite=Def|PronType=Art	30	det	_	_
29	parallel	parallel	ADJ	POS	Degree=Pos	30	amod	_	_
30	implementations	implementation	NOUN	PL-NOM	Number=Plur	25	obl	_	_
31	of	of	ADP	_	_	33	case	_	_
32	the	the	DET	DEF	Definite=Def|PronType=Art	33	det	_	_
33	programs	program	NOUN	PL-NOM	Number=Plur	30	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 110
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 111
# text = The teaching consists of theory-oriented lectures and lab sessions in which the participants develop code for different types of parallel computer systems
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	teaching	teach	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	consists	consist	NOUN	PL-NOM	Number=Plur	2	obj	_	_
4	of	of	ADP	_	_	6	case	_	_
5	theory-oriented	theory-orient	ADJ	PASS	Degree=Pos	6	amod	_	_
6	lectures	lecture	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
7	and	and	CCONJ	_	_	9	cc	_	_
8	lab	lab	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	sessions	session	NOUN	PL-NOM	Number=Plur	6	conj	_	_
10	in	in	ADP	_	_	11	case	_	_
11	which	which	PRON	WH-REL	PronType=Int	14	obl	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	participants	participant	NOUN	PL-NOM	Number=Plur	14	nsubj	_	_
14	develop	develop	VERB	IMP	VerbForm=Inf	9	acl:relcl	_	_
15	code	code	NOUN	SG-NOM	Number=Sing	14	obj	_	_
16	for	for	ADP	_	_	18	case	_	_
17	different	different	ADJ	POS	Degree=Pos	18	amod	_	_
18	types	type	NOUN	PL-NOM	Number=Plur	15	nmod	_	_
19	of	of	ADP	_	_	21	case	_	_
20	parallel	parallel	ADJ	POS	Degree=Pos	21	amod	_	_
21	computer	computer	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	systems	system	NOUN	PL-NOM	Number=Plur	18	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 112
# text = Literature
1	Literature	literature	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 113
# text = Parallel Programming for Multicore and Cluster Systems, Thomas Rauber, Gudula Rünger (2nd edition, 2013)
1	Parallel	parallel	PROPN	SG-NOM	Number=Sing	2	nsubj	_	_
2	Programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	for	for	ADP	_	_	4	case	_	_
4	Multicore	Multicore	NOUN	SG-NOM	Number=Sing	2	obl	_	_
5	and	and	CCONJ	_	_	7	cc	_	_
6	Cluster	Cluster	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	Systems	System	NOUN	PL-NOM	Number=Plur	4	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	9	punct	_	_
9	Thomas	Thomas	PROPN	SG-NOM	Number=Sing	4	conj	_	_
10	Rauber	Rauber	PROPN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	10	punct	_	_
12	Gudula	Gudula	PROPN	SG-NOM	Number=Sing	4	conj	_	_
13	Rünger	Rüng	PROPN	SG-NOM	Number=Sing	12	flat	_	_
14	(	(	PUNCT	LeftParenthesis	_	16	punct	_	SpaceAfter=No
15	2nd	2nd	ADJ	ORD	Degree=Pos	16	amod	_	_
16	edition	edition	NOUN	SG-NOM	Number=Sing	12	appos	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	2013	2013	NUM	CARD-PL	NumType=Card	16	nummod	_	SpaceAfter=No
19	)	)	PUNCT	RightParenthesis	_	16	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 114
# text = Examination including compulsory elements
1	Examination	Examination	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	including	include	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	compulsory	compulsory	ADJ	POS	Degree=Pos	4	amod	_	_
4	elements	element	NOUN	PL-NOM	Number=Plur	2	obj	_	SpacesAfter=\n

# sent_id = 115
# text = The course is examined by an individual written exam that is carried out in an examination hall and a laboratory report written in groups of two
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	examined	examine	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	by	by	ADP	_	_	9	case	_	_
6	an	an	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
7	individual	individual	ADJ	POS	Degree=Pos	9	amod	_	_
8	written	write	ADJ	PASS	Case=Nom	9	amod	_	_
9	exam	exbe	NOUN	SG-NOM	Number=Sing	4	obl	_	_
10	that	that	PRON	REL	PronType=Rel	12	nsubj:pass	_	_
11	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	_	_
12	carried	carry	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	9	acl:relcl	_	_
13	out	out	ADV	_	_	12	compound:prt	_	_
14	in	in	ADP	_	_	17	case	_	_
15	an	an	DET	IND-SG	Definite=Ind|PronType=Art	17	det	_	_
16	examination	examination	NOUN	SG-NOM	Number=Sing	17	compound	_	_
17	hall	hall	NOUN	SG-NOM	Number=Sing	12	obl	_	_
18	and	and	CCONJ	_	_	21	cc	_	_
19	a	a	DET	IND-SG	Definite=Ind|PronType=Art	21	det	_	_
20	laboratory	laboratory	ADJ	POS	Degree=Pos	21	amod	_	_
21	report	report	NOUN	SG-NOM	Number=Sing	12	conj	_	_
22	written	write	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	21	acl	_	_
23	in	in	ADP	_	_	24	case	_	_
24	groups	group	NOUN	PL-NOM	Number=Plur	22	obl	_	_
25	of	of	ADP	_	_	26	case	_	_
26	two	two	NUM	CARD-PL	NumType=Card	24	nummod	_	SpacesAfter=\n\n

# newpar
# sent_id = 116
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 117
# text = The student should have good understanding of computer organization and basic knowledge in low level programming and be familiar with terms like assembler, interrupt and so on, i.e. contents of the course Machine oriented programming
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	student	student	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
3	should	should	AUX	PAST-AUX	VerbForm=Fin	4	aux	_	_
4	have	have	VERB	INF	VerbForm=Inf	0	root	_	_
5	good	good	ADJ	POS	Degree=Pos	6	amod	_	_
6	understanding	understanding	NOUN	ING	Number=Sing	4	obj	_	_
7	of	of	ADP	_	_	9	case	_	_
8	computer	computer	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	organization	organization	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	basic	basic	ADJ	POS	Degree=Pos	12	amod	_	_
12	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	9	conj	_	_
13	in	in	ADP	_	_	15	case	_	_
14	low	low	ADJ	POS	Degree=Pos	15	amod	_	_
15	level	level	NOUN	SG-NOM	Number=Sing	12	nmod	_	_
16	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	15	acl	_	_
17	and	and	CCONJ	_	_	19	cc	_	_
18	be	be	AUX	INF	VerbForm=Inf	19	cop	_	_
19	familiar	familiar	ADJ	POS	Degree=Pos	4	conj	_	_
20	with	with	ADP	_	_	21	case	_	_
21	terms	term	NOUN	PL-NOM	Number=Plur	19	nmod	_	_
22	like	like	ADP	_	_	23	case	_	_
23	assembler	assembler	NOUN	SG-NOM	Number=Sing	21	nmod	_	SpaceAfter=No
24	,	,	PUNCT	Comma	_	25	punct	_	_
25	interrupt	interrupt	ADJ	POS	Degree=Pos	19	conj	_	_
26	and	and	CCONJ	_	_	30	cc	_	_
27	so	so	ADV	_	_	30	advmod	_	_
28	on	on	ADP	_	_	27	fixed	_	SpaceAfter=No
29	,	,	PUNCT	Comma	_	27	punct	_	_
30	i.e	i.e	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
31	.	.	PUNCT	Period	_	4	punct	_	_
32	contents	contents	NOUN	PL-NOM	Number=Plur	4	obj	_	_
33	of	of	ADP	_	_	36	case	_	_
34	the	the	DET	DEF	Definite=Def|PronType=Art	36	det	_	_
35	course	course	ADV	_	_	36	advmod	_	_
36	Machine	Machine	PROPN	SG-NOM	Number=Sing	32	nmod	_	_
37	oriented	orient	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	4	conj	_	_
38	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	37	xcomp	_	SpacesAfter=\n

# sent_id = 118
# text = The student needs to also have knowledge on data structures e.g. trees, linked lists, hash tables, i.e. contents of the course "Data structures", as well as some programming skills (at least 7.5 course points in programming)
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	student	student	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	needs	need	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	to	to	ADP	_	_	6	mark	_	_
5	also	also	ADV	_	_	6	advmod	_	_
6	have	have	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	13	compound	_	_
8	on	on	ADP	_	_	10	case	_	_
9	data	data	NOUN	PL-NOM	Number=Sing	10	compound	_	_
10	structures	structure	NOUN	PL-NOM	Number=Plur	11	obl	_	_
11	e.g	e.g	VERB	ING	Tense=Pres|VerbForm=Part	7	acl	_	SpaceAfter=No
12	.	.	PUNCT	Period	_	11	punct	_	_
13	trees	tree	NOUN	PL-NOM	Number=Plur	6	obj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	15	punct	_	_
15	linked	link	VERB	PERF	Tense=Past|VerbForm=Part|Voice=Pass	6	advcl	_	_
16	lists	list	NOUN	PL-NOM	Number=Plur	15	conj	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	hash	hash	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	tables	table	NOUN	PL-NOM	Number=Plur	15	conj	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	21	punct	_	_
21	i.e	i.e	ADV	_	_	15	advmod	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	15	punct	_	_
23	contents	contents	NOUN	PL-NOM	Number=Plur	15	obj	_	_
24	of	of	ADP	_	_	29	case	_	_
25	the	the	DET	DEF	Definite=Def|PronType=Art	29	det	_	_
26	course	course	ADV	_	_	29	advmod	_	_
27	"	&quot;	PUNCT	Quote	_	26	punct	_	SpaceAfter=No
28	Data	data	NOUN	PL-NOM	Number=Sing	29	compound	_	_
29	structures	structure	NOUN	PL-NOM	Number=Plur	23	nmod	_	SpaceAfter=No
30	"	&quot;	PUNCT	Quote	_	37	punct	_	SpaceAfter=No
31	,	,	PUNCT	Comma	_	30	punct	_	_
32	as	as	ADV	_	_	37	advmod	_	_
33	well	well	ADV	_	Degree=Pos	32	fixed	_	_
34	as	as	ADP	_	_	32	fixed	_	_
35	some	some	DET	IND	_	37	det	_	_
36	programming	programming	NOUN	SG-NOM	Number=Sing	37	compound	_	_
37	skills	skill	NOUN	PL-NOM	Number=Plur	29	appos	_	_
38	(	(	PUNCT	LeftParenthesis	_	43	punct	_	SpaceAfter=No
39	at	at	ADP	_	_	43	case	_	_
40	least	little	ADV	_	_	39	fixed	_	_
41	7.5	7.5	NUM	CARD-PL	NumType=Card	43	nummod	_	_
42	course	course	ADJ	CMP	Degree=Cmp	43	amod	_	_
43	points	point	NOUN	PL-NOM	Number=Plur	37	appos	_	_
44	in	in	ADP	_	_	45	mark	_	_
45	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	43	acl	_	SpaceAfter=No
46	)	)	PUNCT	RightParenthesis	_	43	punct	_	SpacesAfter=\n

# sent_id = 119
# text = Knowledge of basic probability theory can be an advantage, but can also be acquired during the course via complementary reading
1	Knowledge	knowledge	NOUN	SG-NOM	Number=Sing	5	compound	_	_
2	of	of	ADP	_	_	4	case	_	_
3	basic	basic	ADJ	POS	Degree=Pos	4	amod	_	_
4	probability	probability	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
5	theory	theory	NOUN	SG-NOM	Number=Sing	9	nsubj	_	_
6	can	can	AUX	PRES-AUX	VerbForm=Fin	9	aux	_	_
7	be	be	AUX	INF	VerbForm=Inf	9	cop	_	_
8	an	an	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
9	advantage	advantage	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	but	but	CCONJ	_	_	15	cc	_	_
12	can	can	AUX	PRES-AUX	VerbForm=Fin	15	aux	_	_
13	also	also	ADV	_	_	15	advmod	_	_
14	be	be	AUX	INF	VerbForm=Inf	15	aux:pass	_	_
15	acquired	acquire	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	9	conj	_	_
16	during	during	ADP	_	_	18	case	_	_
17	the	the	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
18	course	course	NOUN	SG-NOM	Number=Sing	15	obl	_	_
19	via	via	ADP	_	_	21	case	_	_
20	complementary	complementary	ADJ	POS	Degree=Pos	21	amod	_	_
21	reading	reading	NOUN	SG-NOM	Number=Sing	15	obl	_	SpacesAfter=\n\n

# newpar
# sent_id = 120
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 121
# text = Operating systems exist everywhere where computer systems exist, not just in desktops and servers but also in vehicles, phones and embedded industrial systems
1	Operating	Operat	ADJ	ING	Tense=Pres|VerbForm=Part	2	amod	_	_
2	systems	system	NOUN	PL-NOM	Number=Plur	3	nsubj	_	_
3	exist	exist	VERB	INF	VerbForm=Inf	0	root	_	_
4	everywhere	everywhere	ADV	TOT-WH	_	3	advmod	_	_
5	where	where	ADV	WH-REL	PronType=Int	8	advmod	_	_
6	computer	computer	ADJ	CMP	Degree=Cmp	7	amod	_	_
7	systems	system	NOUN	PL-NOM	Number=Plur	8	nsubj	_	_
8	exist	exist	VERB	INF	VerbForm=Inf	3	advcl	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	3	punct	_	_
10	not	not	PART	NEG	_	11	advmod	_	_
11	just	just	ADV	_	_	13	advmod	_	_
12	in	in	ADP	_	_	13	case	_	_
13	desktops	desktop	NOUN	PL-NOM	Number=Plur	3	conj	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	servers	server	NOUN	PL-NOM	Number=Plur	13	conj	_	_
16	but	but	CCONJ	_	_	19	cc	_	_
17	also	also	ADV	_	_	19	advmod	_	_
18	in	in	ADP	_	_	19	case	_	_
19	vehicles	vehicle	NOUN	PL-NOM	Number=Plur	13	conj	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	19	punct	_	_
21	phones	phone	NOUN	PL-NOM	Number=Plur	13	conj	_	_
22	and	and	CCONJ	_	_	23	cc	_	_
23	embedded	embed	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	3	conj	_	_
24	industrial	industrial	ADJ	POS	Degree=Pos	25	amod	_	_
25	systems	system	NOUN	PL-NOM	Number=Plur	23	obj	_	SpacesAfter=\n

# sent_id = 122
# text = This course provides an introduction to the design and implementation of operating systems
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	provides	provide	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	an	an	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
5	introduction	introduction	NOUN	SG-NOM	Number=Sing	3	obj	_	_
6	to	to	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	design	design	NOUN	SG-NOM	Number=Sing	3	obl	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	implementation	implementation	NOUN	SG-NOM	Number=Sing	8	conj	_	_
11	of	of	ADP	_	_	13	case	_	_
12	operating	operat	ADJ	ING	Tense=Pres|VerbForm=Part	13	amod	_	_
13	systems	system	NOUN	PL-NOM	Number=Plur	10	nmod	_	SpacesAfter=\n

# sent_id = 123
# text = In particular, the aim is to explain the structure and function of an operating system and its cooperation with the computing system it supports; illustrate key operating system aspects and algorithms in operating system implementations; accompany with concrete examples and prepare students for future courses
1	In	in	ADP	_	_	2	case	_	_
2	particular	particular	ADJ	POS	Degree=Pos	8	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	aim	ae	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	to	to	PART	_	_	8	mark	_	_
8	explain	explain	VERB	INF	VerbForm=Inf	0	root	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	structure	structure	NOUN	SG-NOM	Number=Sing	8	obj	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	function	function	NOUN	SG-NOM	Number=Sing	10	conj	_	_
13	of	of	ADP	_	_	16	case	_	_
14	an	an	DET	IND-SG	Definite=Ind|PronType=Art	16	det	_	_
15	operating	operat	ADJ	ING	Case=Nom	16	amod	_	_
16	system	system	NOUN	SG-NOM	Number=Sing	12	nmod	_	_
17	and	and	CCONJ	_	_	19	cc	_	_
18	its	it	PRON	SG-GEN	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	19	nmod:poss	_	_
19	cooperation	cooperation	NOUN	SG-NOM	Number=Sing	8	conj	_	_
20	with	with	ADP	_	_	23	case	_	_
21	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
22	computing	comput	ADJ	POS	Degree=Pos	23	amod	_	_
23	system	system	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
24	it	it	PRON	PERS-SG	_	25	nsubj	_	_
25	supports	support	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	conj	_	SpaceAfter=No
26	;	;	PUNCT	SemiColon	_	8	punct	_	_
27	illustrate	illustrate	ADJ	POS	Degree=Pos	28	amod	_	_
28	key	key	NOUN	SG-NOM	Number=Sing	8	obj	_	_
29	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	28	acl	_	_
30	system	system	NOUN	SG-NOM	Number=Sing	31	compound	_	_
31	aspects	aspect	NOUN	PL-NOM	Number=Plur	29	obj	_	_
32	and	and	CCONJ	_	_	33	cc	_	_
33	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	31	conj	_	_
34	in	in	ADP	_	_	35	mark	_	_
35	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	29	advcl	_	_
36	system	system	NOUN	SG-NOM	Number=Sing	37	compound	_	_
37	implementations	implementation	NOUN	PL-NOM	Number=Plur	35	obj	_	SpaceAfter=No
38	;	;	PUNCT	SemiColon	_	8	punct	_	_
39	accompany	accompany	NOUN	SG-NOM	Number=Sing	48	compound	_	_
40	with	with	ADP	_	_	42	case	_	_
41	concrete	concrete	ADJ	POS	Degree=Pos	42	amod	_	_
42	examples	example	NOUN	PL-NOM	Number=Plur	39	nmod	_	_
43	and	and	CCONJ	_	_	45	cc	_	_
44	prepare	prepare	ADJ	POS	Degree=Pos	45	amod	_	_
45	students	student	NOUN	PL-NOM	Number=Plur	42	conj	_	_
46	for	for	ADP	_	_	47	case	_	_
47	future	future	NOUN	SG-NOM	Number=Sing	45	nmod	_	_
48	courses	cours	NOUN	PL-NOM	Number=Plur	8	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 124
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 125
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 126
# text = After successful completion of the course participants will be able to demonstrate knowledge and understanding of:
1	After	after	ADP	_	_	3	case	_	_
2	successful	successful	ADJ	POS	Degree=Pos	3	amod	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	10	nsubj	_	_
4	of	of	ADP	_	_	7	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
6	course	course	ADJ	POS	Degree=Pos	7	amod	_	_
7	participants	participant	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
8	will	will	AUX	PRES-AUX	VerbForm=Fin	10	aux	_	_
9	be	be	AUX	INF	VerbForm=Inf	10	cop	_	_
10	able	able	ADJ	POS	Degree=Pos	0	root	_	_
11	to	to	PART	_	_	12	mark	_	_
12	demonstrate	demonstrate	VERB	INF	VerbForm=Inf	10	acl	_	_
13	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	12	obj	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	understanding	understand	VERB	ING	Case=Nom	10	conj	_	_
16	of	of	ADP	_	_	15	fixed	_	SpaceAfter=No
17	:	:	PUNCT	Colon	_	15	punct	_	SpacesAfter=\n

# sent_id = 127
# text = The core functionality of modern operating systems
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	core	core	ADJ	CMP-SG	Degree=Cmp	3	amod	_	_
3	functionality	functionality	NOUN	SG-NOM	Number=Sing	0	root	_	_
4	of	of	ADP	_	_	7	case	_	_
5	modern	modern	ADJ	POS	Degree=Pos	7	amod	_	_
6	operating	operat	ADJ	ING	Degree=Pos	7	amod	_	_
7	systems	system	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpacesAfter=\n

# sent_id = 128
# text = Key concepts and algorithms in operating system implementations
1	Key	key	ADJ	POS	Degree=Pos	2	amod	_	_
2	concepts	concepts	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	2	conj	_	_
5	in	in	ADP	_	_	6	mark	_	_
6	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	_
7	system	system	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	implementations	implementation	NOUN	PL-NOM	Number=Plur	6	obj	_	SpacesAfter=\n

# sent_id = 129
# text = Implementation of simple OS components
1	Implementation	implementation	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	of	of	ADP	_	_	5	case	_	_
3	simple	simple	ADJ	POS	Degree=Pos	4	amod	_	_
4	OS	OS	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	components	component	NOUN	PL-NOM	Number=Plur	1	nmod	_	SpacesAfter=\n

# sent_id = 130
# text = The participants will also be able to:
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	participants	participant	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
3	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
4	also	also	ADV	_	_	6	advmod	_	_
5	be	be	AUX	INF	VerbForm=Inf	6	cop	_	_
6	able	able	ADJ	POS	Degree=Pos	0	root	_	_
7	to	to	ADP	_	_	6	case	_	SpaceAfter=No
8	:	:	PUNCT	Colon	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 131
# text = appreciate the design space and trade-offs involved in implementing an operating system
1	appreciate	appreciate	VERB	IMP	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
3	design	design	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	space	space	NOUN	SG-NOM	Number=Sing	1	obj	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	trade-offs	trade-off	NOUN	PL-NOM	Number=Plur	4	conj	_	_
7	involved	involve	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	4	acl	_	_
8	in	in	ADP	_	_	9	mark	_	_
9	implementing	implement	VERB	ING	Tense=Pres|VerbForm=Part	7	advcl	_	_
10	an	an	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
11	operating	operat	ADJ	ING	Case=Nom	12	amod	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	9	obj	_	SpacesAfter=\n

# sent_id = 132
# text = Write C programs that interface to the operating system at the system call level
1	Write	write	ADV	_	_	3	advmod	_	_
2	C	C	NUM	ID	_	3	nummod	_	_
3	programs	program	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	5	det	_	_
5	interface	interface	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
6	to	to	ADP	_	_	9	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
8	operating	operat	ADJ	ING	Tense=Pres|VerbForm=Part	9	amod	_	_
9	system	system	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
10	at	at	ADP	_	_	13	case	_	_
11	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	call	call	NOUN	SG-NOM	Number=Sing	14	obl	_	_
14	level	level	VERB	PRES	Case=Nom	9	acl	_	SpacesAfter=\n

# sent_id = 133
# text = * Implement a piece of system-level code in the C programming language
1	*	*	PUNCT	Period	_	4	punct	_	_
2	Implement	implement	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
3	a	a	DET	IND-SG	Definite=Ind|PronType=Art	4	det	_	_
4	piece	piece	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
5	of	of	ADP	_	_	7	case	_	_
6	system-level	system-level	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	code	code	NOUN	SG-NOM	Number=Sing	4	nmod	_	_
8	in	in	ADP	_	_	10	case	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	C	c	PROPN	SG-NOM	Number=Sing	4	nmod	_	_
11	programming	programming	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
12	language	language	NOUN	SG-NOM	Number=Sing	11	obj	_	SpacesAfter=\n

# sent_id = 134
# text = * some programing using multithread synchronization constructs
1	*	*	PUNCT	Period	_	3	punct	_	_
2	some	some	DET	IND	_	3	det	_	_
3	programing	program	VERB	ING	Tense=Pres|VerbForm=Part	4	advcl	_	_
4	using	use	VERB	ING	Tense=Pres|VerbForm=Part	7	advcl	_	_
5	multithread	multithread	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	synchronization	synchronization	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	constructs	construct	VERB	PRES	Case=Nom	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 135
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 136
# text = The course provides an introduction to the design and implementation of operating systems
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	provides	provide	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	an	an	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
5	introduction	introduction	NOUN	SG-NOM	Number=Sing	3	obj	_	_
6	to	to	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	design	design	NOUN	SG-NOM	Number=Sing	3	obl	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	implementation	implementation	NOUN	SG-NOM	Number=Sing	8	conj	_	_
11	of	of	ADP	_	_	13	case	_	_
12	operating	operat	ADJ	ING	Tense=Pres|VerbForm=Part	13	amod	_	_
13	systems	system	NOUN	PL-NOM	Number=Plur	10	nmod	_	SpacesAfter=\n

# sent_id = 137
# text = Topics covered include: concurrent processes, resource management, deadlocks, memory management techniques, virtual memory, processor scheduling, disk scheduling, file systems, distributed file systems and micro kernels, virtual machines and security and protection schemes
1	Topics	Topics	NOUN	PL-NOM	Number=Plur	23	nsubj	_	_
2	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	1	acl	_	_
3	include	include	ADP	_	_	6	case	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	_
5	concurrent	concurrent	ADJ	POS	Degree=Pos	6	amod	_	_
6	processes	processes	NOUN	PL-NOM	Number=Plur	2	obl	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	resource	resource	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	management	management	NOUN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	deadlocks	deadlock	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	memory	memory	NOUN	SG-NOM	Number=Sing	15	compound	_	_
14	management	management	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	techniques	technique	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	18	punct	_	_
17	virtual	virtual	ADJ	POS	Degree=Pos	18	amod	_	_
18	memory	memory	NOUN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	18	punct	_	_
20	processor	processor	NOUN	SG-NOM	Number=Sing	6	conj	_	_
21	scheduling	scheduling	VERB	ING	Tense=Pres|VerbForm=Part	20	acl	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	1	punct	_	_
23	disk	disk	VERB	IMP	Mood=Imp|VerbForm=Fin	0	root	_	_
24	scheduling	scheduling	VERB	ING	Tense=Pres|VerbForm=Part	23	conj	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	24	punct	_	_
26	file	file	NOUN	SG-NOM	Number=Sing	27	compound	_	_
27	systems	system	NOUN	PL-NOM	Number=Plur	24	obj	_	SpaceAfter=No
28	,	,	PUNCT	Comma	_	29	punct	_	_
29	distributed	distribute	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	23	conj	_	_
30	file	file	NOUN	SG-NOM	Number=Sing	42	compound	_	_
31	systems	system	NOUN	PL-NOM	Number=Plur	42	compound	_	_
32	and	and	CCONJ	_	_	34	cc	_	_
33	micro	micro	NOUN	SG-NOM	Number=Sing	34	compound	_	_
34	kernels	kernel	NOUN	PL-NOM	Number=Plur	31	conj	_	SpaceAfter=No
35	,	,	PUNCT	Comma	_	31	punct	_	_
36	virtual	virtual	ADJ	POS	Degree=Pos	37	amod	_	_
37	machines	machine	NOUN	PL-NOM	Number=Plur	31	conj	_	_
38	and	and	CCONJ	_	_	39	cc	_	_
39	security	security	NOUN	SG-NOM	Number=Sing	31	conj	_	_
40	and	and	CCONJ	_	_	41	cc	_	_
41	protection	protection	NOUN	SG-NOM	Number=Sing	31	conj	_	_
42	schemes	scheme	NOUN	PL-NOM	Number=Plur	29	obj	_	SpacesAfter=\n

# sent_id = 138
# text = During its development, the course does not only present key components of operating systems, but also discusses their design and implementation challenge and their evolution from pioneer to modern mobile-based ones
1	During	during	VERB	ING	Tense=Pres|VerbForm=Part	7	advcl	_	_
2	its	it	PRON	SG-GEN	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	3	nmod:poss	_	_
3	development	development	NOUN	SG-NOM	Number=Sing	1	obj	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	1	punct	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	1	obj	_	_
7	does	do	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
8	not	not	PART	NEG	_	10	advmod	_	_
9	only	only	ADV	_	_	10	advmod	_	_
10	present	present	ADJ	POS	Degree=Pos	12	amod	_	_
11	key	key	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	components	component	NOUN	PL-NOM	Number=Plur	7	obj	_	_
13	of	of	ADP	_	_	14	mark	_	_
14	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
15	systems	system	NOUN	PL-NOM	Number=Plur	14	obj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	19	punct	_	_
17	but	but	CCONJ	_	_	19	cc	_	_
18	also	also	ADV	_	_	19	advmod	_	_
19	discusses	discuss	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	conj	_	_
20	their	they	PRON	P3PL-GEN	_	21	nmod:poss	_	_
21	design	design	NOUN	SG-NOM	Number=Sing	19	obj	_	_
22	and	and	CCONJ	_	_	24	cc	_	_
23	implementation	implementation	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	challenge	challenge	NOUN	SG-NOM	Number=Sing	21	conj	_	_
25	and	and	CCONJ	_	_	27	cc	_	_
26	their	they	PRON	P3PL-GEN	_	27	nmod:poss	_	_
27	evolution	evolution	NOUN	SG-NOM	Number=Sing	12	conj	_	_
28	from	from	ADP	_	_	29	case	_	_
29	pioneer	pioneer	NOUN	SG-NOM	Number=Sing	27	nmod	_	_
30	to	to	PART	_	_	31	mark	_	_
31	modern	modern	VERB	INF	VerbForm=Inf	27	acl	_	_
32	mobile-based	mobile-base	ADJ	POS	Degree=Pos	33	amod	_	_
33	ones	one	PRON	IND-PL-NOM	Case=Nom	31	obj	_	SpacesAfter=\n

# sent_id = 139
# text = Examples include Unix, Linux, Windows, mobile-devices operating systems
1	Examples	examples	NOUN	PL-NOM	Number=Plur	11	compound	_	_
2	include	include	ADP	_	_	3	case	_	_
3	Unix	Unix	PROPN	SG-NOM	Number=Sing	10	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	Linux	Linux	PROPN	SG-NOM	Number=Sing	3	conj	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	Windows	Windows	PROPN	SG-NOM	Case=Nom	3	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	7	punct	_	_
9	mobile-devices	mobile-device	NOUN	PL-NOM	Number=Plur	10	nsubj	_	_
10	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	1	acl	_	_
11	systems	system	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 140
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 141
# text = Lectures, exercises and labs
1	Lectures	Lecture	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	3	punct	_	_
3	exercises	exercise	NOUN	PL-NOM	Number=Plur	1	conj	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	labs	lab	NOUN	PL-NOM	Number=Plur	1	conj	_	SpacesAfter=\n

# sent_id = 142
# text = Part of the labs will use Pintos, an educational operating system supporting kernel threads, loading and running of user programs and a file system
1	Part	part	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
2	of	of	ADP	_	_	4	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
4	labs	lab	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
5	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
6	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
7	Pintos	Pintos	PROPN	SG-NOM	Number=Sing	6	obj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	6	punct	_	_
9	an	an	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
10	educational	educational	ADJ	POS	Degree=Pos	12	amod	_	_
11	operating	operat	ADJ	ING	Case=Nom	12	amod	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	6	obj	_	_
13	supporting	support	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
14	kernel	kernel	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	threads	thread	NOUN	PL-NOM	Number=Plur	13	obj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	17	punct	_	_
17	loading	load	VERB	ING	Tense=Pres|VerbForm=Part	6	conj	_	_
18	and	and	CCONJ	_	_	19	cc	_	_
19	running	run	VERB	ING	Tense=Pres|VerbForm=Part	6	conj	_	_
20	of	of	ADP	_	_	22	case	_	_
21	user	user	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	programs	program	NOUN	PL-NOM	Number=Plur	19	obl	_	_
23	and	and	CCONJ	_	_	26	cc	_	_
24	a	a	DET	IND-SG	Definite=Ind|PronType=Art	26	det	_	_
25	file	file	NOUN	SG-NOM	Number=Sing	26	compound	_	_
26	system	system	NOUN	SG-NOM	Number=Sing	22	conj	_	SpacesAfter=\n

# sent_id = 143
# text = Pintos is among the international well-established platforms for top quality hands-on labs
1	Pintos	Pinto	NOUN	PL-NOM	Number=Plur	2	nsubj	_	_
2	is	be	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	among	among	ADP	_	_	7	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
5	international	international	ADJ	POS	Degree=Pos	7	amod	_	_
6	well-established	well-established	ADJ	POS	Degree=Pos	7	amod	_	_
7	platforms	platform	NOUN	PL-NOM	Number=Plur	2	obl	_	_
8	for	for	ADP	_	_	12	case	_	_
9	top	top	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	quality	quality	NOUN	SG-NOM	Number=Sing	12	compound	_	_
11	hands-on	hands-on	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	labs	lab	NOUN	PL-NOM	Number=Plur	7	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 144
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 145
# text = Preparatory courses in concurrent programming and operating systems
1	Preparatory	preparatory	ADJ	POS	Degree=Pos	2	amod	_	_
2	courses	course	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
3	in	in	ADP	_	_	5	mark	_	_
4	concurrent	concurrent	ADJ	POS	Degree=Pos	5	amod	_	_
5	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	5	conj	_	_
8	systems	system	NOUN	PL-NOM	Number=Plur	5	obj	_	SpacesAfter=\n

# sent_id = 146
# text = Knowledge corresponding to a course in machine-oriented programming using the high-level language C.
1	Knowledge	knowledge	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	corresponding	correspond	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	to	to	ADP	_	_	5	case	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	obl	_	_
6	in	in	ADP	_	_	8	case	_	_
7	machine-oriented	machine-orient	ADJ	PASS	Case=Nom	8	amod	_	_
8	programming	programming	NOUN	SG-NOM	Number=Sing	2	obl	_	_
9	using	use	VERB	ING	Tense=Pres|VerbForm=Part	2	advcl	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
11	high-level	high-level	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	language	language	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	C	c	PROPN	SG-NOM	Number=Sing	9	obj	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 147
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 148
# text = An embedded system is a computer system designed to perform one or a few dedicated functions
1	An	an	DET	IND-SG	Definite=Ind|PronType=Art	3	det	_	_
2	embedded	embed	ADJ	PASS	Degree=Pos	3	amod	_	_
3	system	system	NOUN	SG-NOM	Number=Sing	7	nsubj	_	_
4	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
6	computer	computer	ADJ	POS	Degree=Pos	7	amod	_	_
7	system	system	NOUN	SG-NOM	Number=Sing	0	root	_	_
8	designed	design	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	7	acl	_	_
9	to	to	PART	_	_	10	mark	_	_
10	perform	perform	VERB	INF	VerbForm=Inf	8	xcomp	_	_
11	one	one	NUM	CARD-SG	NumType=Card	10	obj	_	_
12	or	or	CCONJ	_	_	16	cc	_	_
13	a	a	DET	IND-SG	Definite=Ind|PronType=Art	16	det	_	_
14	few	few	ADJ	IND-PL	Degree=Pos	13	fixed	_	_
15	dedicated	dedicate	ADJ	PASS	Degree=Pos	16	amod	_	_
16	functions	function	NOUN	PL-NOM	Number=Plur	11	conj	_	SpacesAfter=\n

# sent_id = 149
# text = It is embedded in the sense that it is part of a complete device, often including electrical hardware and mechanical parts
1	It	it	PRON	PERS-SG	_	3	nsubj:pass	_	_
2	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux:pass	_	_
3	embedded	embed	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
4	in	in	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	sense	sense	NOUN	SG-NOM	Number=Sing	3	obl	_	_
7	that	that	SCONJ	_	_	10	mark	_	_
8	it	it	PRON	PERS-SG	_	10	nsubj	_	_
9	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
10	part	part	NOUN	SG-NOM	Number=Sing	6	acl	_	_
11	of	of	ADP	_	_	14	case	_	_
12	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
13	complete	complete	ADJ	POS	Degree=Pos	14	amod	_	_
14	device	device	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	17	punct	_	_
16	often	often	ADV	_	_	17	advmod	_	_
17	including	include	VERB	ING	Tense=Pres|VerbForm=Part	14	acl	_	_
18	electrical	electrical	ADJ	POS	Degree=Pos	22	amod	_	_
19	hardware	hardware	ADJ	POS	Degree=Pos	22	amod	_	_
20	and	and	CCONJ	_	_	21	cc	_	_
21	mechanical	mechanical	ADJ	POS	Degree=Pos	19	conj	_	_
22	parts	parts	NOUN	PL-NOM	Number=Plur	17	obj	_	SpacesAfter=\n

# sent_id = 150
# text = For reasons of safety and usability, some embedded systems have strict constraints on non-functional behavior such as computational delay and periodicity
1	For	for	ADP	_	_	2	case	_	_
2	reasons	reasons	NOUN	PL-NOM	Number=Plur	11	obl	_	_
3	of	of	ADP	_	_	4	case	_	_
4	safety	safety	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	usability	usability	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	2	punct	_	_
8	some	some	DET	IND	_	10	det	_	_
9	embedded	embed	ADJ	PASS	Degree=Pos	10	amod	_	_
10	systems	system	NOUN	PL-NOM	Number=Plur	11	nsubj	_	_
11	have	have	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
12	strict	strict	ADJ	POS	Degree=Pos	13	amod	_	_
13	constraints	constraint	NOUN	PL-NOM	Number=Plur	11	obj	_	_
14	on	on	ADP	_	_	16	case	_	_
15	non-functional	non-functional	ADJ	POS	Degree=Pos	16	amod	_	_
16	behavior	behavior	NOUN	SG-NOM	Number=Sing	11	obl	_	_
17	such	such	ADJ	ADJ	Case=Nom	16	amod	_	_
18	as	as	ADP	_	_	20	case	_	_
19	computational	computational	ADJ	POS	Degree=Pos	20	amod	_	_
20	delay	delay	NOUN	SG-NOM	Number=Sing	17	nmod	_	_
21	and	and	CCONJ	_	_	22	cc	_	_
22	periodicity	periodicity	NOUN	SG-NOM	Number=Sing	16	conj	_	SpacesAfter=\n

# sent_id = 151
# text = Such systems are referred to as real-time systems
1	Such	such	ADJ	ADJ	_	2	amod	_	_
2	systems	system	NOUN	PL-NOM	Number=Plur	4	nsubj:pass	_	_
3	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	referred	refer	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	to	to	ADP	_	_	8	case	_	_
6	as	as	ADP	_	_	8	case	_	_
7	real-time	real-time	ADJ	POS	Degree=Pos	8	amod	_	_
8	systems	system	NOUN	PL-NOM	Number=Plur	4	obl	_	SpacesAfter=\n

# sent_id = 152
# text = Examples of real-time systems are control systems for cars, aircraft and space vehicles as well as computer games and multimedia applications
1	Examples	example	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
2	of	of	ADP	_	_	4	case	_	_
3	real-time	real-time	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	systems	system	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
5	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	control	control	VERB	INF	VerbForm=Inf	0	root	_	_
7	systems	system	NOUN	PL-NOM	Number=Plur	6	obj	_	_
8	for	for	ADP	_	_	9	case	_	_
9	cars	car	NOUN	PL-NOM	Number=Plur	6	obl	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	aircraft	aircraft	NOUN	SG-NOM	Number=Sing	9	conj	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	space	space	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	vehicles	vehicle	NOUN	PL-NOM	Number=Plur	11	conj	_	_
15	as	as	CCONJ	_	Case=Nom	19	cc	_	_
16	well	well	ADV	_	Degree=Pos	15	fixed	_	_
17	as	as	ADP	_	_	15	fixed	_	_
18	computer	computer	ADJ	POS	Degree=Pos	19	amod	_	_
19	games	game	NOUN	PL-NOM	Number=Plur	14	conj	_	_
20	and	and	CCONJ	_	_	22	cc	_	_
21	multimedia	multimedium	NOUN	PL-NOM	Number=Sing	22	compound	_	_
22	applications	application	NOUN	PL-NOM	Number=Plur	14	conj	_	SpacesAfter=\n

# sent_id = 153
# text = This course is intended to give basic knowledge about methods for the design and analysis of real-time systems.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	intended	intend	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	to	to	PART	_	_	6	mark	_	_
6	give	give	VERB	INF	VerbForm=Inf	4	xcomp	_	_
7	basic	basic	ADJ	POS	Degree=Pos	8	amod	_	_
8	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	6	obj	_	_
9	about	about	ADP	_	_	10	case	_	_
10	methods	method	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
11	for	for	ADP	_	_	13	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	design	design	NOUN	SG-NOM	Number=Sing	10	nmod	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	analysis	analysis	NOUN	SG-NOM	Number=Sing	13	conj	_	_
16	of	of	ADP	_	_	18	case	_	_
17	real-time	real-time	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	systems	system	NOUN	PL-NOM	Number=Plur	15	nmod	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 154
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 155
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 156
# text = After the course the students shall be able to:
1	After	after	ADP	_	_	3	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	8	obl	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	students	student	NOUN	PL-NOM	Number=Plur	8	nsubj	_	_
6	shall	shall	AUX	PRES-AUX	VerbForm=Fin	8	aux	_	_
7	be	be	AUX	INF	VerbForm=Inf	8	cop	_	_
8	able	able	ADJ	POS	Degree=Pos	0	root	_	_
9	to	to	ADP	_	_	8	case	_	SpaceAfter=No
10	:	:	PUNCT	Colon	_	8	punct	_	SpacesAfter=\n

# sent_id = 157
# text = Formulate requirements for embedded systems with strict constraints on computational delay and periodicity.
1	Formulate	Formulate	ADJ	POS	Degree=Pos	2	amod	_	_
2	requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	for	for	ADP	_	_	5	case	_	_
4	embedded	embed	ADJ	PASS	Degree=Pos	5	amod	_	_
5	systems	system	NOUN	PL-NOM	Number=Plur	2	nmod	_	_
6	with	with	ADP	_	_	8	case	_	_
7	strict	strict	ADJ	POS	Degree=Pos	8	amod	_	_
8	constraints	constraint	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	on	on	ADP	_	_	11	case	_	_
10	computational	computational	ADJ	POS	Degree=Pos	11	amod	_	_
11	delay	delay	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
12	and	and	CCONJ	_	_	13	cc	_	_
13	periodicity	periodicity	NOUN	SG-NOM	Number=Sing	11	conj	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 158
# text = Construct concurrently-executing tasks (software units) for real-time applications that interface to hardware devices (sensors/actuators).
1	Construct	Construct	VERB	IMP	Mood=Imp|VerbForm=Fin	0	root	_	_
2	concurrently-executing	concurrently-execut	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	_
3	tasks	task	NOUN	PL-NOM	Number=Plur	2	obj	_	_
4	(	(	PUNCT	LeftParenthesis	_	6	punct	_	SpaceAfter=No
5	software	software	ADJ	POS	Degree=Pos	6	amod	_	_
6	units	unit	NOUN	PL-NOM	Number=Plur	3	appos	_	SpaceAfter=No
7	)	)	PUNCT	RightParenthesis	_	6	punct	_	_
8	for	for	ADP	_	_	10	case	_	_
9	real-time	real-time	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	applications	application	NOUN	PL-NOM	Number=Plur	2	obl	_	_
11	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	12	det	_	_
12	interface	interface	NOUN	SG-NOM	Number=Sing	10	acl:relcl	_	_
13	to	to	PART	_	_	14	mark	_	_
14	hardware	hardware	VERB	INF	VerbForm=Inf	12	acl	_	_
15	devices	device	NOUN	PL-NOM	Number=Plur	14	obj	_	_
16	(	(	PUNCT	LeftParenthesis	_	17	punct	_	SpaceAfter=No
17	sensors/actuators	sensors/actuator	NOUN	PL-NOM	Number=Plur	15	appos	_	SpaceAfter=No
18	)	)	PUNCT	RightParenthesis	_	17	punct	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 159
# text = Describe the principles and mechanisms used for designing run-time systems and communication networks for real-time applications.
1	Describe	describe	AUX	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	principles	principle	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	mechanisms	mechanism	NOUN	PL-NOM	Number=Plur	3	conj	_	_
6	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	3	acl	_	_
7	for	for	ADP	_	_	8	mark	_	_
8	designing	design	VERB	ING	Tense=Pres|VerbForm=Part	6	advcl	_	_
9	run-time	run-time	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	systems	system	NOUN	PL-NOM	Number=Plur	8	obj	_	_
11	and	and	CCONJ	_	_	13	cc	_	_
12	communication	communication	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	networks	network	NOUN	PL-NOM	Number=Plur	8	conj	_	_
14	for	for	ADP	_	_	16	case	_	_
15	real-time	real-time	NOUN	SG-NOM	Number=Sing	16	compound	_	_
16	applications	application	NOUN	PL-NOM	Number=Plur	13	nmod	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 160
# text = Apply the basic analysis methods used for verifying the temporal correctness of a set of executing tasks.
1	Apply	app	PROPN	SG-NOM	Number=Sing	6	nsubj	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
3	basic	basic	ADJ	POS	Degree=Pos	4	amod	_	_
4	analysis	analysis	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	methods	method	NOUN	PL-NOM	Number=Plur	1	flat	_	_
6	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
7	for	for	ADP	_	_	8	mark	_	_
8	verifying	verify	VERB	ING	Tense=Pres|VerbForm=Part	6	advcl	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
10	temporal	temporal	ADJ	POS	Degree=Pos	11	amod	_	_
11	correctness	correctness	NOUN	SG-NOM	Number=Sing	8	obj	_	_
12	of	of	ADP	_	_	14	case	_	_
13	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
14	set	set	NOUN	SG-NOM	Number=Sing	11	nmod	_	_
15	of	of	ADP	_	_	16	mark	_	_
16	executing	execut	VERB	ING	Tense=Pres|VerbForm=Part	14	acl	_	_
17	tasks	tasks	NOUN	PL-NOM	Number=Plur	16	obj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 161
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 162
# text = Due to the extremely high costs associated with late discovery of problems in embedded systems, it is important to follow a good design methodology during the development of the software and hardware
1	Due	Due	PROPN	SG-NOM	Number=Sing	19	vocative	_	_
2	to	to	ADP	_	_	6	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
4	extremely	extremely	ADV	_	_	5	advmod	_	_
5	high	high	ADJ	POS	Degree=Pos	6	amod	_	_
6	costs	cost	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
7	associated	associate	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	6	acl	_	_
8	with	with	ADP	_	_	10	case	_	_
9	late	late	ADJ	POS	Degree=Pos	10	amod	_	_
10	discovery	discovery	NOUN	SG-NOM	Number=Sing	7	obl	_	_
11	of	of	ADP	_	_	12	case	_	_
12	problems	problem	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
13	in	in	ADP	_	_	15	case	_	_
14	embedded	embed	ADJ	PASS	Degree=Pos	15	amod	_	_
15	systems	system	NOUN	PL-NOM	Number=Plur	12	nmod	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	1	punct	_	_
17	it	it	PRON	PERS-SG	_	19	nsubj	_	_
18	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	cop	_	_
19	important	important	ADJ	POS	Degree=Pos	0	root	_	_
20	to	to	PART	_	_	21	mark	_	_
21	follow	follow	VERB	INF	VerbForm=Inf	19	acl	_	_
22	a	a	DET	IND-SG	Definite=Ind|PronType=Art	25	det	_	_
23	good	good	ADJ	POS	Degree=Pos	24	amod	_	_
24	design	design	NOUN	SG-NOM	Number=Sing	25	compound	_	_
25	methodology	methodology	NOUN	SG-NOM	Number=Sing	21	obj	_	_
26	during	during	ADP	_	_	28	case	_	_
27	the	the	DET	DEF	Definite=Def|PronType=Art	28	det	_	_
28	development	development	NOUN	SG-NOM	Number=Sing	21	obl	_	_
29	of	of	ADP	_	_	31	case	_	_
30	the	the	DET	DEF	Definite=Def|PronType=Art	31	det	_	_
31	software	software	NOUN	SG-NOM	Number=Sing	28	nmod	_	_
32	and	and	CCONJ	_	_	33	cc	_	_
33	hardware	hardware	NOUN	SG-NOM	Number=Sing	31	conj	_	SpacesAfter=\n

# sent_id = 163
# text = One means for that is to use a system architecture that offers good component abstractions and facilitates simple interfacing of components
1	One	one	PRON	IND-SG	_	2	nsubj	_	_
2	means	mean	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	for	for	ADP	_	_	7	mark	_	_
4	that	that	PRON	DEM-SG	Number=Sing|PronType=Dem	7	nsubj	_	_
5	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
6	to	to	PART	_	_	7	mark	_	_
7	use	use	VERB	INF	VerbForm=Inf	2	ccomp	_	_
8	a	a	DET	IND-SG	Definite=Ind|PronType=Art	10	det	_	_
9	system	system	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	architecture	architecture	NOUN	SG-NOM	Number=Sing	7	obj	_	_
11	that	that	PRON	REL	PronType=Rel	12	nsubj	_	_
12	offers	offer	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	acl:relcl	_	_
13	good	good	ADJ	POS	Degree=Pos	14	amod	_	_
14	component	component	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	abstractions	abstraction	NOUN	PL-NOM	Number=Plur	19	compound	_	_
16	and	and	CCONJ	_	_	17	cc	_	_
17	facilitates	facilitate	NOUN	PL-NOM	Number=Plur	15	conj	_	_
18	simple	simple	ADJ	POS	Degree=Pos	19	amod	_	_
19	interfacing	interfacing	NOUN	SG-NOM	Number=Sing	12	obj	_	_
20	of	of	ADP	_	_	21	case	_	_
21	components	component	NOUN	PL-NOM	Number=Plur	19	nmod	_	SpacesAfter=\n

# sent_id = 164
# text = The system architecture philosophy dictates that the software of an embedded system is organized into multiple concurrently-executing tasks, where each task (or group of tasks) implements a specific functionality in the system
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	system	system	NOUN	SG-NOM	Number=Sing	5	compound	_	_
3	architecture	architecture	ADV	_	_	4	advmod	_	_
4	philosophy	philosophy	ADJ	POS	Degree=Pos	5	amod	_	_
5	dictates	dictate	NOUN	PL-NOM	Number=Plur	0	root	_	_
6	that	that	SCONJ	_	_	14	mark	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	software	software	NOUN	SG-NOM	Number=Sing	14	nsubj:pass	_	_
9	of	of	ADP	_	_	12	case	_	_
10	an	an	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
11	embedded	embed	ADJ	PASS	Degree=Pos	12	amod	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
13	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	_	_
14	organized	organize	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	5	acl	_	_
15	into	into	ADP	_	_	16	case	_	_
16	multiple	multiple	NOUN	SG-NOM	Number=Sing	17	obl	_	_
17	concurrently-executing	concurrently-execut	VERB	ING	Tense=Pres|VerbForm=Part	14	conj	_	_
18	tasks	task	NOUN	PL-NOM	Number=Plur	17	obj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	18	punct	_	_
20	where	where	ADV	WH-REL	PronType=Int	22	advmod	_	_
21	each	each	DET	TOT-SG	_	22	det	_	_
22	task	task	NOUN	SG-NOM	Number=Sing	18	conj	_	_
23	(	(	PUNCT	LeftParenthesis	_	25	punct	_	SpaceAfter=No
24	or	or	CCONJ	_	_	25	cc	_	_
25	group	group	NOUN	SG-NOM	Number=Sing	22	nmod	_	_
26	of	of	ADP	_	_	27	case	_	_
27	tasks	task	NOUN	PL-NOM	Number=Plur	25	nmod	_	SpaceAfter=No
28	)	)	PUNCT	RightParenthesis	_	25	punct	_	_
29	implements	implement	NOUN	PL-NOM	Number=Plur	25	conj	_	_
30	a	a	DET	IND-SG	Definite=Ind|PronType=Art	32	det	_	_
31	specific	specific	ADJ	POS	Degree=Pos	32	amod	_	_
32	functionality	functionality	NOUN	SG-NOM	Number=Sing	29	nmod	_	_
33	in	in	ADP	_	_	35	case	_	_
34	the	the	DET	DEF	Definite=Def|PronType=Art	35	det	_	_
35	system	system	NOUN	SG-NOM	Number=Sing	32	nmod	_	SpacesAfter=\n

# sent_id = 165
# text = This approach allows for an intuitive way of decomposing a complex system into smaller software units that are simple to comprehend, implement and maintain
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	approach	approach	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	allows	allow	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	for	for	ADP	_	_	7	case	_	_
5	an	an	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
6	intuitive	intuitive	ADJ	POS	Degree=Pos	7	amod	_	_
7	way	way	NOUN	SG-NOM	Number=Sing	3	obl	_	_
8	of	of	ADP	_	_	9	mark	_	_
9	decomposing	decompose	VERB	ING	Tense=Pres|VerbForm=Part	7	acl	_	_
10	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
11	complex	complex	ADJ	POS	Degree=Pos	12	amod	_	_
12	system	system	NOUN	SG-NOM	Number=Sing	9	obj	_	_
13	into	into	ADP	_	_	16	case	_	_
14	smaller	small	ADJ	CMP	Degree=Cmp	16	amod	_	_
15	software	software	ADJ	POS	Degree=Pos	16	amod	_	_
16	units	unit	NOUN	PL-NOM	Number=Plur	9	obl	_	_
17	that	that	PRON	REL	PronType=Rel	19	nsubj	_	_
18	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	19	cop	_	_
19	simple	simple	ADJ	POS	Degree=Pos	16	acl:relcl	_	_
20	to	to	PART	_	_	21	mark	_	_
21	comprehend	comprehend	VERB	INF	VerbForm=Inf	19	acl	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	23	punct	_	_
23	implement	implement	NOUN	SG-NOM	Number=Sing	3	conj	_	_
24	and	and	CCONJ	_	_	25	cc	_	_
25	maintain	maintain	NOUN	SG-NOM	Number=Sing	3	conj	_	SpacesAfter=\n

# sent_id = 166
# text = The software environment used in the course is based on the C programming language, enhanced with a software library that provides support for programming of concurrent tasks with timing (delay and periodicity) constraints
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	software	software	ADJ	POS	Degree=Pos	3	amod	_	_
3	environment	environment	NOUN	SG-NOM	Number=Sing	9	nsubj:pass	_	_
4	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	3	acl	_	_
5	in	in	ADP	_	_	7	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	course	course	NOUN	SG-NOM	Number=Sing	4	obl	_	_
8	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	_	_
9	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
10	on	on	ADP	_	_	12	case	_	_
11	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
12	C	c	PROPN	SG-NOM	Number=Sing	9	obl	_	_
13	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
14	language	language	NOUN	SG-NOM	Number=Sing	13	obj	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	16	punct	_	_
16	enhanced	enhance	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	9	conj	_	_
17	with	with	ADP	_	_	20	case	_	_
18	a	a	DET	IND-SG	Definite=Ind|PronType=Art	20	det	_	_
19	software	software	ADJ	POS	Degree=Pos	20	amod	_	_
20	library	library	NOUN	SG-NOM	Number=Sing	16	obl	_	_
21	that	that	PRON	REL	PronType=Rel	22	nsubj	_	_
22	provides	provide	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	acl:relcl	_	_
23	support	support	NOUN	SG-NOM	Number=Sing	22	obj	_	_
24	for	for	ADP	_	_	25	mark	_	_
25	programming	programming	VERB	ING	Tense=Pres|VerbForm=Part	23	acl	_	_
26	of	of	ADP	_	_	28	case	_	_
27	concurrent	concurrent	ADJ	POS	Degree=Pos	28	amod	_	_
28	tasks	task	NOUN	PL-NOM	Number=Plur	25	obl	_	_
29	with	with	ADP	_	_	30	mark	_	_
30	timing	tim	VERB	ING	Tense=Pres|VerbForm=Part	25	advcl	_	_
31	(	(	PUNCT	LeftParenthesis	_	32	punct	_	SpaceAfter=No
32	delay	delay	NOUN	SG-NOM	Number=Sing	30	obj	_	_
33	and	and	CCONJ	_	_	34	cc	_	_
34	periodicity	periodicity	NOUN	SG-NOM	Number=Sing	32	conj	_	SpaceAfter=No
35	)	)	PUNCT	RightParenthesis	_	32	punct	_	_
36	constraints	constraint	NOUN	PL-NOM	Number=Plur	22	obj	_	SpacesAfter=\n

# sent_id = 167
# text = To that end, a main objective of the course is to demonstrate how the enhanced C programming language is used for implementing communication/synchronization between tasks, resource management and mutual exclusion
1	To	to	ADP	_	_	3	case	_	_
2	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
3	end	end	NOUN	SG-NOM	Number=Sing	13	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	main	main	NOUN	SG-NOM	Number=Sing	13	nsubj	_	_
7	objective	objective	ADJ	POS	Degree=Pos	6	amod	_	_
8	of	of	ADP	_	_	10	case	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	course	course	NOUN	SG-NOM	Number=Sing	7	nmod	_	_
11	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	_	_
12	to	to	PART	_	_	13	mark	_	_
13	demonstrate	demonstrate	VERB	INF	VerbForm=Inf	19	compound	_	_
14	how	how	ADV	WH	PronType=Int	13	advmod	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
16	enhanced	enhance	ADJ	PASS	Case=Nom	17	amod	_	_
17	C	c	NOUN	SG-NOM	Number=Sing	13	obj	_	_
18	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	19	compound	_	_
19	language	language	NOUN	SG-NOM	Number=Sing	21	nsubj:pass	_	_
20	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	aux:pass	_	_
21	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
22	for	for	ADP	_	_	23	mark	_	_
23	implementing	implement	VERB	ING	Tense=Pres|VerbForm=Part	21	advcl	_	_
24	communication/synchronization	communication/synchronization	NOUN	SG-NOM	Number=Sing	23	obj	_	_
25	between	between	ADP	_	_	26	case	_	_
26	tasks	task	NOUN	PL-NOM	Number=Plur	24	nmod	_	SpaceAfter=No
27	,	,	PUNCT	Comma	_	26	punct	_	_
28	resource	resource	NOUN	SG-NOM	Number=Sing	29	compound	_	_
29	management	management	NOUN	SG-NOM	Number=Sing	32	compound	_	_
30	and	and	CCONJ	_	_	31	cc	_	_
31	mutual	mutual	ADJ	POS	Degree=Pos	29	conj	_	_
32	exclusion	exclusion	NOUN	SG-NOM	Number=Sing	26	conj	_	SpacesAfter=\n

# sent_id = 168
# text = Since other programming languages uses monitors or semaphores to implement these functions, the course also contains a presentation of such techniques
1	Since	since	SCONJ	_	_	5	mark	_	_
2	other	other	ADJ	POS	Degree=Pos	4	amod	_	_
3	programming	programme	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	languages	languag	NOUN	PL-NOM	Number=Plur	5	nsubj	_	_
5	uses	use	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	advcl	_	_
6	monitors	monitor	NOUN	PL-NOM	Number=Plur	5	obj	_	_
7	or	or	CCONJ	_	_	8	cc	_	_
8	semaphores	semaphore	NOUN	PL-NOM	Number=Plur	6	conj	_	_
9	to	to	PART	_	_	10	mark	_	_
10	implement	implement	VERB	INF	VerbForm=Inf	5	advcl	_	_
11	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	12	det	_	_
12	functions	function	NOUN	PL-NOM	Number=Plur	10	obj	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	5	punct	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
15	course	course	NOUN	SG-NOM	Number=Sing	17	nsubj	_	_
16	also	also	ADV	_	_	17	advmod	_	_
17	contains	contain	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
18	a	a	DET	IND-SG	Definite=Ind|PronType=Art	19	det	_	_
19	presentation	presentation	NOUN	SG-NOM	Number=Sing	17	obj	_	_
20	of	of	ADP	_	_	22	case	_	_
21	such	such	ADJ	ADJ	_	22	amod	_	_
22	techniques	technique	NOUN	PL-NOM	Number=Plur	19	nmod	_	SpacesAfter=\n

# sent_id = 169
# text = In addition, the course demonstrates how to use low-level programming in C to implement interrupt-driven interaction with hardware devices
1	In	in	ADP	_	_	2	case	_	_
2	addition	addition	NOUN	SG-NOM	Number=Sing	9	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	course	course	ADJ	POS	Degree=Pos	6	amod	_	_
6	demonstrates	demonstrate	NOUN	PL-NOM	Number=Plur	9	nsubj	_	_
7	how	how	ADV	WH	PronType=Int	9	advmod	_	_
8	to	to	PART	_	_	9	mark	_	_
9	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
10	low-level	low-level	NOUN	SG-NOM	Number=Sing	9	obj	_	_
11	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	9	acl	_	_
12	in	in	ADP	_	_	13	case	_	_
13	C	c	PROPN	SG-NOM	Number=Sing	11	obl	_	_
14	to	to	PART	_	_	15	mark	_	_
15	implement	implement	VERB	INF	VerbForm=Inf	11	advcl	_	_
16	interrupt-driven	interrupt-driven	ADJ	POS	Degree=Pos	17	amod	_	_
17	interaction	interaction	NOUN	SG-NOM	Number=Sing	15	obj	_	_
18	with	with	ADP	_	_	20	case	_	_
19	hardware	hardware	ADJ	POS	Degree=Pos	20	amod	_	_
20	devices	device	NOUN	PL-NOM	Number=Plur	15	obl	_	SpacesAfter=\n

# sent_id = 170
# text = To demonstrate the general principles in real-time programming, the course also gives examples of how these techniques are implemented in other programming languages, such as Ada and Java
1	To	to	PART	_	_	2	mark	_	_
2	demonstrate	demonstrate	VERB	INF	VerbForm=Inf	13	advcl	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
4	general	general	ADJ	POS	Degree=Pos	5	amod	_	_
5	principles	principle	NOUN	PL-NOM	Number=Plur	2	obj	_	_
6	in	in	ADP	_	_	7	case	_	_
7	real-time	real-time	NOUN	SG-NOM	Number=Sing	2	obl	_	_
8	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	2	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	2	punct	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	course	course	NOUN	SG-NOM	Number=Sing	13	nsubj	_	_
12	also	also	ADV	_	_	13	advmod	_	_
13	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
14	examples	example	NOUN	PL-NOM	Number=Plur	13	obj	_	_
15	of	of	ADP	_	_	20	mark	_	_
16	how	how	ADV	WH	PronType=Int	20	advmod	_	_
17	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	18	det	_	_
18	techniques	technique	NOUN	PL-NOM	Number=Plur	20	nsubj:pass	_	_
19	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	20	aux:pass	_	_
20	implemented	implement	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	14	acl	_	_
21	in	in	ADP	_	_	24	case	_	_
22	other	other	ADJ	POS	Degree=Pos	24	amod	_	_
23	programming	programming	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	languages	language	NOUN	PL-NOM	Number=Plur	20	obl	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	26	punct	_	_
26	such	such	ADJ	ADJ	Case=Nom	13	xcomp	_	_
27	as	as	ADP	_	_	28	case	_	_
28	Ada	Ada	PROPN	SG-NOM	Number=Sing	26	nmod	_	_
29	and	and	CCONJ	_	_	30	cc	_	_
30	Java	Java	PROPN	SG-NOM	Number=Sing	26	conj	_	SpacesAfter=\n

# sent_id = 171
# text = In order to execute a program containing concurrent tasks there is a run-time system (real-time kernel) that distributes the available capacity of the microprocessor(s) among the tasks
1	In	in	ADP	_	Case=Nom	2	case	_	_
2	order	order	NOUN	_	Number=Sing	14	obl	_	_
3	to	to	PART	_	_	4	mark	_	_
4	execute	execute	VERB	INF	VerbForm=Inf	2	acl	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	program	program	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	containing	contain	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
8	concurrent	concurrent	ADJ	POS	Degree=Pos	9	amod	_	_
9	tasks	task	NOUN	PL-NOM	Number=Plur	7	obj	_	_
10	there	there	PRON	EX	_	14	expl	_	_
11	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
12	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
13	run-time	run-time	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	system	system	NOUN	SG-NOM	Number=Sing	0	root	_	_
15	(	(	PUNCT	LeftParenthesis	_	17	punct	_	SpaceAfter=No
16	real-time	real-time	ADJ	POS	Degree=Pos	17	amod	_	_
17	kernel	kernel	NOUN	SG-NOM	Number=Sing	14	appos	_	SpaceAfter=No
18	)	)	PUNCT	RightParenthesis	_	17	punct	_	_
19	that	that	PRON	REL	PronType=Rel	20	nsubj	_	_
20	distributes	distribute	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	acl:relcl	_	_
21	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
22	available	available	ADJ	POS	Degree=Pos	23	amod	_	_
23	capacity	capacity	NOUN	SG-NOM	Number=Sing	20	obj	_	_
24	of	of	ADP	_	_	26	case	_	_
25	the	the	DET	DEF	Definite=Def|PronType=Art	26	det	_	_
26	microprocessor	microprocessor	NOUN	SG-NOM	Number=Sing	23	nmod	_	SpaceAfter=No
27	(	(	PUNCT	LeftParenthesis	_	28	punct	_	SpaceAfter=No
28	s	s	NOUN	PL-NOM	Number=Plur	26	appos	_	SpaceAfter=No
29	)	)	PUNCT	RightParenthesis	_	28	punct	_	_
30	among	among	ADP	_	_	32	case	_	_
31	the	the	DET	DEF	Definite=Def|PronType=Art	32	det	_	_
32	tasks	tasks	NOUN	PL-NOM	Number=Plur	26	nmod	_	SpacesAfter=\n

# sent_id = 172
# text = The course shows how a simple run-time system is organized
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	shows	show	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	how	how	ADV	WH	PronType=Int	10	advmod	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	8	det	_	_
6	simple	simple	ADJ	POS	Degree=Pos	7	amod	_	_
7	run-time	run-time	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	system	system	NOUN	SG-NOM	Number=Sing	10	nsubj:pass	_	_
9	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	_	_
10	organized	organize	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	3	ccomp	_	SpacesAfter=\n

# sent_id = 173
# text = The run-time system determines the order of execution for the tasks by means of a scheduling algorithm
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	run-time	run-time	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	system	system	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
4	determines	determine	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	order	order	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	of	of	ADP	_	_	8	case	_	_
8	execution	execution	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
9	for	for	ADP	_	_	11	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	tasks	tasks	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
12	by	by	ADP	_	_	13	case	_	_
13	means	means	NOUN	PL-NOM	Number=Plur	11	nmod	_	_
14	of	of	ADP	_	_	17	case	_	_
15	a	a	DET	IND-SG	Definite=Ind|PronType=Art	17	det	_	_
16	scheduling	scheduling	ADJ	ING	Degree=Pos	17	amod	_	_
17	algorithm	algorithm	NOUN	SG-NOM	Number=Sing	13	nmod	_	SpacesAfter=\n

# sent_id = 174
# text = To that end, the course presents techniques based on cyclic time-table based scheduling as well as scheduling techniques using static or dynamic task priorities
1	To	to	ADP	_	_	3	case	_	_
2	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
3	end	end	NOUN	SG-NOM	Number=Sing	13	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
6	course	course	ADJ	POS	Degree=Pos	7	amod	_	_
7	presents	present	NOUN	PL-NOM	Number=Plur	13	nsubj:pass	_	_
8	techniques	technique	NOUN	PL-NOM	Number=Plur	7	flat	_	_
9	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	8	acl	_	_
10	on	on	ADP	_	_	12	case	_	_
11	cyclic	cyclic	ADJ	POS	Degree=Pos	12	amod	_	_
12	time-table	time-table	NOUN	SG-NOM	Number=Sing	9	obl	_	_
13	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
14	scheduling	schedule	VERB	ING	Tense=Pres|VerbForm=Part	13	advcl	_	_
15	as	as	ADV	_	_	14	advmod	_	_
16	well	well	ADV	_	Degree=Pos	15	fixed	_	_
17	as	as	ADP	_	_	19	case	_	_
18	scheduling	schedule	ADJ	ING	Degree=Pos	19	amod	_	_
19	techniques	technique	NOUN	PL-NOM	Number=Plur	14	obl	_	_
20	using	use	VERB	ING	Tense=Pres|VerbForm=Part	19	acl	_	_
21	static	static	ADJ	POS	Degree=Pos	24	amod	_	_
22	or	or	CCONJ	_	_	23	cc	_	_
23	dynamic	dynamic	ADJ	POS	Degree=Pos	21	conj	_	_
24	task	task	NOUN	SG-NOM	Number=Sing	25	compound	_	_
25	priorities	priority	NOUN	PL-NOM	Number=Plur	20	obj	_	SpacesAfter=\n

# sent_id = 175
# text = In addition, protocols for the management of shared hardware and software resources are presented
1	In	in	ADP	_	_	2	case	_	_
2	addition	addition	NOUN	SG-NOM	Number=Sing	15	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	protocols	protocol	NOUN	PL-NOM	Number=Plur	15	nsubj:pass	_	_
5	for	for	ADP	_	_	7	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	management	management	NOUN	SG-NOM	Number=Sing	4	nmod	_	_
8	of	of	ADP	_	_	10	case	_	_
9	shared	share	ADJ	PASS	Degree=Pos	10	amod	_	_
10	hardware	hardware	NOUN	SG-NOM	Number=Sing	7	nmod	_	_
11	and	and	CCONJ	_	_	13	cc	_	_
12	software	software	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	resources	resource	NOUN	PL-NOM	Number=Plur	10	conj	_	_
14	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	15	aux:pass	_	_
15	presented	present	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpacesAfter=\n

# sent_id = 176
# text = Since many contemporary real-time applications are distributed over multiple computer nodes, the course also presents topologies and medium access mechanisms for some commonly-used communication networks
1	Since	since	SCONJ	_	_	7	mark	_	_
2	many	many	ADJ	POS	Degree=Pos	5	amod	_	_
3	contemporary	contemporary	ADJ	POS	Degree=Pos	5	amod	_	_
4	real-time	real-time	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	applications	application	NOUN	PL-NOM	Number=Plur	7	nsubj:pass	_	_
6	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	7	aux:pass	_	_
7	distributed	distribute	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	16	advcl	_	_
8	over	over	ADP	_	_	11	case	_	_
9	multiple	multiple	ADJ	POS	Degree=Pos	11	amod	_	_
10	computer	computer	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	nodes	node	NOUN	PL-NOM	Number=Plur	7	obl	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	7	punct	_	_
13	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
14	course	course	NOUN	SG-NOM	Number=Sing	16	compound	_	_
15	also	also	ADV	_	_	16	advmod	_	_
16	presents	present	NOUN	PL-NOM	Number=Plur	0	root	_	_
17	topologies	topology	NOUN	PL-NOM	Number=Plur	16	conj	_	_
18	and	and	CCONJ	_	_	21	cc	_	_
19	medium	medium	ADJ	POS	Degree=Pos	21	amod	_	_
20	access	access	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	mechanisms	mechanism	NOUN	PL-NOM	Number=Plur	17	conj	_	_
22	for	for	ADP	_	_	26	case	_	_
23	some	some	DET	IND	_	25	det	_	_
24	commonly-used	commonly-used	ADJ	POS	Degree=Pos	25	amod	_	_
25	communication	communication	NOUN	SG-NOM	Number=Sing	26	compound	_	_
26	networks	networks	NOUN	PL-NOM	Number=Plur	17	nmod	_	SpacesAfter=\n

# sent_id = 177
# text = In real-time systems, where tasks have strict timing constraints, it is necessary to make a pre-run-time analysis of the system schedulability
1	In	in	ADP	_	_	3	case	_	_
2	real-time	real-time	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	systems	system	NOUN	PL-NOM	Number=Plur	14	nmod	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	where	where	ADV	WH-REL	PronType=Int	7	advmod	_	_
6	tasks	task	NOUN	PL-NOM	Number=Plur	7	nsubj	_	_
7	have	have	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	3	acl:relcl	_	_
8	strict	strict	ADJ	POS	Degree=Pos	10	amod	_	_
9	timing	tim	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	constraints	constraint	NOUN	PL-NOM	Number=Plur	7	obj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	3	punct	_	_
12	it	it	PRON	PERS-SG	_	14	nsubj	_	_
13	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
14	necessary	necessary	ADJ	POS	Degree=Pos	23	amod	_	_
15	to	to	PART	_	_	16	mark	_	_
16	make	make	VERB	INF	VerbForm=Inf	14	acl	_	_
17	a	a	DET	IND-SG	Definite=Ind|PronType=Art	19	det	_	_
18	pre-run-time	pre-run-time	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	analysis	analysis	NOUN	SG-NOM	Number=Sing	16	obj	_	_
20	of	of	ADP	_	_	22	case	_	_
21	the	the	DET	DEF	Definite=Def|PronType=Art	22	det	_	_
22	system	system	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
23	schedulability	schedulability	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 178
# text = The course presents three different analysis methods for systems that schedule tasks using static or dynamic priorities: utilization-based analysis, response-time analysis, and processor-demand analysis
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	presents	presents	NOUN	PL-NOM	Number=Plur	7	compound	_	_
4	three	three	NUM	CARD-PL	NumType=Card	7	nummod	_	_
5	different	different	ADJ	POS	Degree=Pos	6	amod	_	_
6	analysis	analysis	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	methods	method	NOUN	PL-NOM	Number=Plur	27	nsubj	_	_
8	for	for	ADP	_	_	9	case	_	_
9	systems	system	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
10	that	that	SCONJ	_	_	13	mark	_	_
11	schedule	schedule	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	tasks	task	NOUN	PL-NOM	Number=Plur	13	nsubj	_	_
13	using	use	VERB	ING	Tense=Pres|VerbForm=Part	9	acl	_	_
14	static	static	ADJ	POS	Degree=Pos	17	amod	_	_
15	or	or	CCONJ	_	_	16	cc	_	_
16	dynamic	dynamic	ADJ	POS	Degree=Pos	14	conj	_	_
17	priorities	priority	NOUN	PL-NOM	Number=Plur	13	obj	_	SpaceAfter=No
18	:	:	PUNCT	Colon	_	17	punct	_	_
19	utilization-based	utilization-base	ADJ	POS	Degree=Pos	20	amod	_	_
20	analysis	analysis	NOUN	SG-NOM	Number=Sing	17	conj	_	SpaceAfter=No
21	,	,	PUNCT	Comma	_	20	punct	_	_
22	response-time	response-time	NOUN	SG-NOM	Number=Sing	23	compound	_	_
23	analysis	analysis	NOUN	SG-NOM	Number=Sing	17	conj	_	SpaceAfter=No
24	,	,	PUNCT	Comma	_	17	punct	_	_
25	and	and	CCONJ	_	_	26	cc	_	_
26	processor-demand	processor-demand	ADJ	POS	Degree=Pos	17	conj	_	_
27	analysis	analysis	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 179
# text = In conjunction with this, the course also gives an account on how to derive the maximum resource requirement (worst-case execution time) of a task.
1	In	in	ADP	_	_	2	case	_	_
2	conjunction	conjunction	NOUN	SG-NOM	Number=Sing	9	obl	_	_
3	with	with	ADP	_	_	4	case	_	_
4	this	this	PRON	DEM-SG	Number=Sing|PronType=Dem	2	nmod	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	2	punct	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	course	course	NOUN	SG-NOM	Number=Sing	9	nsubj	_	_
8	also	also	ADV	_	_	9	advmod	_	_
9	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
10	an	an	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
11	account	account	NOUN	SG-NOM	Number=Sing	9	obj	_	_
12	on	on	ADP	_	_	15	mark	_	_
13	how	how	ADV	WH	PronType=Int	15	advmod	_	_
14	to	to	PART	_	_	15	mark	_	_
15	derive	derive	VERB	INF	VerbForm=Inf	9	advcl	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	19	det	_	_
17	maximum	maximum	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	resource	resource	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	requirement	requirement	NOUN	SG-NOM	Number=Sing	15	obj	_	_
20	(	(	PUNCT	LeftParenthesis	_	23	punct	_	SpaceAfter=No
21	worst-case	worst-case	ADJ	POS	Degree=Pos	23	amod	_	_
22	execution	execution	NOUN	SG-NOM	Number=Sing	23	compound	_	_
23	time	time	NOUN	SG-NOM	Number=Sing	19	appos	_	SpaceAfter=No
24	)	)	PUNCT	RightParenthesis	_	23	punct	_	_
25	of	of	ADP	_	_	27	case	_	_
26	a	a	DET	IND-SG	Definite=Ind|PronType=Art	27	det	_	_
27	task	task	NOUN	SG-NOM	Number=Sing	19	nmod	_	SpaceAfter=No
28	.	.	PUNCT	Period	_	9	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 180
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 181
# text = The course is organized as a series of lectures and a set of exercise sessions where the programming techniques and theories presented at the lectures are put into practice
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	organized	organize	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	as	as	ADP	_	_	7	case	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
7	series	series	NOUN	SG-NOM	Number=Sing	4	obl	_	_
8	of	of	ADP	_	_	9	case	_	_
9	lectures	lecture	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
12	set	set	NOUN	SG-NOM	Number=Sing	9	conj	_	_
13	of	of	ADP	_	_	15	case	_	_
14	exercise	exercise	ADJ	POS	Degree=Pos	15	amod	_	_
15	sessions	session	NOUN	PL-NOM	Number=Plur	12	nmod	_	_
16	where	where	ADV	WH-REL	PronType=Int	27	advmod	_	_
17	the	the	DET	DEF	Definite=Def|PronType=Art	19	det	_	_
18	programming	programm	ADJ	ING	Degree=Pos	19	amod	_	_
19	techniques	technique	NOUN	PL-NOM	Number=Plur	27	nsubj:pass	_	_
20	and	and	CCONJ	_	_	21	cc	_	_
21	theories	theory	NOUN	PL-NOM	Number=Plur	19	conj	_	_
22	presented	present	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	19	acl	_	_
23	at	at	ADP	_	_	25	case	_	_
24	the	the	DET	DEF	Definite=Def|PronType=Art	25	det	_	_
25	lectures	lecture	NOUN	PL-NOM	Number=Plur	22	obl	_	_
26	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	27	aux:pass	_	_
27	put	put	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	12	acl:relcl	_	_
28	into	into	ADP	_	_	29	case	_	_
29	practice	practice	NOUN	SG-NOM	Number=Sing	27	obl	_	SpacesAfter=\n

# sent_id = 182
# text = The course material is examined by means of a final written exam
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	ADJ	POS	Degree=Pos	3	amod	_	_
3	material	material	NOUN	SG-NOM	Number=Sing	5	nsubj:pass	_	_
4	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	examined	examine	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
6	by	by	ADP	_	_	7	case	_	_
7	means	means	NOUN	PL-NOM	Number=Plur	5	obl	_	_
8	of	of	ADP	_	_	12	case	_	_
9	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
10	final	final	ADJ	POS	Degree=Pos	12	amod	_	_
11	written	write	ADJ	PASS	Case=Nom	12	amod	_	_
12	exam	exam	NOUN	SG-NOM	Number=Sing	7	nmod	_	SpacesAfter=\n

# sent_id = 183
# text = In addition, there is a compulsory laboratory assignment in which the students should implement the software for an embedded real-time application running on a hardware system consisting of multiple computer nodes interconnected by a bus network
1	In	in	ADP	_	_	2	case	_	_
2	addition	addition	NOUN	SG-NOM	Number=Sing	9	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	there	there	PRON	EX	_	9	expl	_	_
5	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
7	compulsory	compulsory	ADJ	POS	Degree=Pos	8	amod	_	_
8	laboratory	laboratory	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	assignment	assignment	NOUN	SG-NOM	Number=Sing	0	root	_	_
10	in	in	ADP	_	_	11	case	_	_
11	which	which	PRON	WH-REL	PronType=Int	15	obl	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	students	student	NOUN	PL-NOM	Number=Plur	15	nsubj	_	_
14	should	should	AUX	PAST-AUX	VerbForm=Fin	15	aux	_	_
15	implement	implement	VERB	INF	VerbForm=Inf	9	acl	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
17	software	software	NOUN	SG-NOM	Number=Sing	15	obj	_	_
18	for	for	ADP	_	_	22	case	_	_
19	an	an	DET	IND-SG	Definite=Ind|PronType=Art	22	det	_	_
20	embedded	embed	ADJ	PASS	Degree=Pos	22	amod	_	_
21	real-time	real-time	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	application	application	NOUN	SG-NOM	Number=Sing	17	nmod	_	_
23	running	run	VERB	ING	Tense=Pres|VerbForm=Part	22	acl	_	_
24	on	on	ADP	_	_	27	case	_	_
25	a	a	DET	IND-SG	Definite=Ind|PronType=Art	27	det	_	_
26	hardware	hardware	ADJ	POS	Degree=Pos	27	amod	_	_
27	system	system	NOUN	SG-NOM	Number=Sing	23	obl	_	_
28	consisting	consist	VERB	ING	Tense=Pres|VerbForm=Part	27	acl	_	_
29	of	of	ADP	_	_	31	case	_	_
30	multiple	multiple	ADJ	POS	Degree=Pos	31	amod	_	_
31	computer	computer	NOUN	SG-NOM	Number=Sing	32	compound	_	_
32	nodes	node	NOUN	PL-NOM	Number=Plur	28	obj	_	_
33	interconnected	interconnect	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	32	acl	_	_
34	by	by	ADP	_	_	37	case	_	_
35	a	a	DET	IND-SG	Definite=Ind|PronType=Art	37	det	_	_
36	bus	bus	NOUN	SG-NOM	Number=Sing	37	compound	_	_
37	network	network	NOUN	SG-NOM	Number=Sing	33	obl	_	SpacesAfter=\n

# sent_id = 184
# text = Apart from the programming of cooperating concurrent tasks with strict timing constraints, the laboratory assignment also encompasses low-level programming of hardware devices such as timers and network controllers
1	Apart	apart	ADV	_	_	4	advmod	_	_
2	from	from	ADP	_	_	4	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
4	programming	programming	NOUN	SG-NOM	Number=Sing	29	obl	_	_
5	of	of	ADP	_	_	6	mark	_	_
6	cooperating	cooperate	VERB	ING	Tense=Pres|VerbForm=Part	4	acl	_	_
7	concurrent	concurrent	ADJ	POS	Degree=Pos	8	amod	_	_
8	tasks	task	NOUN	PL-NOM	Number=Plur	6	obj	_	_
9	with	with	ADP	_	_	10	case	_	_
10	strict	strict	NOUN	SG-NOM	Number=Sing	6	obl	_	_
11	timing	time	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	_
12	constraints	constraint	NOUN	PL-NOM	Number=Plur	11	obj	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	4	punct	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	16	det	_	_
15	laboratory	laboratory	ADJ	POS	Degree=Pos	16	amod	_	_
16	assignment	assignment	NOUN	SG-NOM	Number=Sing	29	compound	_	_
17	also	also	ADV	_	_	19	advmod	_	_
18	encompasses	encompass	NOUN	PL-NOM	Number=Plur	19	compound	_	_
19	low-level	low-level	NOUN	SG-NOM	Number=Sing	20	nsubj	_	_
20	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	16	acl	_	_
21	of	of	ADP	_	_	23	case	_	_
22	hardware	hardware	NOUN	SG-NOM	Number=Sing	23	compound	_	_
23	devices	device	NOUN	PL-NOM	Number=Plur	20	obl	_	_
24	such	such	ADJ	ADJ	Case=Nom	23	amod	_	_
25	as	as	ADP	_	_	26	case	_	_
26	timers	timer	NOUN	PL-NOM	Number=Plur	24	nmod	_	_
27	and	and	CCONJ	_	_	28	cc	_	_
28	network	network	NOUN	SG-NOM	Number=Sing	26	conj	_	_
29	controllers	controller	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 185
# text = Course specific prerequisites
1	Course	course	ADV	_	_	2	advmod	_	_
2	specific	specific	ADJ	POS	Degree=Pos	3	amod	_	_
3	prerequisites	prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 186
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 187
# text = The topic of the course is the theory and practice of optimization problems over discrete structures, and has strong connections to Optimization Theory (linear programming), Computer Science (algorithms and complexity), and Operational Research.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	topic	topic	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	theory	theory	NOUN	SG-NOM	Number=Sing	0	root	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	practice	practice	NOUN	SG-NOM	Number=Sing	8	conj	_	_
11	of	of	ADP	_	_	13	case	_	_
12	optimization	optimization	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	problems	problem	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
14	over	over	ADP	_	_	16	case	_	_
15	discrete	discrete	NOUN	SG-NOM	Number=Sing	16	compound	_	_
16	structures	structure	NOUN	PL-NOM	Number=Plur	13	nmod	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	8	punct	_	_
18	and	and	CCONJ	_	_	19	cc	_	_
19	has	have	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	conj	_	_
20	strong	strong	ADJ	POS	Degree=Pos	21	amod	_	_
21	connections	connection	NOUN	PL-NOM	Number=Plur	19	obj	_	_
22	to	to	ADP	_	_	23	case	_	_
23	Optimization	Optimization	PROPN	SG-NOM	Number=Sing	19	obl	_	_
24	Theory	theory	PROPN	SG-NOM	Number=Sing	23	flat	_	_
25	(	(	PUNCT	LeftParenthesis	_	27	punct	_	SpaceAfter=No
26	linear	linear	ADP	_	_	27	mark	_	_
27	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	19	advcl	_	SpaceAfter=No
28	)	)	PUNCT	RightParenthesis	_	27	punct	_	SpaceAfter=No
29	,	,	PUNCT	Comma	_	27	punct	_	_
30	Computer	computer	NOUN	SG-NOM	Number=Sing	31	compound	_	_
31	Science	science	NOUN	SG-NOM	Number=Sing	27	obj	_	_
32	(	(	PUNCT	LeftParenthesis	_	33	punct	_	SpaceAfter=No
33	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	31	appos	_	_
34	and	and	CCONJ	_	_	35	cc	_	_
35	complexity	complexity	NOUN	SG-NOM	Number=Sing	33	conj	_	SpaceAfter=No
36	)	)	PUNCT	RightParenthesis	_	33	punct	_	SpaceAfter=No
37	,	,	PUNCT	Comma	_	33	punct	_	_
38	and	and	CCONJ	_	_	40	cc	_	_
39	Operational	Operational	ADJ	POS	Degree=Pos	40	amod	_	_
40	Research	research	NOUN	SG-NOM	Number=Sing	33	conj	_	SpaceAfter=No
41	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n

# sent_id = 188
# text = Problems of this kind arise in many different contexts including transportation, telecommunications, industrial planning, finance, bioinformatics, hardware design and cryptology.
1	Problems	problem	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	of	of	ADP	_	_	5	case	_	_
3	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	5	det	_	_
4	kind	kind	ADJ	POS	Degree=Pos	5	amod	_	_
5	arise	arise	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
6	in	in	ADP	_	_	9	case	_	_
7	many	many	ADJ	POS	Degree=Pos	9	amod	_	_
8	different	different	ADJ	POS	Degree=Pos	9	amod	_	_
9	contexts	context	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
10	including	include	VERB	ING	Tense=Pres|VerbForm=Part	9	acl	_	_
11	transportation	transportation	NOUN	SG-NOM	Number=Sing	10	obj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	telecommunications	telecommunication	NOUN	PL-NOM	Number=Plur	11	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	11	punct	_	_
15	industrial	industrial	ADJ	POS	Degree=Pos	16	amod	_	_
16	planning	planning	NOUN	SG-NOM	Number=Sing	11	conj	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	finance	finance	NOUN	SG-NOM	Number=Sing	11	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	11	punct	_	_
20	bioinformatics	bioinformatics	NOUN	PL-NOM	Number=Plur	11	conj	_	SpaceAfter=No
21	,	,	PUNCT	Comma	_	11	punct	_	_
22	hardware	hardware	ADJ	POS	Degree=Pos	23	amod	_	_
23	design	design	NOUN	SG-NOM	Number=Sing	11	conj	_	_
24	and	and	CCONJ	_	_	25	cc	_	_
25	cryptology	cryptology	NOUN	SG-NOM	Number=Sing	11	conj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 189
# text = A characteristic property of these problems are that they are difficult to solve.
1	A	a	DET	IND-SG	Definite=Ind|PronType=Art	3	det	_	_
2	characteristic	characteristic	ADJ	POS	Degree=Pos	3	amod	_	_
3	property	property	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
4	of	of	ADP	_	_	6	case	_	_
5	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	6	det	_	_
6	problems	problem	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
7	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	11	cop	_	_
8	that	that	SCONJ	_	_	11	mark	_	_
9	they	they	PRON	PERS-PL-NOM	Case=Nom|Number=Plur|Person=3|PronType=Prs	11	nsubj	_	_
10	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	11	cop	_	_
11	difficult	difficult	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	PART	_	_	13	mark	_	_
13	solve	solve	VERB	INF	VerbForm=Inf	11	acl	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	11	punct	_	SpacesAfter=\s\n

# sent_id = 190
# text = The course intends to develop the skill of modelling real problems and to use mathematical and algorithmic tools to solve them, optimally or heuristically.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	intends	intend	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	to	to	PART	_	_	5	mark	_	_
5	develop	develop	VERB	INF	VerbForm=Inf	3	xcomp	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	skill	skill	NOUN	SG-NOM	Number=Sing	5	obj	_	_
8	of	of	ADP	_	_	9	mark	_	_
9	modelling	modelle	VERB	ING	Tense=Pres|VerbForm=Part	7	acl	_	_
10	real	real	ADJ	POS	Degree=Pos	11	amod	_	_
11	problems	problem	NOUN	PL-NOM	Number=Plur	9	obj	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	to	to	PART	_	_	14	mark	_	_
14	use	use	VERB	INF	VerbForm=Inf	9	conj	_	_
15	mathematical	mathematical	ADJ	POS	Degree=Pos	18	amod	_	_
16	and	and	CCONJ	_	_	18	cc	_	_
17	algorithmic	algorithmic	ADJ	POS	Degree=Pos	18	amod	_	_
18	tools	tool	NOUN	PL-NOM	Number=Plur	14	obj	_	_
19	to	to	PART	_	_	20	mark	_	_
20	solve	solve	VERB	INF	VerbForm=Inf	14	advcl	_	_
21	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	20	obj	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	23	punct	_	_
23	optimally	optimally	ADV	_	_	20	advmod	_	_
24	or	or	CCONJ	_	_	25	cc	_	_
25	heuristically	heuristically	ADV	_	_	20	conj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 191
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\n

# sent_id = 192
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 193
# text = identify optimization problems in various application domains,
1	identify	identify	ADJ	POS	Degree=Pos	3	amod	_	_
2	optimization	optimization	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	problems	problem	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	in	in	ADP	_	_	7	case	_	_
5	various	various	ADJ	POS	Degree=Pos	7	amod	_	_
6	application	application	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	domains	domain	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	3	punct	_	SpacesAfter=\n

# sent_id = 194
# text = formulate them in exact mathematical models that capture the essentials of the real problems but are still manageable by computational methods,
1	formulate	formulate	VERB	IMP	VerbForm=Inf	0	root	_	_
2	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	1	obj	_	_
3	in	in	ADP	_	_	6	case	_	_
4	exact	exact	ADJ	POS	Degree=Pos	6	amod	_	_
5	mathematical	mathematical	ADJ	POS	Degree=Pos	6	amod	_	_
6	models	model	NOUN	PL-NOM	Number=Plur	1	obl	_	_
7	that	that	PRON	REL	PronType=Rel	8	nsubj	_	_
8	capture	capture	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	6	acl:relcl	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	essentials	essential	NOUN	PL-NOM	Number=Plur	8	obj	_	_
11	of	of	ADP	_	_	14	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
13	real	real	ADJ	POS	Degree=Pos	14	amod	_	_
14	problems	problem	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
15	but	but	CCONJ	_	_	18	cc	_	_
16	are	be	AUX	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	18	cop	_	_
17	still	still	ADV	_	_	18	advmod	_	_
18	manageable	manageable	ADJ	POS	Degree=Pos	1	conj	_	_
19	by	by	ADP	_	_	21	case	_	_
20	computational	computational	ADJ	POS	Degree=Pos	21	amod	_	_
21	methods	method	NOUN	PL-NOM	Number=Plur	18	nmod	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	1	punct	_	SpacesAfter=\n

# sent_id = 195
# text = assess which problem class a given problem belongs to,
1	assess	assess	VERB	IMP	VerbForm=Inf	0	root	_	_
2	which	which	PRON	WH-REL	PronType=Int	6	nsubj	_	_
3	problem	probley	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	class	class	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	given	given	VERB	PERF	Tense=Past|VerbForm=Part	1	acl:relcl	_	_
7	problem	problem	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	belongs	belong	NOUN	PL-NOM	Number=Plur	6	obj	_	_
9	to	to	PART	_	_	6	case	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	1	punct	_	SpacesAfter=\n

# sent_id = 196
# text = apply linear programming, related generic methods, and additional heuristics, to computational problems,
1	apply	apply	VERB	IMP	Mood=Imp|VerbForm=Fin	0	root	_	_
2	linear	linear	NOUN	SG-NOM	Number=Sing	1	obj	_	_
3	programming	programming	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	1	punct	_	_
5	related	relate	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	1	conj	_	_
6	generic	generic	ADJ	POS	Degree=Pos	7	amod	_	_
7	methods	method	NOUN	PL-NOM	Number=Plur	5	obj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	5	punct	_	_
9	and	and	CCONJ	_	_	11	cc	_	_
10	additional	additional	ADJ	POS	Degree=Pos	11	amod	_	_
11	heuristics	heuristics	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	15	punct	_	_
13	to	to	ADP	_	_	15	case	_	_
14	computational	computational	ADJ	POS	Degree=Pos	15	amod	_	_
15	problems	problem	NOUN	PL-NOM	Number=Plur	11	nmod	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	1	punct	_	SpacesAfter=\n

# sent_id = 197
# text = explain the geometry of linear programming,
1	explain	explain	VERB	INF	VerbForm=Inf	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	geometry	geometry	NOUN	SG-NOM	Number=Sing	1	obj	_	_
4	of	of	ADP	_	_	5	case	_	_
5	linear	linear	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
6	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	1	punct	_	SpacesAfter=\n

# sent_id = 198
# text = dualize optimization problems and use the dual forms to obtain bounds,
1	dualize	dualize	ADJ	POS	Degree=Pos	3	amod	_	_
2	optimization	optimization	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	problems	problem	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	use	use	VERB	INF	VerbForm=Inf	3	conj	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
7	dual	dual	ADJ	POS	Degree=Pos	8	amod	_	_
8	forms	form	NOUN	PL-NOM	Number=Plur	5	obj	_	_
9	to	to	PART	_	_	10	mark	_	_
10	obtain	obtain	VERB	INF	VerbForm=Inf	5	advcl	_	_
11	bounds	bound	NOUN	PL-NOM	Number=Plur	10	obj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	3	punct	_	SpacesAfter=\n

# sent_id = 199
# text = work with the scientific literature in the field.
1	work	work	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	with	with	ADP	_	_	5	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
4	scientific	scientific	ADJ	POS	Degree=Pos	5	amod	_	_
5	literature	literature	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
6	in	in	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	field	field	NOUN	SG-NOM	Number=Sing	5	nmod	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 200
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 201
# text = modelling, linear programs and integer linear programs, polytopes, duality in optimization, branch-and-bound and other heuristics, some special graph algorithms
1	modelling	modelle	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	1	punct	_	_
3	linear	linear	ADJ	POS	Degree=Pos	4	amod	_	_
4	programs	program	NOUN	PL-NOM	Number=Plur	1	obj	_	_
5	and	and	CCONJ	_	_	8	cc	_	_
6	integer	integer	ADJ	POS	Degree=Pos	8	amod	_	_
7	linear	linear	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	programs	program	NOUN	PL-NOM	Number=Plur	4	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	1	punct	_	_
10	polytopes	polytope	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	10	punct	_	_
12	duality	duality	NOUN	SG-NOM	Number=Sing	1	conj	_	_
13	in	in	ADP	_	_	14	case	_	_
14	optimization	optimization	NOUN	SG-NOM	Number=Sing	12	nmod	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	16	punct	_	_
16	branch-and-bound	branch-and-bound	ADJ	POS	Degree=Pos	1	conj	_	_
17	and	and	CCONJ	_	_	19	cc	_	_
18	other	other	ADJ	POS	Degree=Pos	19	amod	_	_
19	heuristics	heuristics	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	1	punct	_	_
21	some	some	DET	IND	_	23	det	_	_
22	special	special	ADJ	POS	Degree=Pos	23	amod	_	_
23	graph	graph	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	1	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 202
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 203
# text = Lectures and homework assignments.
1	Lectures	Lecture	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	4	cc	_	_
3	homework	homework	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	assignments	assignment	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 204
# text = Literature
1	Literature	literature	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 205
# text = See separate literature list.
1	See	see	NUM	CARD-PL	NumType=Card	4	discourse	_	_
2	separate	separate	ADJ	POS	Degree=Pos	4	amod	_	_
3	literature	literature	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	list	list	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 206
# text = Eligibility
1	Eligibility	Eligibility	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 207
# text = General entry requirements for bachelor's level (first cycle)
1	General	general	ADJ	POS	Degree=Pos	3	amod	_	_
2	entry	entry	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	for	for	ADP	_	_	7	case	_	_
5	bachelor	bachelor	NOUN	SG-NOM	Number=Sing	7	nmod	_	SpaceAfter=No
6	's	's	PART	GEN	_	5	case	_	_
7	level	level	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
8	(	(	PUNCT	LeftParenthesis	_	10	punct	_	SpaceAfter=No
9	first	first	ADJ	ORD	Degree=Pos|NumType=Ord	10	amod	_	_
10	cycle	cycle	NOUN	SG-NOM	Number=Sing	7	appos	_	SpaceAfter=No
11	)	)	PUNCT	RightParenthesis	_	10	punct	_	SpacesAfter=\n

# sent_id = 208
# text = Specific entry requirements
1	Specific	specific	ADJ	POS	Degree=Pos	2	amod	_	_
2	entry	entry	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 209
# text = The same as for the programme that owns the course.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	same	same	ADJ	POS	Degree=Pos	0	root	_	_
3	as	as	ADP	_	_	6	case	_	_
4	for	for	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	programme	programme	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
7	that	that	PRON	REL	PronType=Rel	8	nsubj	_	_
8	owns	own	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	acl:relcl	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	course	course	NOUN	SG-NOM	Number=Sing	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 210
# text = Aim
1	Aim	ae	PRON	PERS-P3SG-ACC	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 211
# text = Computer programming is a basic skill needed in both studies and professional life.
1	Computer	computer	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
2	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	1	acl	_	_
3	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	basic	basic	ADJ	POS	Degree=Pos	6	amod	_	_
6	skill	skill	NOUN	SG-NOM	Number=Sing	0	root	_	_
7	needed	need	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	6	acl	_	_
8	in	in	ADP	_	_	10	case	_	_
9	both	both	DET	TOT-PL	_	10	det	_	_
10	studies	study	NOUN	PL-NOM	Number=Plur	7	obl	_	_
11	and	and	CCONJ	_	_	13	cc	_	_
12	professional	professional	ADJ	POS	Degree=Pos	13	amod	_	_
13	life	life	NOUN	SG-NOM	Number=Sing	10	conj	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n

# sent_id = 212
# text = This course gives the basic skills that the participants can both accomplish programming tasks typical of science and engineering tasks and understand the fundamental principles of computers and programming.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	basic	basic	ADJ	POS	Degree=Pos	6	amod	_	_
6	skills	skill	NOUN	PL-NOM	Number=Plur	3	obj	_	_
7	that	that	SCONJ	_	_	12	mark	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
9	participants	participant	NOUN	PL-NOM	Number=Plur	12	nsubj	_	_
10	can	can	AUX	PRES-AUX	VerbForm=Fin	12	aux	_	_
11	both	both	CCONJ	_	_	12	cc	_	_
12	accomplish	accomplish	VERB	INF	VerbForm=Inf	3	ccomp	_	_
13	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	12	conj	_	_
14	tasks	task	NOUN	PL-NOM	Number=Plur	13	obj	_	_
15	typical	typical	ADJ	POS	Degree=Pos	13	xcomp	_	_
16	of	of	ADP	_	_	17	case	_	_
17	science	science	NOUN	SG-NOM	Number=Sing	15	nmod	_	_
18	and	and	CCONJ	_	_	19	cc	_	_
19	engineering	engineer	VERB	ING	Tense=Pres|VerbForm=Part	17	conj	_	_
20	tasks	task	NOUN	PL-NOM	Number=Plur	19	obj	_	_
21	and	and	CCONJ	_	_	22	cc	_	_
22	understand	understand	VERB	INF	VerbForm=Inf	3	conj	_	_
23	the	the	DET	DEF	Definite=Def|PronType=Art	25	det	_	_
24	fundamental	fundamental	ADJ	POS	Degree=Pos	25	amod	_	_
25	principles	principle	NOUN	PL-NOM	Number=Plur	22	obj	_	_
26	of	of	ADP	_	_	27	case	_	_
27	computers	computer	NOUN	PL-NOM	Number=Plur	25	nmod	_	_
28	and	and	CCONJ	_	_	29	cc	_	_
29	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	27	conj	_	SpaceAfter=No
30	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 213
# text = Learning outcomes
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	outcomes	outcomes	ADV	_	_	1	advmod	_	SpacesAfter=\s\n

# sent_id = 214
# text = (after completion of the course the student should be able to)
1	(	(	PUNCT	LeftParenthesis	_	3	punct	_	SpaceAfter=No
2	after	after	ADP	_	_	3	case	_	_
3	completion	completion	NOUN	SG-NOM	Number=Sing	11	obl	_	_
4	of	of	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	student	student	NOUN	SG-NOM	Number=Sing	11	nsubj	_	_
9	should	should	AUX	PAST-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	cop	_	_
11	able	able	ADJ	POS	Degree=Pos	0	root	_	_
12	to	to	ADP	_	_	11	case	_	SpaceAfter=No
13	)	)	PUNCT	RightParenthesis	_	11	punct	_	SpacesAfter=\n

# sent_id = 215
# text = Knowledge and understanding
1	Knowledge	knowledge	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	understanding	understande	VERB	ING	Case=Nom	1	conj	_	SpacesAfter=\n

# sent_id = 216
# text = Express mathematical formulas as programming language expressions and algorithms
1	Express	express	VERB	IMP	VerbForm=Inf	0	root	_	_
2	mathematical	mathematical	ADJ	POS	Degree=Pos	3	amod	_	_
3	formulas	formula	NOUN	SG-NOM	Number=Sing	1	obj	_	_
4	as	as	ADP	_	_	5	mark	_	_
5	programming	programm	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	_
6	language	language	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	expressions	expression	NOUN	PL-NOM	Number=Plur	5	obj	_	_
8	and	and	CCONJ	_	_	9	cc	_	_
9	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	1	conj	_	SpacesAfter=\n

# sent_id = 217
# text = Structure large programs into manageable and reusable units by the use of concepts such as modules, classes, and functions
1	Structure	structure	NOUN	SG-NOM	Number=Sing	3	compound	_	_
2	large	large	ADJ	POS	Degree=Pos	3	amod	_	_
3	programs	program	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	into	into	ADP	_	_	8	case	_	_
5	manageable	manageable	ADJ	POS	Degree=Pos	8	amod	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	reusable	reusable	ADJ	POS	Degree=Pos	5	conj	_	_
8	units	unit	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
9	by	by	ADP	_	_	11	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	use	use	NOUN	SG-NOM	Number=Sing	3	nmod	_	_
12	of	of	ADP	_	_	13	case	_	_
13	concepts	concepts	NOUN	PL-NOM	Number=Plur	11	nmod	_	_
14	such	such	ADJ	ADJ	_	13	amod	_	_
15	as	as	ADP	_	_	16	case	_	_
16	modules	module	NOUN	PL-NOM	Number=Plur	14	nmod	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	18	punct	_	_
18	classes	class	NOUN	PL-NOM	Number=Plur	13	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	3	punct	_	_
20	and	and	CCONJ	_	_	21	cc	_	_
21	functions	function	NOUN	PL-NOM	Number=Plur	3	conj	_	SpacesAfter=\n

# sent_id = 218
# text = Search and find relevant program libraries and use them in adequate ways
1	Search	search	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	find	find	VERB	INF	VerbForm=Inf	1	conj	_	_
4	relevant	relevant	ADJ	POS	Degree=Pos	6	amod	_	_
5	program	program	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	libraries	library	NOUN	PL-NOM	Number=Plur	3	obj	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	use	use	VERB	INF	VerbForm=Inf	3	conj	_	_
9	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	8	obj	_	_
10	in	in	ADP	_	_	12	case	_	_
11	adequate	adequate	ADJ	POS	Degree=Pos	12	amod	_	_
12	ways	way	NOUN	PL-NOM	Number=Plur	8	obl	_	SpacesAfter=\n

# sent_id = 219
# text = Explain the relations between hardware, operating system, and user programs
1	Explain	explain	PROPN	SG-NOM	Number=Sing	0	root	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	relations	relation	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
4	between	between	ADP	_	_	5	case	_	_
5	hardware	hardware	NOUN	SG-NOM	Number=Sing	3	nmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	7	punct	_	_
7	operating	operat	VERB	ING	Tense=Pres|VerbForm=Part	3	conj	_	_
8	system	system	NOUN	SG-NOM	Number=Sing	7	obj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	7	punct	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	user	user	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	programs	program	NOUN	PL-NOM	Number=Plur	3	conj	_	SpacesAfter=\n

# sent_id = 220
# text = Use programming for basic data analysis involving large files
1	Use	use	ADP	_	_	2	mark	_	_
2	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	for	for	ADP	_	_	6	case	_	_
4	basic	basic	ADJ	POS	Degree=Pos	5	amod	_	_
5	data	data	NOUN	PL-NOM	Number=Sing	6	compound	_	_
6	analysis	analysis	NOUN	SG-NOM	Number=Sing	2	obl	_	_
7	involving	involve	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
8	large	large	ADJ	POS	Degree=Pos	9	amod	_	_
9	files	file	NOUN	PL-NOM	Number=Plur	7	obj	_	SpacesAfter=\n\n

# newpar
# sent_id = 221
# text = Competence and skills
1	Competence	competence	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	skills	skill	NOUN	PL-NOM	Number=Plur	1	conj	_	SpacesAfter=\n

# sent_id = 222
# text = Write programs that manipulate numeric and textual data to perform standard programming tasks
1	Write	write	ADJ	POS	Degree=Pos	2	amod	_	_
2	programs	program	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	that	that	PRON	REL	PronType=Rel	4	nsubj	_	_
4	manipulate	manipulate	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	2	acl:relcl	_	_
5	numeric	numeric	ADJ	POS	Degree=Pos	8	amod	_	_
6	and	and	CCONJ	_	_	8	cc	_	_
7	textual	textual	ADJ	POS	Degree=Pos	8	amod	_	_
8	data	data	NOUN	PL-NOM	Number=Sing	4	obj	_	_
9	to	to	PART	_	_	10	mark	_	_
10	perform	perform	VERB	INF	VerbForm=Inf	8	acl	_	_
11	standard	standard	ADJ	POS	Degree=Pos	12	amod	_	_
12	programming	program	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	tasks	task	NOUN	PL-NOM	Number=Plur	10	obj	_	SpacesAfter=\n

# sent_id = 223
# text = Build interactive programs with both text-based and graphical user interfaces
1	Build	build	AUX	PAST-AUX	VerbForm=Fin	0	root	_	_
2	interactive	interactive	ADJ	POS	Degree=Pos	3	amod	_	_
3	programs	program	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	with	with	ADP	_	_	10	case	_	_
5	both	both	CCONJ	_	_	6	cc	_	_
6	text-based	text-base	ADJ	POS	Degree=Pos	10	amod	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	graphical	graphical	ADJ	POS	Degree=Pos	6	conj	_	_
9	user	user	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	interfaces	interface	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpacesAfter=\n

# sent_id = 224
# text = Make programs that read, transform, and generate files in the file system
1	Make	make	ADP	_	_	2	case	_	_
2	programs	program	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	that	that	PRON	REL	PronType=Rel	4	nsubj	_	_
4	read	read	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	2	acl:relcl	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	6	punct	_	_
6	transform	transform	NOUN	SG-NOM	Number=Sing	4	obj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	and	and	CCONJ	_	_	10	cc	_	_
9	generate	generate	ADJ	POS	Degree=Pos	10	amod	_	_
10	files	file	NOUN	PL-NOM	Number=Plur	6	conj	_	_
11	in	in	ADP	_	_	14	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
13	file	file	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	system	system	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpacesAfter=\n

# sent_id = 225
# text = Use standard libraries and follow best programming practices
1	Use	use	ADP	_	_	3	case	_	_
2	standard	standard	ADJ	POS	Degree=Pos	3	amod	_	_
3	libraries	library	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	follow	follow	VERB	INF	VerbForm=Inf	3	conj	_	_
6	best	good	ADJ	SPL	Degree=Sup	7	amod	_	_
7	programming	programming	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	practices	practice	NOUN	PL-NOM	Number=Plur	5	obj	_	SpacesAfter=\n

# sent_id = 226
# text = Test programs by methods such as unit, regression, and property-based testing
1	Test	t	ADJ	SPL	Degree=Sup	2	amod	_	_
2	programs	program	NOUN	PL-NOM	Number=Plur	13	nsubj	_	_
3	by	by	ADP	_	_	4	case	_	_
4	methods	method	NOUN	PL-NOM	Number=Plur	2	nmod	_	_
5	such	such	ADJ	ADJ	_	4	amod	_	_
6	as	as	ADP	_	_	7	case	_	_
7	unit	unit	NOUN	SG-NOM	Number=Sing	5	nmod	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	4	punct	_	_
9	regression	regression	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	property-based	property-base	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	4	conj	_	_
13	testing	tes	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpacesAfter=\n

# sent_id = 227
# text = Use programming tools such as code editors and revision control systems
1	Use	use	SCONJ	_	_	2	mark	_	_
2	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	tools	tool	NOUN	PL-NOM	Number=Plur	2	obj	_	_
4	such	such	ADJ	ADJ	_	3	amod	_	_
5	as	as	ADP	_	_	11	case	_	_
6	code	code	NOUN	SG-NOM	Number=Sing	11	compound	_	_
7	editors	editor	NOUN	PL-NOM	Number=Plur	11	compound	_	_
8	and	and	CCONJ	_	_	9	cc	_	_
9	revision	revision	NOUN	SG-NOM	Number=Sing	7	conj	_	_
10	control	control	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	systems	system	NOUN	PL-NOM	Number=Plur	4	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 228
# text = Judgement and approach
1	Judgement	Judgement	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	approach	approach	NOUN	SG-NOM	Number=Sing	1	conj	_	SpacesAfter=\n

# sent_id = 229
# text = Assess the difficulty and resources needed for typical programming tasks
1	Assess	Assess	SCONJ	_	_	6	mark	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	difficulty	difficulty	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	resources	resource	NOUN	PL-NOM	Number=Plur	3	conj	_	_
6	needed	need	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
7	for	for	ADP	_	_	10	case	_	_
8	typical	typical	ADJ	POS	Degree=Pos	9	amod	_	_
9	programming	programming	NOUN	SG-NOM	Number=Sing	10	compound	_	_
10	tasks	task	NOUN	PL-NOM	Number=Plur	6	obl	_	SpacesAfter=\n

# sent_id = 230
# text = Analyse code written by others and find errors and possibilities for improvement
1	Analyse	Analyse	DET	DEM-PL	Number=Plur|PronType=Dem	2	det	_	_
2	code	code	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	written	write	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	acl	_	_
4	by	by	ADP	_	_	5	case	_	_
5	others	other	PRON	IND-PL-NOM	Case=Nom	3	obl	_	_
6	and	and	CCONJ	_	_	8	cc	_	_
7	find	find	ADJ	POS	Degree=Pos	8	amod	_	_
8	errors	error	NOUN	PL-NOM	Number=Plur	5	conj	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	possibilities	possibility	NOUN	PL-NOM	Number=Plur	2	conj	_	_
11	for	for	ADP	_	_	12	case	_	_
12	improvement	improvement	NOUN	SG-NOM	Number=Sing	10	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 231
# text = Content
1	Content	content	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 232
# text = The course is a first introduction to programming by using a general-purpose programming language.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
3	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	first	first	ADJ	ORD	Degree=Pos|NumType=Ord	6	amod	_	_
6	introduction	introduction	NOUN	SG-NOM	Number=Sing	0	root	_	_
7	to	to	ADP	_	_	8	mark	_	_
8	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	6	acl	_	_
9	by	by	ADP	_	_	10	mark	_	_
10	using	use	VERB	ING	Tense=Pres|VerbForm=Part	8	advcl	_	_
11	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
12	general-purpose	general-purpose	ADJ	POS	Degree=Pos	13	amod	_	_
13	programming	programming	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	language	language	NOUN	SG-NOM	Number=Sing	10	obj	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n

# sent_id = 233
# text = It gives a comprehensive knowledge of the language, enabling the student to write code for a wide variety of tasks and to read and reuse code written by other programmers.
1	It	it	PRON	PERS-SG	_	2	nsubj	_	_
2	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	a	a	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
4	comprehensive	comprehensive	ADJ	POS	Degree=Pos	5	amod	_	_
5	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	2	obj	_	_
6	of	of	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	language	language	NOUN	SG-NOM	Number=Sing	5	nmod	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	10	punct	_	_
10	enabling	enable	VERB	ING	Tense=Pres|VerbForm=Part	2	advcl	_	_
11	the	the	DET	DEF	Definite=Def|PronType=Art	12	det	_	_
12	student	student	NOUN	SG-NOM	Number=Sing	10	obj	_	_
13	to	to	PART	_	_	14	mark	_	_
14	write	write	VERB	INF	VerbForm=Inf	10	xcomp	_	_
15	code	code	NOUN	SG-NOM	Number=Sing	14	obj	_	_
16	for	for	ADP	_	_	19	case	_	_
17	a	a	DET	IND-SG	Definite=Ind|PronType=Art	19	det	_	_
18	wide	wide	ADJ	POS	Degree=Pos	19	amod	_	_
19	variety	variety	NOUN	SG-NOM	Number=Sing	15	nmod	_	_
20	of	of	ADP	_	_	21	case	_	_
21	tasks	task	NOUN	PL-NOM	Number=Plur	19	nmod	_	_
22	and	and	CCONJ	_	_	24	cc	_	_
23	to	to	PART	_	_	24	mark	_	_
24	read	read	VERB	INF	VerbForm=Inf	19	conj	_	_
25	and	and	CCONJ	_	_	26	cc	_	_
26	reuse	reuse	VERB	INF	VerbForm=Inf	24	conj	_	_
27	code	code	NOUN	SG-NOM	Number=Sing	26	obj	_	_
28	written	write	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	27	acl	_	_
29	by	by	ADP	_	_	31	case	_	_
30	other	other	ADJ	POS	Degree=Pos	31	amod	_	_
31	programmers	programmer	NOUN	PL-NOM	Number=Plur	28	obl	_	SpaceAfter=No
32	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 234
# text = In parallel to learning the language, the student will be introduced to the basic concepts of computers and programming.
1	In	in	ADP	_	_	2	case	_	_
2	parallel	parallel	NOUN	SG-NOM	Number=Sing	12	obl	_	_
3	to	to	ADP	_	_	4	mark	_	_
4	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	language	language	NOUN	SG-NOM	Number=Sing	4	obj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	2	punct	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
9	student	student	NOUN	SG-NOM	Number=Sing	12	nsubj:pass	_	_
10	will	will	AUX	PRES-AUX	VerbForm=Fin	12	aux	_	_
11	be	be	AUX	INF	VerbForm=Inf	12	aux:pass	_	_
12	introduced	introduce	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
13	to	to	ADP	_	_	16	case	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	16	det	_	_
15	basic	basic	ADJ	POS	Degree=Pos	16	amod	_	_
16	concepts	concept	NOUN	PL-NOM	Number=Plur	12	obl	_	_
17	of	of	ADP	_	_	18	case	_	_
18	computers	computer	NOUN	PL-NOM	Number=Plur	16	nmod	_	_
19	and	and	CCONJ	_	_	20	cc	_	_
20	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	12	conj	_	SpaceAfter=No
21	.	.	PUNCT	Period	_	12	punct	_	SpacesAfter=\n

# sent_id = 235
# text = These concepts include:
1	These	this	DET	DEM-PL	Number=Plur|PronType=Dem	3	det	_	_
2	concepts	concepts	NOUN	PL-NOM	Number=Plur	3	compound	_	_
3	include	include	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n

# sent_id = 236
# text = Datatypes and their binary representations in the computer
1	Datatypes	Datatype	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	5	cc	_	_
3	their	they	PRON	P3PL-GEN	_	5	nmod:poss	_	_
4	binary	binary	ADJ	POS	Degree=Pos	5	amod	_	_
5	representations	representation	NOUN	PL-NOM	Number=Plur	1	conj	_	_
6	in	in	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	computer	computer	NOUN	SG-NOM	Number=Sing	5	nmod	_	SpacesAfter=\n

# sent_id = 237
# text = The relation between source code, compiler, and the machine
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	relation	relation	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	between	between	ADP	_	_	5	case	_	_
4	source	source	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	code	code	NOUN	SG-NOM	Number=Sing	2	nmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	compiler	compiler	NOUN	SG-NOM	Number=Sing	5	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	7	punct	_	_
9	and	and	CCONJ	_	_	11	cc	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	machine	machine	NOUN	SG-NOM	Number=Sing	5	conj	_	SpacesAfter=\n

# sent_id = 238
# text = The syntactic structure of expressions, statements, functions, classes, modules, etc
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	syntactic	syntactic	ADJ	POS	Degree=Pos	3	amod	_	_
3	structure	structure	NOUN	SG-NOM	Number=Sing	0	root	_	_
4	of	of	ADP	_	_	5	case	_	_
5	expressions	expression	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	7	punct	_	_
7	statements	statement	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	9	punct	_	_
9	functions	function	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	11	punct	_	_
11	classes	class	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	13	punct	_	_
13	modules	module	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	15	punct	_	_
15	etc	etc	X	NOM	_	5	conj	_	SpacesAfter=\n

# sent_id = 239
# text = The basics of algorithmic design by the use of iteration, recursion, decomposition to functions, and top-down vs. bottom-up
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	basics	basics	NOUN	PL-NOM	Number=Plur	22	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	algorithmic	algorithmic	ADJ	POS	Degree=Pos	5	amod	_	_
5	design	design	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	by	by	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	use	use	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
9	of	of	ADP	_	_	10	case	_	_
10	iteration	iteration	NOUN	SG-NOM	Number=Sing	8	nmod	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	10	punct	_	_
12	recursion	recursion	NOUN	SG-NOM	Number=Sing	10	conj	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	12	punct	_	_
14	decomposition	decomposition	NOUN	SG-NOM	Number=Sing	10	conj	_	_
15	to	to	ADP	_	_	16	case	_	_
16	functions	function	NOUN	PL-NOM	Number=Plur	14	nmod	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	20	punct	_	_
18	and	and	CCONJ	_	_	20	cc	_	_
19	top-down	top-down	ADJ	POS	Degree=Pos	20	amod	_	_
20	vs	v	NOUN	PL-NOM	Number=Plur	10	conj	_	SpaceAfter=No
21	.	.	PUNCT	Period	_	2	punct	_	_
22	bottom-up	bottom-up	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 240
# text = The basics of software design in terms of functions, classes, modules, etc
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	basics	basics	NOUN	PL-NOM	Number=Plur	15	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	software	software	ADJ	POS	Degree=Pos	5	amod	_	_
5	design	design	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	in	in	ADP	_	_	7	case	_	_
7	terms	term	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
8	of	of	ADP	_	_	9	case	_	_
9	functions	function	NOUN	PL-NOM	Number=Plur	7	nmod	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	9	punct	_	_
11	classes	class	NOUN	PL-NOM	Number=Plur	9	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	modules	module	NOUN	PL-NOM	Number=Plur	9	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	13	punct	_	_
15	etc	etc	X	NOM	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 241
# text = Organisation
1	Organisation	organisation	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 242
# text = The course consists of lectures and exercise sessions.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	ADJ	CMP	Degree=Cmp	3	amod	_	_
3	consists	consist	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	of	of	ADP	_	_	5	case	_	_
5	lectures	lecture	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
6	and	and	CCONJ	_	_	8	cc	_	_
7	exercise	exercise	ADJ	POS	Degree=Pos	8	amod	_	_
8	sessions	session	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 243
# text = There is also a number of programming assignments where the skills can be trained in practice
1	There	there	PRON	EX	_	2	expl	_	_
2	is	be	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	also	also	ADV	_	_	5	advmod	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
5	number	number	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
6	of	of	ADP	_	_	7	mark	_	_
7	programming	programm	VERB	ING	Tense=Pres|VerbForm=Part	5	acl	_	_
8	assignments	assignment	NOUN	PL-NOM	Number=Plur	7	obj	_	_
9	where	where	ADV	WH-REL	PronType=Int	14	advmod	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	skills	skill	NOUN	PL-NOM	Number=Plur	14	nsubj:pass	_	_
12	can	can	AUX	PRES-AUX	VerbForm=Fin	14	aux	_	_
13	be	be	AUX	INF	VerbForm=Inf	14	aux:pass	_	_
14	trained	train	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	8	acl:relcl	_	_
15	in	in	ADP	_	_	16	case	_	_
16	practice	practice	NOUN	SG-NOM	Number=Sing	14	obl	_	SpacesAfter=\n\n

# newpar
# sent_id = 244
# text = Literature
1	Literature	literature	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 245
# text = Information about literature will be given on the course home-page before the start of the course
1	Information	information	NOUN	SG-NOM	Number=Sing	6	nsubj:pass	_	_
2	about	about	ADP	_	_	3	case	_	_
3	literature	literature	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
4	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
5	be	be	AUX	INF	VerbForm=Inf	6	aux:pass	_	_
6	given	give	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
7	on	on	ADP	_	_	10	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
9	course	course	ADJ	POS	Degree=Pos	10	amod	_	_
10	home-page	home-page	NOUN	SG-NOM	Number=Sing	6	obl	_	_
11	before	before	ADP	_	_	13	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	start	start	NOUN	SG-NOM	Number=Sing	6	obl	_	_
14	of	of	ADP	_	_	16	case	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	16	det	_	_
16	course	course	NOUN	SG-NOM	Number=Sing	13	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 246
# text = Examination including compulsory elements
1	Examination	Examination	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	including	include	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	compulsory	compulsory	ADJ	POS	Degree=Pos	4	amod	_	_
4	elements	element	NOUN	PL-NOM	Number=Plur	2	obj	_	SpacesAfter=\n

# sent_id = 247
# text = Both modules include mandatory programming assignments.
1	Both	both	DET	TOT-PL	_	2	det	_	_
2	modules	module	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	include	include	ADP	_	_	6	case	_	_
4	mandatory	mandatory	ADJ	POS	Degree=Pos	5	amod	_	_
5	programming	programme	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	assignments	assignment	NOUN	PL-NOM	Number=Plur	2	nmod	_	SpaceAfter=No
7	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 248
# text = Course grade is based on a written exam, provided all mandatory assignments have been passed.
1	Course	course	ADJ	CMP	Degree=Cmp	2	amod	_	_
2	grade	grade	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	on	on	ADP	_	_	8	case	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	8	det	_	_
7	written	write	ADJ	PASS	Case=Nom	8	amod	_	_
8	exam	exam	NOUN	SG-NOM	Number=Sing	4	obl	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	16	punct	_	_
10	provided	provide	SCONJ	_	_	16	mark	_	_
11	all	all	DET	TOT-PL	_	13	det	_	_
12	mandatory	mandatory	ADJ	POS	Degree=Pos	13	amod	_	_
13	assignments	assignment	NOUN	PL-NOM	Number=Plur	16	nsubj:pass	_	_
14	have	have	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	16	aux	_	_
15	been	be	AUX	PERF	Tense=Past|VerbForm=Part	16	aux:pass	_	_
16	passed	pass	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	4	advcl	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 249
# text = Object-Oriented Programming
1	Object-Oriented	Object-oriented	ADJ	PASS	Case=Nom	2	amod	_	_
2	Programming	programme	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 250
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 251
# text = Programming (or development or coding) is the act of solving computing problems using a programming language.
1	Programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	10	csubj	_	_
2	(	(	PUNCT	LeftParenthesis	_	4	punct	_	SpaceAfter=No
3	or	or	CCONJ	_	_	4	cc	_	_
4	development	development	NOUN	SG-NOM	Number=Sing	1	conj	_	_
5	or	or	CCONJ	_	_	6	cc	_	_
6	coding	code	VERB	ING	Tense=Pres|VerbForm=Part	4	conj	_	SpaceAfter=No
7	)	)	PUNCT	RightParenthesis	_	4	punct	_	_
8	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	act	act	NOUN	SG-NOM	Number=Sing	0	root	_	_
11	of	of	ADP	_	_	12	mark	_	_
12	solving	solve	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	_
13	computing	comput	VERB	ING	Tense=Pres|VerbForm=Part	12	xcomp	_	_
14	problems	problem	NOUN	PL-NOM	Number=Plur	13	obj	_	_
15	using	use	VERB	ING	Tense=Pres|VerbForm=Part	13	advcl	_	_
16	a	a	DET	IND-SG	Definite=Ind|PronType=Art	18	det	_	_
17	programming	programm	ADJ	ING	Case=Nom	18	amod	_	_
18	language	language	NOUN	SG-NOM	Number=Sing	15	obj	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	10	punct	_	SpacesAfter=\s\n

# sent_id = 252
# text = It involves the design, realisation, testing, troubleshooting, and maintenance of program code, in a programming language, on top of some programming platform, by the help of a development environment.
1	It	it	PRON	PERS-SG	_	2	nsubj	_	_
2	involves	involve	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	4	det	_	_
4	design	design	NOUN	SG-NOM	Number=Sing	2	obj	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	6	punct	_	_
6	realisation	realisation	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	testing	tes	VERB	ING	Tense=Pres|VerbForm=Part	2	advcl	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	10	punct	_	_
10	troubleshooting	troubleshoot	VERB	ING	Tense=Pres|VerbForm=Part	8	conj	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	10	punct	_	_
12	and	and	CCONJ	_	_	13	cc	_	_
13	maintenance	maintenance	NOUN	SG-NOM	Number=Sing	8	conj	_	_
14	of	of	ADP	_	_	16	case	_	_
15	program	program	NOUN	SG-NOM	Number=Sing	16	compound	_	_
16	code	code	NOUN	SG-NOM	Number=Sing	13	nmod	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	21	punct	_	_
18	in	in	ADP	_	_	21	case	_	_
19	a	a	DET	IND-SG	Definite=Ind|PronType=Art	21	det	_	_
20	programming	programm	ADJ	ING	Degree=Pos	21	amod	_	_
21	language	language	NOUN	SG-NOM	Number=Sing	8	obl	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	21	punct	_	_
23	on	on	ADP	_	_	24	case	_	_
24	top	top	NOUN	SG-NOM	Number=Sing	21	nmod	_	_
25	of	of	ADP	_	_	28	case	_	_
26	some	some	DET	IND	_	28	det	_	_
27	programming	programming	NOUN	SG-NOM	Number=Sing	28	compound	_	_
28	platform	platform	NOUN	SG-NOM	Number=Sing	24	nmod	_	SpaceAfter=No
29	,	,	PUNCT	Comma	_	32	punct	_	_
30	by	by	ADP	_	_	32	case	_	_
31	the	the	DET	DEF	Definite=Def|PronType=Art	32	det	_	_
32	help	help	NOUN	SG-NOM	Number=Sing	21	conj	_	_
33	of	of	ADP	_	_	36	case	_	_
34	a	a	DET	IND-SG	Definite=Ind|PronType=Art	36	det	_	_
35	development	development	NOUN	SG-NOM	Number=Sing	36	compound	_	_
36	environment	environment	NOUN	SG-NOM	Number=Sing	32	nmod	_	SpaceAfter=No
37	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 253
# text = The course introduces a contemporary object oriented programming language with associated platforms and environments, with emphasis on basic programming language concepts, object oriented concepts, and elementary data structures.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	introduces	introduce	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	contemporary	contemporary	ADJ	POS	Degree=Pos	6	amod	_	_
6	object	object	NOUN	SG-NOM	Number=Sing	3	obj	_	_
7	oriented	orient	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	3	conj	_	_
8	programming	programm	VERB	ING	Tense=Pres|VerbForm=Part	7	xcomp	_	_
9	language	language	NOUN	SG-NOM	Number=Sing	8	obj	_	_
10	with	with	ADP	_	_	12	case	_	_
11	associated	associate	ADJ	PASS	Degree=Pos	12	amod	_	_
12	platforms	platform	NOUN	PL-NOM	Number=Plur	8	obl	_	_
13	and	and	CCONJ	_	_	14	cc	_	_
14	environments	environment	NOUN	PL-NOM	Number=Plur	12	conj	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	12	punct	_	_
16	with	with	ADP	_	_	17	case	_	_
17	emphasis	emphasis	NOUN	SG-NOM	Number=Sing	8	obl	_	_
18	on	on	ADP	_	_	19	case	_	_
19	basic	basic	NOUN	SG-NOM	Number=Sing	17	nmod	_	_
20	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	19	acl	_	_
21	language	language	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	concepts	concept	NOUN	PL-NOM	Number=Plur	20	obj	_	SpaceAfter=No
23	,	,	PUNCT	Comma	_	22	punct	_	_
24	object	object	NOUN	SG-NOM	Number=Sing	26	compound	_	_
25	oriented	orient	ADJ	PASS	Degree=Pos	26	amod	_	_
26	concepts	concept	NOUN	PL-NOM	Number=Plur	22	conj	_	SpaceAfter=No
27	,	,	PUNCT	Comma	_	22	punct	_	_
28	and	and	CCONJ	_	_	31	cc	_	_
29	elementary	elementary	ADJ	POS	Degree=Pos	31	amod	_	_
30	data	data	NOUN	PL-NOM	Number=Sing	31	compound	_	_
31	structures	structure	NOUN	PL-NOM	Number=Plur	22	conj	_	SpaceAfter=No
32	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 254
# text = It also introduces the notion of code quality, and contemporary methods for obtaining high code quality.
1	It	it	PRON	PERS-SG	_	3	nsubj	_	_
2	also	also	ADV	_	_	3	advmod	_	_
3	introduces	introduce	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	notion	notion	NOUN	SG-NOM	Number=Sing	3	obj	_	_
6	of	of	ADP	_	_	8	case	_	_
7	code	code	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	quality	quality	NOUN	SG-NOM	Number=Sing	5	nmod	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	3	punct	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	contemporary	contemporary	ADJ	POS	Degree=Pos	12	amod	_	_
12	methods	method	NOUN	PL-NOM	Number=Plur	3	conj	_	_
13	for	for	ADP	_	_	14	mark	_	_
14	obtaining	obtain	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
15	high	high	ADJ	POS	Degree=Pos	17	amod	_	_
16	code	code	NOUN	SG-NOM	Number=Sing	17	compound	_	_
17	quality	quality	NOUN	SG-NOM	Number=Sing	14	obj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 255
# text = In addition, the course introduces more advanced programming topics such as recursion and exception handling.
1	In	in	ADP	_	_	2	case	_	_
2	addition	addition	NOUN	SG-NOM	Number=Sing	8	obl	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
6	introduces	introduce	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	more	very	ADV	CMP	_	8	advmod	_	_
8	advanced	advance	VERB	PAST	Case=Nom	0	root	_	_
9	programming	program	VERB	ING	Tense=Pres|VerbForm=Part	8	conj	_	_
10	topics	topics	NOUN	PL-NOM	Number=Plur	9	obj	_	_
11	such	such	ADJ	ADJ	_	10	amod	_	_
12	as	as	ADP	_	_	13	case	_	_
13	recursion	recursion	NOUN	SG-NOM	Number=Sing	11	nmod	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	exception	exception	NOUN	SG-NOM	Number=Sing	10	conj	_	_
16	handling	handle	VERB	ING	Tense=Pres|VerbForm=Part	8	conj	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 256
# text = Computability
1	Computability	Computability	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 257
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 258
# text = This course is about the concept of "computation": how it can be modelled, and what its limits are.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	is	be	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	about	about	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	concept	concept	NOUN	SG-NOM	Number=Sing	3	obl	_	_
7	of	of	ADP	_	_	9	case	_	_
8	"	&quot;	PUNCT	Quote	_	9	punct	_	SpaceAfter=No
9	computation	computation	NOUN	SG-NOM	Number=Sing	6	nmod	_	SpaceAfter=No
10	"	&quot;	PUNCT	Quote	_	3	punct	_	SpaceAfter=No
11	:	:	PUNCT	Colon	_	3	punct	_	_
12	how	how	ADV	WH	PronType=Int	16	advmod	_	_
13	it	it	PRON	PERS-SG	_	16	nsubj:pass	_	_
14	can	can	AUX	PRES-AUX	VerbForm=Fin	16	aux	_	_
15	be	be	AUX	INF	VerbForm=Inf	16	aux:pass	_	_
16	modelled	modelled	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	3	conj	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	16	punct	_	_
18	and	and	CCONJ	_	_	22	cc	_	_
19	what	what	PRON	WH	PronType=Int	22	obj	_	_
20	its	it	PRON	SG-GEN	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	21	nmod:poss	_	_
21	limits	limit	NOUN	PL-NOM	Number=Plur	22	nsubj	_	_
22	are	be	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	16	conj	_	SpaceAfter=No
23	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 259
# text = To avoid unnecessary complexity one often chooses to study computation via simplified, but powerful, models.
1	To	to	PART	_	_	2	mark	_	_
2	avoid	avoid	VERB	INF	VerbForm=Inf	0	root	_	_
3	unnecessary	unnecessary	ADJ	POS	Degree=Pos	4	amod	_	_
4	complexity	complexity	NOUN	SG-NOM	Number=Sing	7	compound	_	_
5	one	one	NUM	CARD-SG	NumType=Card	7	nummod	_	_
6	often	often	NUM	ID	NumType=Card	7	nummod	_	_
7	chooses	choose	NOUN	PL-NOM	Number=Plur	2	obj	_	_
8	to	to	ADP	_	_	11	case	_	_
9	study	study	ADJ	POS	Degree=Pos	11	amod	_	_
10	computation	computation	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	via	via	NOUN	SG-NOM	Number=Sing	2	obl	_	_
12	simplified	simplify	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	conj	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	2	punct	_	_
14	but	but	CCONJ	_	_	15	cc	_	_
15	powerful	powerful	ADJ	POS	Degree=Pos	2	conj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	17	punct	_	_
17	models	model	NOUN	PL-NOM	Number=Plur	2	conj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 260
# text = These models can for instance be simple programming languages (like the -calculus), or idealised computers (like Turing machines). In the course several such models will be studied, both "imperative" and "functional".
1	These	this	DET	DEM-PL	Number=Plur|PronType=Dem	2	det	_	_
2	models	model	NOUN	PL-NOM	Number=Plur	9	nsubj	_	_
3	can	can	AUX	PRES-AUX	VerbForm=Fin	9	aux	_	_
4	for	for	ADP	_	_	5	case	_	_
5	instance	instance	NOUN	SG-NOM	Number=Sing	9	nmod	_	_
6	be	be	AUX	INF	VerbForm=Inf	9	cop	_	_
7	simple	simple	ADJ	POS	Degree=Pos	8	amod	_	_
8	programming	programme	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	languages	languag	NOUN	PL-NOM	Number=Plur	0	root	_	_
10	(	(	PUNCT	LeftParenthesis	_	13	punct	_	SpaceAfter=No
11	like	like	ADP	_	_	13	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	-calculus	-calculus	NOUN	PL-NOM	Number=Plur	9	conj	_	SpaceAfter=No
14	)	)	PUNCT	RightParenthesis	_	13	punct	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	17	punct	_	_
16	or	or	CCONJ	_	_	17	cc	_	_
17	idealised	idealise	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	9	conj	_	_
18	computers	computer	NOUN	PL-NOM	Number=Plur	17	obj	_	_
19	(	(	PUNCT	LeftParenthesis	_	22	punct	_	SpaceAfter=No
20	like	like	ADP	_	_	22	case	_	_
21	Turing	Tur	PROPN	SG-NOM	Number=Sing	22	compound	_	_
22	machines	machine	NOUN	PL-NOM	Number=Plur	18	nmod	_	SpaceAfter=No
23	)	)	PUNCT	RightParanthesis	_	9	punct	_	SpaceAfter=No
24	.	.	PUNCT	Period	_	9	punct	_	_
25	In	in	ADP	_	_	26	case	_	_
26	the	the	DET	DEF	Definite=Def|PronType=Art	30	det	_	_
27	course	course	ADV	_	_	28	advmod	_	_
28	several	several	ADJ	POS	Degree=Pos	30	amod	_	_
29	such	such	ADJ	ADJ	_	30	amod	_	_
30	models	model	NOUN	PL-NOM	Number=Plur	33	nsubj:pass	_	_
31	will	will	AUX	PRES-AUX	VerbForm=Fin	33	aux	_	_
32	be	be	AUX	INF	VerbForm=Inf	33	aux:pass	_	_
33	studied	study	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	9	conj	_	SpaceAfter=No
34	,	,	PUNCT	Comma	_	33	punct	_	_
35	both	both	CCONJ	_	_	37	cc	_	_
36	"	&quot;	PUNCT	Quote	_	35	punct	_	SpaceAfter=No
37	imperative	imperative	ADJ	POS	Degree=Pos	33	conj	_	SpaceAfter=No
38	"	&quot;	PUNCT	Quote	_	33	punct	_	_
39	and	and	CCONJ	_	_	41	cc	_	_
40	"	&quot;	PUNCT	Quote	_	41	punct	_	SpaceAfter=No
41	functional	functional	ADJ	POS	Degree=Pos	9	conj	_	SpaceAfter=No
42	"	&quot;	PUNCT	Quote	_	41	punct	_	SpaceAfter=No
43	.	.	PUNCT	Period	_	9	punct	_	SpacesAfter=\n

# sent_id = 261
# text = One or more models will be used to explore the limits of computation: problems that cannot be solved (within the confines of a given model), and programs that can run arbitrary programs (modelled in a certain way).
1	One	one	NUM	CARD-PL	NumType=Card	7	nsubj:pass	_	_
2	or	or	CCONJ	CARD-PL	_	4	cc	_	_
3	more	very	ADV	CARD-PL	_	4	advmod	_	_
4	models	model	NOUN	PL-NOM	Number=Plur	1	conj	_	_
5	will	will	AUX	PRES-AUX	VerbForm=Fin	7	aux	_	_
6	be	be	AUX	INF	VerbForm=Inf	7	aux:pass	_	_
7	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
8	to	to	PART	_	_	9	mark	_	_
9	explore	explore	VERB	INF	VerbForm=Inf	7	advcl	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	limits	limit	NOUN	PL-NOM	Number=Plur	9	obj	_	_
12	of	of	ADP	_	_	13	case	_	_
13	computation	computation	NOUN	SG-NOM	Number=Sing	11	nmod	_	SpaceAfter=No
14	:	:	PUNCT	Colon	_	7	punct	_	_
15	problems	problem	NOUN	PL-NOM	Number=Plur	7	obj	_	_
16	that	that	PRON	REL	PronType=Rel	20	nsubj:pass	_	_
17	can	can	AUX	PRES-AUX	VerbForm=Fin	20	aux	_	SpaceAfter=No
18	not	not	PART	NEG	_	20	advmod	_	_
19	be	be	AUX	INF	VerbForm=Inf	20	aux:pass	_	_
20	solved	solve	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	15	acl:relcl	_	_
21	(	(	PUNCT	LeftParenthesis	_	24	punct	_	SpaceAfter=No
22	within	within	ADP	_	_	24	case	_	_
23	the	the	DET	DEF	Definite=Def|PronType=Art	24	det	_	_
24	confines	confine	NOUN	PL-NOM	Number=Plur	15	appos	_	_
25	of	of	ADP	_	_	28	case	_	_
26	a	a	DET	IND-SG	Definite=Ind|PronType=Art	28	det	_	_
27	given	given	ADJ	POS	Degree=Pos	28	amod	_	_
28	model	model	NOUN	SG-NOM	Number=Sing	24	nmod	_	SpaceAfter=No
29	)	)	PUNCT	RightParenthesis	_	24	punct	_	SpaceAfter=No
30	,	,	PUNCT	Comma	_	24	punct	_	_
31	and	and	CCONJ	_	_	32	cc	_	_
32	programs	program	NOUN	PL-NOM	Number=Plur	15	conj	_	_
33	that	that	PRON	REL	PronType=Rel	35	nsubj	_	_
34	can	can	AUX	PRES-AUX	VerbForm=Fin	35	aux	_	_
35	run	run	VERB	INF	VerbForm=Inf	15	acl:relcl	_	_
36	arbitrary	arbitrary	ADJ	POS	Degree=Pos	37	amod	_	_
37	programs	program	NOUN	PL-NOM	Number=Plur	35	obj	_	_
38	(	(	PUNCT	LeftParenthesis	_	39	punct	_	SpaceAfter=No
39	modelled	model	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	37	acl	_	_
40	in	in	ADP	_	_	43	case	_	_
41	a	a	DET	IND-SG	Definite=Ind|PronType=Art	43	det	_	_
42	certain	certain	ADJ	POS	Degree=Pos	43	amod	_	_
43	way	way	NOUN	SG-NOM	Number=Sing	39	obl	_	SpaceAfter=No
44	)	)	PUNCT	RightParenthesis	_	39	punct	_	SpaceAfter=No
45	.	.	PUNCT	Period	_	7	punct	_	SpacesAfter=\n

# sent_id = 262
# text = The course also includes a discussion of the Church-Turing thesis, a hypothesis which states, roughly, that a function is computable in a certain intuitive sense only if it can be defined within one of several models of computation.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
3	also	also	ADV	_	_	6	advmod	_	_
4	includes	include	ADP	_	_	6	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	discussion	discussion	NOUN	SG-NOM	Number=Sing	0	root	_	_
7	of	of	ADP	_	_	10	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
9	Church-Turing	Church-Turing	ADJ	ING	Degree=Pos	10	amod	_	_
10	thesis	thesis	NOUN	SG-NOM	Number=Sing	6	nmod	_	SpaceAfter=No
11	,	,	PUNCT	Comma	_	6	punct	_	_
12	a	a	DET	IND-SG	Definite=Ind|PronType=Art	13	det	_	_
13	hypothesis	hypothesis	NOUN	SG-NOM	Number=Sing	6	conj	_	_
14	which	which	PRON	WH-REL	PronType=Int	15	nsubj	_	_
15	states	state	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	acl:relcl	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	17	punct	_	_
17	roughly	rough	ADV	_	_	15	advmod	_	SpaceAfter=No
18	,	,	PUNCT	Comma	_	17	punct	_	_
19	that	that	SCONJ	_	_	23	mark	_	_
20	a	a	DET	IND-SG	Definite=Ind|PronType=Art	21	det	_	_
21	function	function	NOUN	SG-NOM	Number=Sing	23	nsubj	_	_
22	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	23	cop	_	_
23	computable	computable	ADJ	POS	Degree=Pos	15	xcomp	_	_
24	in	in	ADP	_	_	28	case	_	_
25	a	a	DET	IND-SG	Definite=Ind|PronType=Art	28	det	_	_
26	certain	certain	ADJ	POS	Degree=Pos	28	amod	_	_
27	intuitive	intuitive	ADJ	POS	Degree=Pos	28	amod	_	_
28	sense	sense	NOUN	SG-NOM	Number=Sing	23	nmod	_	_
29	only	only	ADV	_	_	30	advmod	_	_
30	if	if	SCONJ	_	_	34	mark	_	_
31	it	it	PRON	PERS-SG	_	34	nsubj:pass	_	_
32	can	can	AUX	PRES-AUX	VerbForm=Fin	34	aux	_	_
33	be	be	AUX	INF	VerbForm=Inf	34	aux:pass	_	_
34	defined	define	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	28	acl	_	_
35	within	within	ADP	_	_	36	case	_	_
36	one	one	PRON	IND-P3SG	_	34	obl	_	_
37	of	of	ADP	_	_	39	case	_	_
38	several	several	ADJ	POS	Degree=Pos	39	amod	_	_
39	models	model	NOUN	PL-NOM	Number=Plur	36	nmod	_	_
40	of	of	ADP	_	_	41	case	_	_
41	computation	computation	NOUN	SG-NOM	Number=Sing	39	nmod	_	SpaceAfter=No
42	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 263
# text = Algorithms
1	Algorithms	Algorithm	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 264
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 265
# text = In this course you will learn how to recognize that nontrivial computational problems which need to be solved by algorithms and also to formalize them.
1	In	in	ADP	_	_	3	case	_	_
2	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	6	obl	_	_
4	you	you	PRON	PERS-P2	_	6	nsubj	_	_
5	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
6	learn	learn	VERB	INF	VerbForm=Inf	0	root	_	_
7	how	how	ADV	WH	PronType=Int	6	advmod	_	_
8	to	to	PART	_	_	9	mark	_	_
9	recognize	recognize	VERB	INF	VerbForm=Inf	6	xcomp	_	_
10	that	that	DET	DEM-SG	Number=Sing|PronType=Dem	13	det	_	_
11	nontrivial	nontrivial	ADJ	POS	Degree=Pos	13	amod	_	_
12	computational	computational	ADJ	POS	Degree=Pos	13	amod	_	_
13	problems	problem	NOUN	PL-NOM	Number=Plur	9	obj	_	_
14	which	which	PRON	WH-REL	PronType=Int	15	nsubj	_	_
15	need	need	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	13	acl:relcl	_	_
16	to	to	PART	_	_	18	mark	_	_
17	be	be	AUX	INF	VerbForm=Inf	18	aux:pass	_	_
18	solved	solve	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	15	xcomp	_	_
19	by	by	ADP	_	_	20	case	_	_
20	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	18	obl	_	_
21	and	and	CCONJ	_	_	24	cc	_	_
22	also	also	ADV	_	_	24	advmod	_	_
23	to	to	PART	_	_	24	mark	_	_
24	formalize	formalize	VERB	INF	VerbForm=Inf	18	conj	_	_
25	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	24	obj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n

# sent_id = 266
# text = Model problems with binary relations as graph problems and solve them, using the fundamental graph algorithms.
1	Model	model	PROPN	SG-NOM	Number=Sing	2	nsubj	_	_
2	problems	problem	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	with	with	ADP	_	_	5	case	_	_
4	binary	binary	ADJ	POS	Degree=Pos	5	amod	_	_
5	relations	relation	NOUN	PL-NOM	Number=Plur	2	obl	_	_
6	as	as	ADP	_	_	8	case	_	_
7	graph	graph	ADJ	ORD	Degree=Pos	8	amod	_	_
8	problems	problems	NOUN	PL-NOM	Number=Plur	2	obl	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	solve	solve	VERB	INF	VerbForm=Inf	2	conj	_	_
11	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	10	obj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	13	punct	_	_
13	using	use	VERB	ING	Tense=Pres|VerbForm=Part	10	advcl	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
15	fundamental	fundamental	ADJ	POS	Degree=Pos	16	amod	_	_
16	graph	graph	NOUN	SG-NOM	Number=Sing	17	compound	_	_
17	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	13	obj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 267
# text = Perform in simple cases the whole development cycle of algorithms: problem analysis, choosing, modifying and combining suitable techniques and data structures, analysis of correctness and complexity, filling in implementation details, looking for possible improvements, etc.
1	Perform	perform	VERB	IMP	VerbForm=Inf	0	root	_	_
2	in	in	ADP	_	_	4	case	_	_
3	simple	simple	ADJ	POS	Degree=Pos	4	amod	_	_
4	cases	cas	NOUN	PL-NOM	Number=Plur	1	obl	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
6	whole	whole	ADJ	POS	Degree=Pos	7	amod	_	_
7	development	development	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	cycle	cycle	NOUN	SG-NOM	Number=Sing	4	conj	_	_
9	of	of	ADP	_	_	10	case	_	_
10	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	8	nmod	_	SpaceAfter=No
11	:	:	PUNCT	Colon	_	4	punct	_	_
12	problem	problem	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	analysis	analysis	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	13	punct	_	_
15	choosing	choose	VERB	ING	Tense=Pres|VerbForm=Part	13	acl	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	17	punct	_	_
17	modifying	modify	VERB	ING	Tense=Pres|VerbForm=Part	15	advcl	_	_
18	and	and	CCONJ	_	_	19	cc	_	_
19	combining	combin	VERB	ING	Tense=Pres|VerbForm=Part	17	conj	_	_
20	suitable	suitable	ADJ	POS	Degree=Pos	21	amod	_	_
21	techniques	technique	NOUN	PL-NOM	Number=Plur	24	compound	_	_
22	and	and	CCONJ	_	_	23	cc	_	_
23	data	data	NOUN	PL-NOM	Number=Sing	21	conj	_	_
24	structures	structure	NOUN	PL-NOM	Number=Plur	19	obj	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	24	punct	_	_
26	analysis	analysis	NOUN	SG-NOM	Number=Sing	24	conj	_	_
27	of	of	ADP	_	_	28	case	_	_
28	correctness	correctness	NOUN	SG-NOM	Number=Sing	26	nmod	_	_
29	and	and	CCONJ	_	_	30	cc	_	_
30	complexity	complexity	NOUN	SG-NOM	Number=Sing	28	conj	_	SpaceAfter=No
31	,	,	PUNCT	Comma	_	17	punct	_	_
32	filling	fill	VERB	ING	Tense=Pres|VerbForm=Part	17	conj	_	_
33	in	in	ADP	_	_	35	case	_	_
34	implementation	implementation	NOUN	SG-NOM	Number=Sing	35	compound	_	_
35	details	detail	NOUN	PL-NOM	Number=Plur	32	obl	_	SpaceAfter=No
36	,	,	PUNCT	Comma	_	17	punct	_	_
37	looking	look	VERB	ING	Tense=Pres|VerbForm=Part	17	conj	_	_
38	for	for	ADP	_	_	40	case	_	_
39	possible	possible	ADJ	POS	Degree=Pos	40	amod	_	_
40	improvements	improvement	NOUN	PL-NOM	Number=Plur	37	obl	_	SpaceAfter=No
41	,	,	PUNCT	Comma	_	42	punct	_	_
42	etc	etc	X	NOM	_	17	conj	_	SpaceAfter=No
43	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 268
# text = Algorithms, advanced course
1	Algorithms	Algorithm	ADV	_	_	3	advmod	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	1	punct	_	_
3	advanced	advance	VERB	PAST	Case=Nom	0	root	_	_
4	course	course	ADV	_	_	3	fixed	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 269
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 270
# text = The course covers the following topics;
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	covers	cover	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
5	following	follow	ADJ	ING	Case=Nom	6	amod	_	_
6	topics	topics	NOUN	PL-NOM	Number=Plur	3	obj	_	SpaceAfter=No
7	;	;	PUNCT	SemiColon	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 271
# text = approximation algorithms and approximation schemes for NP-complete problems, and their analysis
1	approximation	approximation	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	5	compound	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	approximation	approximation	NOUN	SG-NOM	Number=Sing	2	conj	_	_
5	schemes	scheme	NOUN	PL-NOM	Number=Plur	0	root	_	_
6	for	for	ADP	_	_	8	case	_	_
7	NP-complete	NP-complete	ADJ	POS	Degree=Pos	8	amod	_	_
8	problems	problem	NOUN	PL-NOM	Number=Plur	5	nmod	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	5	punct	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	their	they	PRON	P3PL-GEN	_	12	nmod:poss	_	_
12	analysis	analysis	NOUN	SG-NOM	Number=Sing	5	conj	_	SpacesAfter=\n

# sent_id = 272
# text = use of linear programming, in particular for approximation
1	use	use	VERB	INF	VerbForm=Inf	0	root	_	_
2	of	of	ADP	_	_	3	case	_	_
3	linear	linear	NOUN	SG-NOM	Number=Sing	1	obl	_	_
4	programming	programme	VERB	ING	Tense=Pres|VerbForm=Part	1	advcl	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	in	in	ADP	_	_	7	case	_	_
7	particular	particular	ADJ	POS	Degree=Pos	4	obl	_	_
8	for	for	ADP	_	_	9	case	_	_
9	approximation	approximation	NOUN	SG-NOM	Number=Sing	7	nmod	_	SpacesAfter=\n

# sent_id = 273
# text = network flow with some complex applications
1	network	network	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	flow	flow	VERB	PRES	Case=Nom	0	root	_	_
3	with	with	ADP	_	_	6	case	_	_
4	some	some	DET	IND	_	6	det	_	_
5	complex	complex	ADJ	POS	Degree=Pos	6	amod	_	_
6	applications	application	NOUN	PL-NOM	Number=Plur	2	obl	_	SpacesAfter=\n

# sent_id = 274
# text = randomized algorithms and their analysis by appropriate random variables
1	randomized	randomize	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
2	algorithms	algorithm	ADV	_	_	1	advmod	_	_
3	and	and	CCONJ	_	_	5	cc	_	_
4	their	they	PRON	P3PL-GEN	_	5	nmod:poss	_	_
5	analysis	analysis	NOUN	SG-NOM	Number=Sing	1	conj	_	_
6	by	by	ADP	_	_	9	case	_	_
7	appropriate	appropriate	ADJ	POS	Degree=Pos	8	amod	_	_
8	random	random	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	variables	variable	NOUN	PL-NOM	Number=Plur	5	nmod	_	SpacesAfter=\n

# sent_id = 275
# text = helpful input structures like tree structures and input parameters.
1	helpful	helpful	ADJ	POS	Degree=Pos	2	amod	_	_
2	input	input	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	structures	structure	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	like	like	ADP	_	_	6	case	_	_
5	tree	tree	NUM	CARD-PL	NumType=Card	6	nummod	_	_
6	structures	structure	NOUN	PL-NOM	Number=Plur	3	obl	_	_
7	and	and	CCONJ	_	_	9	cc	_	_
8	input	input	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	parameters	parameter	NOUN	PL-NOM	Number=Plur	6	conj	_	SpaceAfter=No
10	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 276
# text = Data Structures and Algorithms
1	Data	data	NOUN	PL-NOM	Number=Sing	2	compound	_	_
2	Structures	structure	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	Algorithms	Algorithm	NOUN	PL-NOM	Number=Plur	2	conj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 277
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 278
# text = The course introduces the students to the role of data structures and algorithmic concepts in the detailed design and implementation of programs.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	introduces	introduce	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	students	student	NOUN	PL-NOM	Number=Plur	3	obj	_	_
6	to	to	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	role	role	NOUN	SG-NOM	Number=Sing	3	obl	_	_
9	of	of	ADP	_	_	11	case	_	_
10	data	data	NOUN	PL-NOM	Number=Sing	11	compound	_	_
11	structures	structure	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	algorithmic	algorithmic	ADJ	POS	Degree=Pos	14	amod	_	_
14	concepts	concept	NOUN	PL-NOM	Number=Plur	11	conj	_	_
15	in	in	ADP	_	_	18	case	_	_
16	the	the	DET	DEF	Definite=Def|PronType=Art	18	det	_	_
17	detailed	detailed	ADJ	POS	Degree=Pos	18	amod	_	_
18	design	design	NOUN	SG-NOM	Number=Sing	14	nmod	_	_
19	and	and	CCONJ	_	_	20	cc	_	_
20	implementation	implementation	NOUN	SG-NOM	Number=Sing	18	conj	_	_
21	of	of	ADP	_	_	22	case	_	_
22	programs	program	NOUN	PL-NOM	Number=Plur	20	nmod	_	SpaceAfter=No
23	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 279
# text = The course has two general themes:
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	has	have	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	two	two	NUM	CARD-PL	NumType=Card	6	nummod	_	_
5	general	general	ADJ	POS	Degree=Pos	6	amod	_	_
6	themes	theme	NOUN	PL-NOM	Number=Plur	3	obj	_	SpaceAfter=No
7	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n

# sent_id = 280
# text = (1) The role of algorithms in the design and development of programs
1	(	(	PUNCT	LeftParenthesis	_	2	punct	_	SpaceAfter=No
2	1	1	NUM	ID	NumType=Card	4	discourse	_	SpaceAfter=No
3	)	)	PUNCT	RightParenthesis	_	2	punct	_	_
4	The	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	role	role	NOUN	SG-NOM	Number=Sing	0	root	_	_
6	of	of	ADP	_	_	7	case	_	_
7	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
8	in	in	ADP	_	_	10	case	_	_
9	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
10	design	design	NOUN	SG-NOM	Number=Sing	5	nmod	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	development	development	NOUN	SG-NOM	Number=Sing	10	conj	_	_
13	of	of	ADP	_	_	14	case	_	_
14	programs	program	NOUN	PL-NOM	Number=Plur	12	nmod	_	SpacesAfter=\n

# sent_id = 281
# text = (2) The role of data structures in the implementation of algorithms
1	(	(	PUNCT	LeftParenthesis	_	2	punct	_	SpaceAfter=No
2	2	2	NUM	ID	NumType=Card	5	discourse	_	SpaceAfter=No
3	)	)	PUNCT	RightParenthesis	_	2	punct	_	_
4	The	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	role	role	NOUN	SG-NOM	Number=Sing	0	root	_	_
6	of	of	ADP	_	_	8	case	_	_
7	data	data	NOUN	PL-NOM	Number=Sing	8	compound	_	_
8	structures	structur	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	in	in	ADP	_	_	11	case	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	implementation	implementation	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
12	of	of	ADP	_	_	13	case	_	_
13	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	11	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 282
# text = Machine Learning
1	Machine	Machine	PROPN	SG-NOM	Number=Sing	2	nsubj	_	_
2	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 283
# text = Summary
1	Summary	Summary	ADV	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 284
# text = The purpose of the course is to give a broad introduction to machine learning topics, with special focus on their application in Natural Language Processing.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	purpose	purpose	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	to	to	PART	_	_	8	mark	_	_
8	give	give	VERB	INF	VerbForm=Inf	0	root	_	_
9	a	a	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
10	broad	broad	ADJ	POS	Degree=Pos	11	amod	_	_
11	introduction	introduction	NOUN	SG-NOM	Number=Sing	8	obj	_	_
12	to	to	PART	_	_	13	mark	_	_
13	machine	machine	VERB	INF	VerbForm=Inf	8	advcl	_	_
14	learning	learning	NOUN	SG-NOM	Case=Nom	15	compound	_	_
15	topics	topics	NOUN	PL-NOM	Number=Plur	13	obj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	8	punct	_	_
17	with	with	ADP	_	_	19	case	_	_
18	special	special	ADJ	POS	Degree=Pos	19	amod	_	_
19	focus	focus	NOUN	SG-NOM	Number=Sing	8	obl	_	_
20	on	on	ADP	_	_	22	case	_	_
21	their	they	PRON	P3PL-GEN	_	22	nmod:poss	_	_
22	application	application	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
23	in	in	ADP	_	_	25	case	_	_
24	Natural	natural	ADJ	POS	Degree=Pos	25	amod	_	_
25	Language	language	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
26	Processing	Processe	VERB	ING	Tense=Pres|VerbForm=Part	25	acl	_	SpaceAfter=No
27	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 285
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 286
# text = The purpose of the course is to give a broad introduction to machine learning topics, with special focus on their application in Natural Language Processing.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	purpose	purpose	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	to	to	PART	_	_	8	mark	_	_
8	give	give	VERB	INF	VerbForm=Inf	0	root	_	_
9	a	a	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
10	broad	broad	ADJ	POS	Degree=Pos	11	amod	_	_
11	introduction	introduction	NOUN	SG-NOM	Number=Sing	8	obj	_	_
12	to	to	PART	_	_	13	mark	_	_
13	machine	machine	VERB	INF	VerbForm=Inf	8	advcl	_	_
14	learning	learning	NOUN	SG-NOM	Case=Nom	15	compound	_	_
15	topics	topics	NOUN	PL-NOM	Number=Plur	13	obj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	8	punct	_	_
17	with	with	ADP	_	_	19	case	_	_
18	special	special	ADJ	POS	Degree=Pos	19	amod	_	_
19	focus	focus	NOUN	SG-NOM	Number=Sing	8	obl	_	_
20	on	on	ADP	_	_	22	case	_	_
21	their	they	PRON	P3PL-GEN	_	22	nmod:poss	_	_
22	application	application	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
23	in	in	ADP	_	_	25	case	_	_
24	Natural	natural	ADJ	POS	Degree=Pos	25	amod	_	_
25	Language	language	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
26	Processing	Processe	VERB	ING	Tense=Pres|VerbForm=Part	25	acl	_	SpaceAfter=No
27	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 287
# text = Possible topics include:
1	Possible	possible	ADJ	POS	Degree=Pos	2	amod	_	_
2	topics	topics	NOUN	PL-NOM	Number=Plur	3	nsubj	_	_
3	include	include	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 288
# text = Supervised learning
1	Supervised	supervised	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	aux	_	_
2	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpacesAfter=\n

# sent_id = 289
# text = Automatic rule induction
1	Automatic	Automatic	ADJ	POS	Degree=Pos	2	amod	_	_
2	rule	rule	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	induction	induction	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 290
# text = Lightly supervised approaches
1	Lightly	Light	ADV	_	_	2	advmod	_	_
2	supervised	supervise	ADJ	POS	Degree=Pos	3	amod	_	_
3	approaches	approach	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 291
# text = Learning theory
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	theory	theory	NOUN	SG-NOM	Number=Sing	1	obj	_	SpacesAfter=\n

# sent_id = 292
# text = Learning with structure
1	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	with	with	ADP	_	_	3	case	_	_
3	structure	structure	NOUN	SG-NOM	Number=Sing	1	obl	_	SpacesAfter=\n

# sent_id = 293
# text = Feature design for NLP applications.
1	Feature	feature	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	design	design	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	for	for	ADP	_	_	5	case	_	_
4	NLP	NLP	ADJ	PASS	Degree=Pos	5	amod	_	_
5	applications	application	NOUN	PL-NOM	Number=Plur	2	nmod	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 294
# text = Applied Machine Learning
1	Applied	applied	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
2	Machine	Machine	PROPN	SG-NOM	Number=Sing	1	obj	_	_
3	Learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	1	xcomp	_	SpacesAfter=\n\n

# newpar
# sent_id = 295
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 296
# text = The course gives an introduction to machine learning techniques and theory, with a focus on its use in practical applications.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	an	an	DET	IND-SG	Definite=Ind|PronType=Art	5	det	_	_
5	introduction	introduction	NOUN	SG-NOM	Number=Sing	3	obj	_	_
6	to	to	ADP	_	_	9	case	_	_
7	machine	machine	NUM	CARD-PL	NumType=Card	9	nummod	_	_
8	learning	learn	ADJ	POS	Degree=Pos	9	amod	_	_
9	techniques	technique	NOUN	PL-NOM	Number=Plur	3	obl	_	_
10	and	and	CCONJ	_	_	11	cc	_	_
11	theory	theory	NOUN	SG-NOM	Number=Sing	9	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	3	punct	_	_
13	with	with	ADP	_	_	15	case	_	_
14	a	a	DET	IND-SG	Definite=Ind|PronType=Art	15	det	_	_
15	focus	focus	NOUN	SG-NOM	Number=Sing	3	obl	_	_
16	on	on	ADP	_	_	18	case	_	_
17	its	it	PRON	SG-GEN	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	18	nmod:poss	_	_
18	use	use	NOUN	SG-NOM	Number=Sing	15	nmod	_	_
19	in	in	ADP	_	_	21	case	_	_
20	practical	practical	ADJ	POS	Degree=Pos	21	amod	_	_
21	applications	application	NOUN	PL-NOM	Number=Plur	15	nmod	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 297
# text = During the course, a selection of topics will be covered in supervised learning, such as linear models for regression and classification, or nonlinear models such as neural networks, and in unsupervised learning such as clustering.
1	During	during	ADP	_	_	3	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	11	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
6	selection	selection	NOUN	SG-NOM	Number=Sing	11	nsubj:pass	_	_
7	of	of	ADP	_	_	8	case	_	_
8	topics	topic	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	will	will	AUX	PRES-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	aux:pass	_	_
11	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
12	in	in	ADP	_	_	14	case	_	_
13	supervised	supervised	ADJ	PASS	Degree=Pos	14	amod	_	_
14	learning	learning	NOUN	SG-NOM	Case=Nom	11	obl	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	16	punct	_	_
16	such	such	ADJ	ADJ	Case=Nom	11	conj	_	_
17	as	as	ADP	_	_	19	case	_	_
18	linear	linear	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	models	model	NOUN	PL-NOM	Number=Plur	16	nmod	_	_
20	for	for	ADP	_	_	21	case	_	_
21	regression	regression	NOUN	SG-NOM	Number=Sing	19	nmod	_	_
22	and	and	CCONJ	_	_	23	cc	_	_
23	classification	classification	NOUN	SG-NOM	Number=Sing	21	conj	_	SpaceAfter=No
24	,	,	PUNCT	Comma	_	27	punct	_	_
25	or	or	CCONJ	_	_	27	cc	_	_
26	nonlinear	nonlinear	NOUN	SG-NOM	Number=Sing	27	compound	_	_
27	models	model	NOUN	PL-NOM	Number=Plur	21	conj	_	_
28	such	such	ADJ	ADJ	Case=Nom	27	amod	_	_
29	as	as	ADP	_	_	31	case	_	_
30	neural	neural	ADJ	POS	Degree=Pos	31	amod	_	_
31	networks	network	NOUN	PL-NOM	Number=Plur	28	nmod	_	SpaceAfter=No
32	,	,	PUNCT	Comma	_	16	punct	_	_
33	and	and	CCONJ	_	_	36	cc	_	_
34	in	in	ADP	_	_	36	case	_	_
35	unsupervised	unsupervised	ADJ	PASS	Degree=Pos	36	amod	_	_
36	learning	learning	NOUN	SG-NOM	Case=Nom	11	conj	_	_
37	such	such	ADJ	ADJ	Case=Nom	36	amod	_	_
38	as	as	ADP	_	_	39	mark	_	_
39	clustering	cluster	VERB	ING	Tense=Pres|VerbForm=Part	37	acl	_	SpaceAfter=No
40	.	.	PUNCT	Period	_	11	punct	_	SpacesAfter=\n

# sent_id = 298
# text = The use cases and limitations of these algorithms will be discussed, and their implementation will be investigated in programming assignments.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	use	use	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	cases	cas	NOUN	PL-NOM	Number=Plur	11	nsubj:pass	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	limitations	limitation	NOUN	PL-NOM	Number=Plur	3	conj	_	_
6	of	of	ADP	_	_	8	case	_	_
7	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	8	det	_	_
8	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	5	nmod	_	_
9	will	will	AUX	PRES-AUX	VerbForm=Fin	11	aux	_	_
10	be	be	AUX	INF	VerbForm=Inf	11	aux:pass	_	_
11	discussed	discuss	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	11	punct	_	_
13	and	and	CCONJ	_	_	18	cc	_	_
14	their	they	PRON	P3PL-GEN	_	15	nmod:poss	_	_
15	implementation	implementation	NOUN	SG-NOM	Number=Sing	18	nsubj:pass	_	_
16	will	will	AUX	PRES-AUX	VerbForm=Fin	18	aux	_	_
17	be	be	AUX	INF	VerbForm=Inf	18	aux:pass	_	_
18	investigated	investigate	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	11	conj	_	_
19	in	in	ADP	_	_	21	case	_	_
20	programming	programm	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	assignments	assignment	NOUN	PL-NOM	Number=Plur	18	obl	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	11	punct	_	SpacesAfter=\s\n

# sent_id = 299
# text = Methodological questions pertaining to the evaluation of machine learning systems will also be discussed, as well as some of the ethical questions that can arise when applying machine learning technologies.
1	Methodological	Methodological	ADJ	POS	Degree=Pos	2	amod	_	_
2	questions	question	NOUN	PL-NOM	Number=Plur	14	nsubj:pass	_	_
3	pertaining	pertain	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	_
4	to	to	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	evaluation	evaluation	NOUN	SG-NOM	Number=Sing	3	obl	_	_
7	of	of	ADP	_	_	10	case	_	_
8	machine	machine	NUM	CARD-PL	NumType=Card	10	nummod	_	_
9	learning	learning	ADJ	ING	Degree=Pos	10	amod	_	_
10	systems	system	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
11	will	will	AUX	PRES-AUX	VerbForm=Fin	14	aux	_	_
12	also	also	ADV	_	_	14	advmod	_	_
13	be	be	AUX	INF	VerbForm=Inf	14	aux:pass	_	_
14	discussed	discuss	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
15	,	,	PUNCT	Comma	_	14	punct	_	_
16	as	as	CCONJ	_	Case=Nom	19	cc	_	_
17	well	well	ADV	_	Degree=Pos	16	fixed	_	_
18	as	as	ADP	_	_	16	fixed	_	_
19	some	some	PRON	IND	Case=Nom	14	conj	_	_
20	of	of	ADP	_	_	23	case	_	_
21	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
22	ethical	ethical	ADJ	POS	Degree=Pos	23	amod	_	_
23	questions	question	NOUN	PL-NOM	Number=Plur	19	nmod	_	_
24	that	that	PRON	REL	PronType=Rel	26	nsubj	_	_
25	can	can	AUX	PRES-AUX	VerbForm=Fin	26	aux	_	_
26	arise	arise	VERB	INF	VerbForm=Inf	14	acl:relcl	_	_
27	when	when	SCONJ	_	Case=Nom	28	mark	_	_
28	applying	apply	VERB	ING	Tense=Pres|VerbForm=Part	26	advcl	_	_
29	machine	machine	NUM	CARD-PL	NumType=Card	31	nummod	_	_
30	learning	learn	ADJ	ING	Case=Nom	31	amod	_	_
31	technologies	technology	NOUN	PL-NOM	Number=Plur	28	obj	_	SpaceAfter=No
32	.	.	PUNCT	Period	_	14	punct	_	SpacesAfter=\n

# sent_id = 300
# text = There will be a strong emphasis on the real-world context in which machine learning systems are used.
1	There	there	PRON	EX	_	6	expl	_	_
2	will	will	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
3	be	be	AUX	INF	VerbForm=Inf	6	cop	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	strong	strong	ADJ	POS	Degree=Pos	6	amod	_	_
6	emphasis	emphasis	NOUN	SG-NOM	Number=Sing	17	nsubj:pass	_	_
7	on	on	ADP	_	_	9	case	_	_
8	the	the	DET	DEF	Definite=Def|PronType=Art	9	det	_	_
9	real-world	real-world	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
10	context	context	ADV	_	_	6	advmod	_	_
11	in	in	ADP	_	_	15	case	_	_
12	which	which	DET	WH	PronType=Int	15	det	_	_
13	machine	machine	NOUN	SG-NOM	Number=Sing	14	compound	_	_
14	learning	learning	NOUN	SG-NOM	Case=Nom	15	compound	_	_
15	systems	system	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
16	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	17	aux:pass	_	_
17	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	17	punct	_	SpacesAfter=\n

# sent_id = 301
# text = The use of machine learning components in practical applications will be exemplified, and realistic scenarios will be studied in application areas such as e-commerce, business intelligence, natural language processing, image processing, and bioinformatics.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	use	use	NOUN	SG-NOM	Number=Sing	12	nsubj:pass	_	_
3	of	of	ADP	_	_	6	case	_	_
4	machine	machine	NUM	CARD-PL	NumType=Card	6	nummod	_	_
5	learning	learn	NOUN	SG-NOM	Case=Nom	6	compound	_	_
6	components	component	NOUN	PL-NOM	Number=Plur	2	nmod	_	_
7	in	in	ADP	_	_	9	case	_	_
8	practical	practical	ADJ	POS	Degree=Pos	9	amod	_	_
9	applications	application	NOUN	PL-NOM	Number=Plur	2	nmod	_	_
10	will	will	AUX	PRES-AUX	VerbForm=Fin	12	aux	_	_
11	be	be	AUX	INF	VerbForm=Inf	12	aux:pass	_	_
12	exemplified	exemplify	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	12	punct	_	_
14	and	and	CCONJ	_	_	19	cc	_	_
15	realistic	realistic	ADJ	POS	Degree=Pos	16	amod	_	_
16	scenarios	scenario	NOUN	PL-NOM	Number=Plur	19	nsubj:pass	_	_
17	will	will	AUX	PRES-AUX	VerbForm=Fin	19	aux	_	_
18	be	be	AUX	INF	VerbForm=Inf	19	aux:pass	_	_
19	studied	study	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	12	conj	_	_
20	in	in	ADP	_	_	22	case	_	_
21	application	application	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	areas	area	NOUN	PL-NOM	Number=Plur	19	obl	_	_
23	such	such	ADJ	ADJ	Case=Nom	22	amod	_	_
24	as	as	ADP	_	_	25	case	_	_
25	e-commerce	e-commerce	NOUN	SG-NOM	Number=Sing	23	nmod	_	SpaceAfter=No
26	,	,	PUNCT	Comma	_	23	punct	_	_
27	business	business	NOUN	SG-NOM	Number=Sing	28	compound	_	_
28	intelligence	intelligence	NOUN	SG-NOM	Number=Sing	22	appos	_	SpaceAfter=No
29	,	,	PUNCT	Comma	_	28	punct	_	_
30	natural	natural	ADJ	POS	Degree=Pos	31	amod	_	_
31	language	language	NOUN	SG-NOM	Number=Sing	28	conj	_	_
32	processing	process	VERB	ING	Tense=Pres|VerbForm=Part	31	acl	_	SpaceAfter=No
33	,	,	PUNCT	Comma	_	32	punct	_	_
34	image	image	NOUN	SG-NOM	Number=Sing	32	obj	_	_
35	processing	process	VERB	ING	Tense=Pres|VerbForm=Part	34	acl	_	SpaceAfter=No
36	,	,	PUNCT	Comma	_	35	punct	_	_
37	and	and	CCONJ	_	_	38	cc	_	_
38	bioinformatics	bioinformatics	NOUN	PL-NOM	Number=Plur	35	conj	_	SpaceAfter=No
39	.	.	PUNCT	Period	_	12	punct	_	SpacesAfter=\s\n

# sent_id = 302
# text = The importance of the design and selection of features, and their reliability, will be discussed.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	importance	importance	NOUN	SG-NOM	Number=Sing	17	nsubj:pass	_	_
3	of	of	ADP	_	_	5	case	_	_
4	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
5	design	design	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	selection	selection	NOUN	SG-NOM	Number=Sing	5	conj	_	_
8	of	of	ADP	_	_	9	case	_	_
9	features	feature	NOUN	PL-NOM	Number=Plur	7	nmod	_	SpaceAfter=No
10	,	,	PUNCT	Comma	_	2	punct	_	_
11	and	and	CCONJ	_	_	13	cc	_	_
12	their	they	PRON	P3PL-GEN	_	13	nmod:poss	_	_
13	reliability	reliability	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	13	punct	_	_
15	will	will	AUX	PRES-AUX	VerbForm=Fin	17	aux	_	_
16	be	be	AUX	INF	VerbForm=Inf	17	aux:pass	_	_
17	discussed	discuss	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	17	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 303
# text = Algorithms for Machine Learning and Inference
1	Algorithms	Algorithm	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	for	for	ADP	_	_	4	case	_	_
3	Machine	Machine	PROPN	SG-NOM	Number=Sing	4	compound	_	_
4	Learning	learning	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	Inference	Inference	NOUN	SG-NOM	Number=Sing	4	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 304
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 305
# text = This course will discuss the theory and application of algorithms for machine learning and inference, from an AI perspective.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
3	will	will	AUX	PRES-AUX	VerbForm=Fin	4	aux	_	_
4	discuss	discuss	VERB	INF	VerbForm=Inf	0	root	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	theory	theory	NOUN	SG-NOM	Number=Sing	4	obj	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	application	application	NOUN	SG-NOM	Number=Sing	4	conj	_	_
9	of	of	ADP	_	_	10	case	_	_
10	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
11	for	for	ADP	_	_	13	case	_	_
12	machine	machine	NOUN	SG-NOM	Number=Sing	13	compound	_	_
13	learning	learning	NOUN	SG-NOM	Case=Nom	10	nmod	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	inference	inference	NOUN	SG-NOM	Number=Sing	13	conj	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	4	punct	_	_
17	from	from	ADP	_	_	20	case	_	_
18	an	an	DET	IND-SG	Definite=Ind|PronType=Art	20	det	_	_
19	AI	AI	PROPN	SG-NOM	Number=Sing	20	compound	_	_
20	perspective	perspective	NOUN	SG-NOM	Number=Sing	4	obl	_	SpaceAfter=No
21	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 306
# text = In this context, we consider as learning to draw conclusions from given data or experience which results in some model that generalises these data.
1	In	in	ADP	_	_	3	case	_	_
2	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
3	context	context	NOUN	SG-NOM	Number=Sing	6	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	nsubj	_	_
6	consider	consider	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
7	as	as	SCONJ	_	_	8	mark	_	_
8	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	6	advcl	_	_
9	to	to	PART	_	_	10	mark	_	_
10	draw	draw	VERB	INF	VerbForm=Inf	8	xcomp	_	_
11	conclusions	conclusion	NOUN	PL-NOM	Number=Plur	10	obj	_	_
12	from	from	ADP	_	_	14	case	_	_
13	given	given	NUM	ID	NumType=Card	14	nummod	_	_
14	data	data	NOUN	PL-NOM	Number=Sing	10	obl	_	_
15	or	or	CCONJ	_	_	16	cc	_	_
16	experience	experience	NOUN	SG-NOM	Number=Sing	14	conj	_	_
17	which	which	PRON	WH-REL	PronType=Int	18	nsubj	_	_
18	results	result	VERB	PRES	Case=Nom	14	acl:relcl	_	_
19	in	in	ADP	_	_	21	case	_	_
20	some	some	DET	IND	_	21	det	_	_
21	model	model	NOUN	SG-NOM	Number=Sing	18	obl	_	_
22	that	that	PRON	REL	PronType=Rel	23	nsubj	_	_
23	generalises	generalise	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	acl:relcl	_	_
24	these	this	DET	DEM-PL	Number=Plur|PronType=Dem	25	det	_	_
25	data	data	NOUN	PL-NOM	Number=Sing	23	obj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 307
# text = Inference is to compute the desired answers or actions based on the model.
1	Inference	Inference	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
2	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	_	_
3	to	to	PART	_	_	4	mark	_	_
4	compute	compute	VERB	INF	VerbForm=Inf	0	root	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
6	desired	desire	ADJ	POS	Degree=Pos	7	amod	_	_
7	answers	answer	NOUN	PL-NOM	Number=Plur	4	obj	_	_
8	or	or	CCONJ	_	_	9	cc	_	_
9	actions	action	NOUN	PL-NOM	Number=Plur	7	conj	_	_
10	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	4	advcl	_	_
11	on	on	ADP	_	_	13	case	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	model	model	NOUN	SG-NOM	Number=Sing	10	obl	_	SpaceAfter=No
14	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 308
# text = Algorithms of this kind are commonly used in for example classification tasks (e.g., character recognition, or to predict if a new customer is creditworthy) and in expert systems (e.g., for medical diagnosis).
1	Algorithms	Algorithm	NOUN	PL-NOM	Number=Plur	7	nsubj:pass	_	_
2	of	of	ADP	_	_	4	case	_	_
3	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	4	det	_	_
4	kind	kind	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
5	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	7	aux:pass	_	_
6	commonly	common	ADV	_	_	7	advmod	_	_
7	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
8	in	in	ADV	_	_	7	advmod	_	_
9	for	for	ADP	_	_	12	case	_	_
10	example	example	NOUN	_	Number=Sing	11	compound	_	_
11	classification	classification	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	tasks	task	NOUN	PL-NOM	Number=Plur	7	obl	_	_
13	(	(	PUNCT	LeftParenthesis	_	14	punct	_	SpaceAfter=No
14	e.g	e.g	NOUN	ING	Number=Sing	12	appos	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	14	punct	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	14	punct	_	_
17	character	character	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	recognition	recognition	NOUN	SG-NOM	Number=Sing	14	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	14	punct	_	_
20	or	or	CCONJ	_	_	22	cc	_	_
21	to	to	PART	_	_	22	mark	_	_
22	predict	predict	VERB	INF	VerbForm=Inf	14	conj	_	_
23	if	if	SCONJ	_	_	28	mark	_	_
24	a	a	DET	IND-SG	Definite=Ind|PronType=Art	26	det	_	_
25	new	new	ADJ	POS	Degree=Pos	26	amod	_	_
26	customer	customer	NOUN	SG-NOM	Number=Sing	28	nsubj	_	_
27	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	28	cop	_	_
28	creditworthy	creditworthy	ADJ	POS	Degree=Pos	22	advmod	_	SpaceAfter=No
29	)	)	PUNCT	RightParenthesis	_	14	punct	_	_
30	and	and	CCONJ	_	_	33	cc	_	_
31	in	in	ADP	_	_	33	case	_	_
32	expert	expert	NOUN	SG-NOM	Number=Sing	33	compound	_	_
33	systems	system	NOUN	PL-NOM	Number=Plur	7	conj	_	_
34	(	(	PUNCT	LeftParenthesis	_	35	punct	_	SpaceAfter=No
35	e.g	e.g	VERB	ING	Tense=Pres|VerbForm=Part	33	acl	_	SpaceAfter=No
36	.	.	PUNCT	Period	_	35	punct	_	SpaceAfter=No
37	,	,	PUNCT	Comma	_	35	punct	_	_
38	for	for	ADP	_	_	40	case	_	_
39	medical	medical	ADJ	POS	Degree=Pos	40	amod	_	_
40	diagnosis	diagnosis	NOUN	SG-NOM	Number=Sing	35	obl	_	SpaceAfter=No
41	)	)	PUNCT	RightParenthesis	_	35	punct	_	SpaceAfter=No
42	.	.	PUNCT	Period	_	7	punct	_	SpacesAfter=\s\n

# sent_id = 309
# text = A new and commercially important area of application is data mining, where the algorithms are used to automatically detect interesting information and relations in large commercial or scientific databases.
1	A	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
2	new	new	ADJ	POS	Degree=Pos	6	amod	_	_
3	and	and	CCONJ	_	_	6	cc	_	_
4	commercially	commercially	ADV	_	_	6	advmod	_	_
5	important	important	ADJ	POS	Degree=Pos	6	amod	_	_
6	area	area	NOUN	SG-NOM	Number=Sing	10	nsubj	_	_
7	of	of	ADP	_	_	8	case	_	_
8	application	application	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
9	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
10	data	data	NOUN	PL-NOM	Number=Sing	0	root	_	_
11	mining	mining	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	17	punct	_	_
13	where	where	ADV	WH-REL	PronType=Int	17	advmod	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
15	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	17	nsubj:pass	_	_
16	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	17	aux:pass	_	_
17	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	11	advcl	_	_
18	to	to	ADP	_	_	20	mark	_	_
19	automatically	automatically	ADV	_	_	20	advmod	_	_
20	detect	detect	VERB	INF	VerbForm=Inf	17	advcl	_	_
21	interesting	interest	ADJ	POS	Degree=Pos	22	amod	_	_
22	information	information	NOUN	SG-NOM	Number=Sing	20	obj	_	_
23	and	and	CCONJ	_	_	24	cc	_	_
24	relations	relation	NOUN	PL-NOM	Number=Plur	22	conj	_	_
25	in	in	ADP	_	_	30	case	_	_
26	large	large	ADJ	POS	Degree=Pos	30	amod	_	_
27	commercial	commercial	ADJ	POS	Degree=Pos	30	amod	_	_
28	or	or	CCONJ	_	_	29	cc	_	_
29	scientific	scientific	ADJ	POS	Degree=Pos	27	conj	_	_
30	databases	database	NOUN	PL-NOM	Number=Plur	24	nmod	_	SpaceAfter=No
31	.	.	PUNCT	Period	_	10	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 310
# text = The course intends to give a good understanding of this cross disciplinary area, with a sufficient depth to use and evaluate the available methods, and to understand the scientific literature.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	intends	intend	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	to	to	PART	_	_	5	mark	_	_
5	give	give	VERB	INF	VerbForm=Inf	3	xcomp	_	_
6	a	a	DET	IND-SG	Definite=Ind|PronType=Art	8	det	_	_
7	good	good	ADJ	POS	Degree=Pos	8	amod	_	_
8	understanding	understanding	NOUN	ING	Number=Sing	5	obj	_	_
9	of	of	ADP	_	_	13	case	_	_
10	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	13	det	_	_
11	cross	cross	ADJ	POS	Degree=Pos	13	amod	_	_
12	disciplinary	disciplinary	ADJ	POS	Degree=Pos	13	amod	_	_
13	area	area	NOUN	SG-NOM	Number=Sing	8	nmod	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	3	punct	_	_
15	with	with	ADP	_	_	18	case	_	_
16	a	a	DET	IND-SG	Definite=Ind|PronType=Art	18	det	_	_
17	sufficient	sufficient	ADJ	POS	Degree=Pos	18	amod	_	_
18	depth	depth	NOUN	POS	Number=Sing	3	obl	_	_
19	to	to	PART	_	_	20	mark	_	_
20	use	use	VERB	INF	VerbForm=Inf	18	acl	_	_
21	and	and	CCONJ	_	_	22	cc	_	_
22	evaluate	evaluate	VERB	INF	VerbForm=Inf	3	conj	_	_
23	the	the	DET	DEF	Definite=Def|PronType=Art	25	det	_	_
24	available	available	ADJ	POS	Degree=Pos	25	amod	_	_
25	methods	method	NOUN	PL-NOM	Number=Plur	22	obj	_	SpaceAfter=No
26	,	,	PUNCT	Comma	_	3	punct	_	_
27	and	and	CCONJ	_	_	29	cc	_	_
28	to	to	PART	_	_	29	mark	_	_
29	understand	understand	VERB	INF	VerbForm=Inf	3	conj	_	_
30	the	the	DET	DEF	Definite=Def|PronType=Art	32	det	_	_
31	scientific	scientific	ADJ	POS	Degree=Pos	32	amod	_	_
32	literature	literature	NOUN	SG-NOM	Number=Sing	29	obj	_	SpaceAfter=No
33	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 311
# text = During the course we may discuss potential problems with machine learning methods, for example, bias in training data and safety of autonomous agents.
1	During	during	ADP	_	_	2	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	6	advmod	_	_
3	course	course	ADV	_	_	2	fixed	_	_
4	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	nsubj	_	_
5	may	may	AUX	PRES-AUX	VerbForm=Fin	6	aux	_	_
6	discuss	discuss	VERB	INF	VerbForm=Inf	0	root	_	_
7	potential	potential	ADJ	POS	Degree=Pos	8	amod	_	_
8	problems	problem	NOUN	PL-NOM	Number=Plur	6	obj	_	_
9	with	with	ADP	_	_	12	case	_	_
10	machine	machine	NUM	CARD-PL	NumType=Card	12	nummod	_	_
11	learning	learn	ADJ	POS	Degree=Pos	12	amod	_	_
12	methods	methods	NOUN	PL-NOM	Number=Plur	8	nmod	_	SpaceAfter=No
13	,	,	PUNCT	Comma	_	15	punct	_	_
14	for	for	ADP	_	_	15	case	_	_
15	example	example	NOUN	_	Number=Sing	6	obl	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	15	punct	_	_
17	bias	bias	SCONJ	_	_	19	mark	_	_
18	in	in	ADP	_	_	19	mark	_	_
19	training	training	VERB	ING	Tense=Pres|VerbForm=Part	6	advcl	_	_
20	data	data	NOUN	PL-NOM	Number=Sing	19	obj	_	_
21	and	and	CCONJ	_	_	22	cc	_	_
22	safety	safety	NOUN	SG-NOM	Number=Sing	20	conj	_	_
23	of	of	ADP	_	_	25	case	_	_
24	autonomous	autonomous	ADJ	POS	Degree=Pos	25	amod	_	_
25	agents	agent	NOUN	PL-NOM	Number=Plur	22	nmod	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 312
# text = The following concepts are covered:
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	following	follow	ADJ	ING	Case=Nom	3	amod	_	_
3	concepts	concepts	NOUN	PL-NOM	Number=Plur	5	nsubj:pass	_	_
4	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
6	:	:	PUNCT	Colon	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 313
# text = Bayesian learning: likelihood, prior, posterior
1	Bayesian	Bayesian	ADJ	POS	Degree=Pos	2	amod	_	_
2	learning	learning	NOUN	SG	Number=Sing	0	root	_	SpaceAfter=No
3	:	:	PUNCT	Colon	_	2	punct	_	_
4	likelihood	likelihood	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	prior	prior	ADJ	POS	Degree=Pos	2	conj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	posterior	posterior	ADJ	POS	Degree=Pos	2	conj	_	SpacesAfter=\n

# sent_id = 314
# text = Supervised learning: Bayes classifier, Logistic Regression, Deep Learning, Support Vector Machines
1	Supervised	supervised	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	13	advcl	_	_
2	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	13	advcl	_	SpaceAfter=No
3	:	:	PUNCT	Colon	_	2	punct	_	_
4	Bayes	Baye	PROPN	SG-NOM	Number=Sing	10	compound	_	_
5	classifier	classifier	NOUN	SG-NOM	Number=Sing	4	flat	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	Logistic	Logistic	ADJ	POS	Degree=Pos	8	amod	_	_
8	Regression	Regression	NOUN	SG-NOM	Number=Sing	5	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	8	punct	_	_
10	Deep	deep	NOUN	SG-NOM	Number=Sing	2	obj	_	_
11	Learning	learning	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	2	punct	_	_
13	Support	support	VERB	IMP	Mood=Imp|VerbForm=Fin	0	root	_	_
14	Vector	Vector	PROPN	SG-NOM	Number=Sing	13	obj	_	_
15	Machines	Machine	PROPN	SG-NOM	Number=Sing	14	flat	_	SpacesAfter=\n

# sent_id = 315
# text = Unsupervised learning: Clustering algorithms, EM algorithm,Mixture models, Kernel methods
1	Unsupervised	unsupervised	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpaceAfter=No
3	:	:	PUNCT	Colon	_	2	punct	_	_
4	Clustering	Cluster	VERB	ING	Tense=Pres|VerbForm=Part	2	advcl	_	_
5	algorithms	algorithm	ADV	_	_	4	advmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	4	punct	_	_
7	EM	EM	PROPN	SG-NOM	Number=Sing	4	conj	_	_
8	algorithm	algorithm	NOUN	SG-NOM	Number=Sing	7	conj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	8	punct	_	SpaceAfter=No
10	Mixture	mixture	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	models	model	NOUN	PL-NOM	Number=Plur	7	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	7	punct	_	_
13	Kernel	kernel	PROPN	SG-NOM	Number=Sing	4	conj	_	_
14	methods	method	NOUN	PL-NOM	Number=Plur	4	obj	_	SpacesAfter=\n

# sent_id = 316
# text = Hidden Markov models, MCMC
1	Hidden	hide	PROPN	NMPT	_	3	compound	_	_
2	Markov	Markov	PROPN	SG-NOM	Number=Sing	1	flat	_	_
3	models	model	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	MCMC	MCMC	PROPN	SG-NOM	Number=Sing	3	nmod	_	SpacesAfter=\n

# sent_id = 317
# text = Reinforcement learning
1	Reinforcement	Reinforcement	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 318
# text = Machine learning for statistical NLP: introduction
1	Machine	Machine	PROPN	SG-NOM	Number=Sing	2	nsubj	_	_
2	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	for	for	ADP	_	_	5	case	_	_
4	statistical	statistical	ADJ	POS	Degree=Pos	5	amod	_	_
5	NLP	Nlp	NOUN	SG-NOM	Number=Sing	2	obl	_	SpaceAfter=No
6	:	:	PUNCT	Colon	_	2	punct	_	_
7	introduction	introduction	NOUN	SG-NOM	Number=Sing	2	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 319
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 320
# text = The purpose of this course is to provide an introduction to probabilistic modeling and statistical machine learning techniques in terms of their use within the field of language technology.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	purpose	purpose	NOUN	SG-NOM	Number=Sing	8	nsubj	_	_
3	of	of	ADP	_	_	5	case	_	_
4	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	5	det	_	_
5	course	course	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	to	to	PART	_	_	8	mark	_	_
8	provide	provide	VERB	INF	VerbForm=Inf	0	root	_	_
9	an	an	DET	IND-SG	Definite=Ind|PronType=Art	10	det	_	_
10	introduction	introduction	NOUN	SG-NOM	Number=Sing	8	obj	_	_
11	to	to	ADP	_	_	13	case	_	_
12	probabilistic	probabilistic	ADJ	POS	Degree=Pos	13	amod	_	_
13	modeling	modeling	NOUN	SG-NOM	Number=Sing	8	obl	_	_
14	and	and	CCONJ	_	_	18	cc	_	_
15	statistical	statistical	ADJ	POS	Degree=Pos	18	amod	_	_
16	machine	machine	NOUN	SG-NOM	Number=Sing	18	compound	_	_
17	learning	learn	NOUN	SG-NOM	Case=Nom	18	compound	_	_
18	techniques	technique	NOUN	PL-NOM	Number=Plur	13	conj	_	_
19	in	in	ADP	_	_	20	case	_	_
20	terms	term	NOUN	PL-NOM	Number=Plur	18	nmod	_	_
21	of	of	ADP	_	_	23	case	_	_
22	their	they	PRON	P3PL-GEN	_	23	nmod:poss	_	_
23	use	use	NOUN	SG-NOM	Number=Sing	20	nmod	_	_
24	within	within	ADP	_	_	26	case	_	_
25	the	the	DET	DEF	Definite=Def|PronType=Art	26	det	_	_
26	field	field	NOUN	SG-NOM	Number=Sing	23	nmod	_	_
27	of	of	ADP	_	_	28	case	_	_
28	language	language	NOUN	SG-NOM	Number=Sing	29	compound	_	_
29	technology	technology	NOUN	SG-NOM	Number=Sing	26	nmod	_	SpaceAfter=No
30	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\s\n

# sent_id = 321
# text = We will review foundational concepts in mathematics and apply them to basic techniques and applications in statistical NLP.
1	We	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	nsubj	_	_
2	will	will	AUX	PRES-AUX	VerbForm=Fin	3	aux	_	_
3	review	review	VERB	INF	VerbForm=Inf	0	root	_	_
4	foundational	foundational	ADJ	POS	Degree=Pos	5	amod	_	_
5	concepts	concept	NOUN	PL-NOM	Number=Plur	3	obj	_	_
6	in	in	ADP	_	_	7	case	_	_
7	mathematics	mathematics	NOUN	PL-NOM	Number=Plur	3	obl	_	_
8	and	and	CCONJ	_	_	9	cc	_	_
9	apply	apply	VERB	INF	VerbForm=Inf	3	conj	_	_
10	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	9	obj	_	_
11	to	to	ADP	_	_	13	case	_	_
12	basic	basic	ADJ	POS	Degree=Pos	13	amod	_	_
13	techniques	technique	NOUN	PL-NOM	Number=Plur	9	obl	_	_
14	and	and	CCONJ	_	_	15	cc	_	_
15	applications	application	NOUN	PL-NOM	Number=Plur	13	conj	_	_
16	in	in	ADP	_	_	18	case	_	_
17	statistical	statistical	ADJ	POS	Degree=Pos	18	amod	_	_
18	NLP	NLP	PROPN	SG-NOM	Number=Sing	13	nmod	_	SpaceAfter=No
19	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 322
# text = We will also learn practical skills in programming text processing pipelines and analytical tools.
1	We	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	nsubj	_	_
2	will	will	AUX	PRES-AUX	VerbForm=Fin	4	aux	_	_
3	also	also	ADV	_	_	4	advmod	_	_
4	learn	learn	VERB	INF	VerbForm=Inf	0	root	_	_
5	practical	practical	ADJ	POS	Degree=Pos	6	amod	_	_
6	skills	skill	NOUN	PL-NOM	Number=Plur	4	obj	_	_
7	in	in	ADP	_	_	8	mark	_	_
8	programming	programm	VERB	ING	Tense=Pres|VerbForm=Part	4	advcl	_	_
9	text	text	NOUN	SG-NOM	Number=Sing	8	obj	_	_
10	processing	process	VERB	ING	Tense=Pres|VerbForm=Part	8	conj	_	_
11	pipelines	pipeline	NOUN	PL-NOM	Number=Plur	10	obj	_	_
12	and	and	CCONJ	_	_	14	cc	_	_
13	analytical	analytical	ADJ	POS	Degree=Pos	14	amod	_	_
14	tools	tool	NOUN	PL-NOM	Number=Plur	11	conj	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 323
# text = Advanced Differential Calculus
1	Advanced	advance	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
2	Differential	Differential	PROPN	SG-NOM	Number=Sing	1	obj	_	_
3	Calculus	Calculus	PROPN	SG-NOM	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 324
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 325
# text = In this course we will study the foundations of differential and integral calculus on smooth manifolds, along with applications of the theory in topology and geometry.
1	In	in	ADP	_	_	3	case	_	_
2	this	this	DET	DEM-SG	Number=Sing|PronType=Dem	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	8	obl	_	_
4	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	8	nsubj	_	_
5	will	will	AUX	PRES-AUX	VerbForm=Fin	8	aux	_	_
6	study	study	ADJ	POS	Degree=Pos	8	amod	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	foundations	foundation	NOUN	PL-NOM	Number=Plur	0	root	_	_
9	of	of	ADP	_	_	13	case	_	_
10	differential	differential	ADJ	POS	Degree=Pos	13	amod	_	_
11	and	and	CCONJ	_	_	12	cc	_	_
12	integral	integral	ADJ	POS	Degree=Pos	10	conj	_	_
13	calculus	calculus	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
14	on	on	ADP	_	_	16	case	_	_
15	smooth	smooth	ADJ	POS	Degree=Pos	16	amod	_	_
16	manifolds	manifold	NOUN	PL-NOM	Number=Plur	8	nmod	_	SpaceAfter=No
17	,	,	PUNCT	Comma	_	20	punct	_	_
18	along	along	ADV	_	_	20	advmod	_	_
19	with	with	ADP	_	_	20	case	_	_
20	applications	application	NOUN	PL-NOM	Number=Plur	8	conj	_	_
21	of	of	ADP	_	_	23	case	_	_
22	the	the	DET	DEF	Definite=Def|PronType=Art	23	det	_	_
23	theory	theory	NOUN	SG-NOM	Number=Sing	20	nmod	_	_
24	in	in	ADP	_	_	25	case	_	_
25	topology	topology	NOUN	SG-NOM	Number=Sing	23	nmod	_	_
26	and	and	CCONJ	_	_	27	cc	_	_
27	geometry	geometry	NOUN	SG-NOM	Number=Sing	25	conj	_	SpaceAfter=No
28	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\s\n

# sent_id = 326
# text = One of the main purposes is to acquaint you with differential forms and their great usefulness in many areas of mathematics.
1	One	one	PRON	IND-SG	_	8	nsubj	_	_
2	of	of	ADP	_	_	5	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	5	det	_	_
4	main	main	ADJ	POS	Degree=Pos	5	amod	_	_
5	purposes	purpose	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
6	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	to	to	PART	_	_	8	mark	_	_
8	acquaint	acquaint	VERB	INF	VerbForm=Inf	0	root	_	_
9	you	you	PRON	PERS-P2	_	8	obj	_	_
10	with	with	ADP	_	_	12	case	_	_
11	differential	differential	ADJ	POS	Degree=Pos	12	amod	_	_
12	forms	form	NOUN	PL-NOM	Number=Plur	8	obl	_	_
13	and	and	CCONJ	_	_	16	cc	_	_
14	their	they	PRON	P3PL-GEN	_	16	nmod:poss	_	_
15	great	great	ADJ	POS	Degree=Pos	16	amod	_	_
16	usefulness	usefulness	NOUN	SG-NOM	Number=Sing	12	conj	_	_
17	in	in	ADP	_	_	19	case	_	_
18	many	many	ADJ	POS	Degree=Pos	19	amod	_	_
19	areas	area	NOUN	PL-NOM	Number=Plur	16	nmod	_	_
20	of	of	ADP	_	_	21	case	_	_
21	mathematics	mathematics	NOUN	PL-NOM	Number=Plur	19	nmod	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\s\n

# sent_id = 327
# text = The course is one of the first you will take as a graduate student in mathematics.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj	_	_
3	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	_	_
4	one	one	NUM	CARD-SG	NumType=Card	0	root	_	_
5	of	of	ADP	_	_	7	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
7	first	first	ADJ	ORD	Degree=Pos|NumType=Ord	4	amod	_	_
8	you	you	PRON	PERS-P2	_	10	nsubj	_	_
9	will	will	AUX	PRES-AUX	VerbForm=Fin	10	aux	_	_
10	take	take	VERB	INF	VerbForm=Inf	4	acl:relcl	_	_
11	as	as	ADP	_	_	14	case	_	_
12	a	a	DET	IND-SG	Definite=Ind|PronType=Art	14	det	_	_
13	graduate	graduate	ADJ	POS	Degree=Pos	14	amod	_	_
14	student	student	NOUN	SG-NOM	Number=Sing	10	obl	_	_
15	in	in	ADP	_	_	16	case	_	_
16	mathematics	mathematics	NOUN	PL-NOM	Number=Plur	10	obl	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 328
# text = Prerequisites and selection
1	Prerequisites	Prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	selection	selection	NOUN	SG-NOM	Number=Sing	1	conj	_	SpacesAfter=\n

# sent_id = 329
# text = Requirements
1	Requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 330
# text = General entry requirements and the equivalent of 90 credits in mathematics, including at least 7.5 credits from the second cycle.
1	General	general	ADJ	POS	Degree=Pos	3	amod	_	_
2	entry	entry	ADJ	POS	Degree=Pos	3	amod	_	_
3	requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	and	and	CCONJ	_	_	6	cc	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	equivalent	equivalent	ADJ	POS	Degree=Pos	3	conj	_	_
7	of	of	ADP	_	_	9	case	_	_
8	90	90	NUM	CARD-PL	NumType=Card	9	nummod	_	_
9	credits	credit	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
10	in	in	ADP	_	_	11	case	_	_
11	mathematics	mathematics	NOUN	PL-NOM	Number=Plur	9	nmod	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	3	punct	_	_
13	including	include	VERB	ING	Tense=Pres|VerbForm=Part	3	acl	_	_
14	at	at	ADP	_	_	17	case	_	_
15	least	little	ADV	_	_	14	fixed	_	_
16	7.5	7.5	NUM	CARD-PL	NumType=Card	17	nummod	_	_
17	credits	credit	NOUN	PL-NOM	Number=Plur	13	obl	_	_
18	from	from	ADP	_	_	21	case	_	_
19	the	the	DET	DEF	Definite=Def|PronType=Art	21	det	_	_
20	second	second	ADJ	ORD	Degree=Pos|NumType=Ord	21	amod	_	_
21	cycle	cycle	NOUN	SG-NOM	Number=Sing	13	obl	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 331
# text = Selection
1	Selection	selection	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 332
# text = Facilities
1	Facilities	Facility	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 333
# text = Mathematical Sciences is a joint department of Chalmers/University of Gothenburg.
1	Mathematical	Mathematical	ADJ	POS	Degree=Pos	2	amod	_	_
2	Sciences	Science	NOUN	PL-NOM	Number=Plur	6	nsubj	_	_
3	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	joint	joint	ADJ	POS	Degree=Pos	6	amod	_	_
6	department	department	NOUN	SG-NOM	Number=Sing	0	root	_	_
7	of	of	ADP	_	_	8	case	_	_
8	Chalmers/University	Chalmers/University	NOUN	SG-NOM	Number=Sing	6	nmod	_	_
9	of	of	ADP	_	_	10	case	_	_
10	Gothenburg	Gothenburg	PROPN	SG-NOM	Number=Sing	8	nmod	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 334
# text = Your education takes place in the spacious and bright premises of Mathematical Sciences at the Chalmers campus Johanneberg, where there are lecture halls,
1	Your	you	PRON	P2-GEN	Person=2|Poss=Yes|PronType=Prs	2	nmod:poss	_	_
2	education	education	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	takes	take	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	place	place	NOUN	SG-NOM	Number=Sing	3	obj	_	_
5	in	in	ADP	_	_	10	case	_	_
6	the	the	DET	DEF	Definite=Def|PronType=Art	10	det	_	_
7	spacious	spacious	ADJ	POS	Degree=Pos	10	amod	_	_
8	and	and	CCONJ	_	_	10	cc	_	_
9	bright	bright	ADJ	POS	Degree=Pos	10	amod	_	_
10	premises	premise	NOUN	PL-NOM	Number=Plur	3	obl	_	_
11	of	of	ADP	_	_	13	case	_	_
12	Mathematical	Mathematical	ADJ	POS	Degree=Pos	13	amod	_	_
13	Sciences	Science	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
14	at	at	ADP	_	_	17	case	_	_
15	the	the	DET	DEF	Definite=Def|PronType=Art	17	det	_	_
16	Chalmers	Chalmer	NOUN	PL-NOM	Number=Plur	17	compound	_	_
17	campus	campus	NOUN	PL-NOM	Number=Plur	13	nmod	_	_
18	Johanneberg	Johanneberg	PROPN	SG-NOM	Number=Sing	17	nmod	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	18	punct	_	_
20	where	where	ADV	WH-REL	PronType=Int	22	advmod	_	_
21	there	there	ADV	_	PronType=Dem	22	advmod	_	_
22	are	be	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	3	conj	_	_
23	lecture	lecture	NOUN	SG-NOM	Number=Sing	24	compound	_	_
24	halls	hall	NOUN	PL-NOM	Number=Plur	22	nsubj	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	3	punct	_	SpacesAfter=\n

# sent_id = 335
# text = computer rooms and group rooms.
1	computer	computer	ADJ	CMP	Degree=Cmp	2	amod	_	_
2	rooms	room	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	and	and	CCONJ	_	_	5	cc	_	_
4	group	group	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	rooms	rooms	NOUN	PL-NOM	Number=Plur	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 336
# text = Here you can also find student lunch room and reading room, as well as student counsellors and student office.
1	Here	here	ADV	_	PronType=Dem	5	advmod	_	_
2	you	you	PRON	PERS-P2	_	5	nsubj	_	_
3	can	can	AUX	PRES-AUX	VerbForm=Fin	5	aux	_	_
4	also	also	ADV	_	_	5	advmod	_	_
5	find	find	VERB	INF	VerbForm=Inf	0	root	_	_
6	student	student	ADJ	POS	Degree=Pos	8	amod	_	_
7	lunch	lunch	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	room	room	NOUN	SG-NOM	Number=Sing	5	obj	_	_
9	and	and	CCONJ	_	_	11	cc	_	_
10	reading	reade	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	room	room	NOUN	SG-NOM	Number=Sing	5	conj	_	SpaceAfter=No
12	,	,	PUNCT	Comma	_	5	punct	_	_
13	as	as	CCONJ	_	Case=Nom	17	cc	_	_
14	well	well	ADV	_	Degree=Pos	13	fixed	_	_
15	as	as	ADP	_	_	13	fixed	_	_
16	student	student	ADJ	POS	Degree=Pos	17	amod	_	_
17	counsellors	counsellor	NOUN	PL-NOM	Number=Plur	5	conj	_	_
18	and	and	CCONJ	_	_	20	cc	_	_
19	student	student	ADJ	POS	Degree=Pos	20	amod	_	_
20	office	office	NOUN	SG-NOM	Number=Sing	17	conj	_	SpaceAfter=No
21	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 337
# text = Logic in Computer Science
1	Logic	Logic	X	NOM	_	0	root	_	_
2	in	in	ADP	_	_	4	case	_	_
3	Computer	computer	NOUN	SG-NOM	Number=Sing	4	compound	_	_
4	Science	science	NOUN	SG-NOM	Number=Sing	1	nmod	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 338
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 339
# text = Powerful tools for verifying software and hardware systems have been developed.
1	Powerful	powerful	ADJ	POS	Degree=Pos	2	amod	_	_
2	tools	tool	NOUN	PL-NOM	Number=Plur	11	nsubj:pass	_	_
3	for	for	ADP	_	_	4	mark	_	_
4	verifying	verify	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	_
5	software	software	NOUN	SG-NOM	Number=Sing	4	obj	_	_
6	and	and	CCONJ	_	_	8	cc	_	_
7	hardware	hardware	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	systems	system	NOUN	PL-NOM	Number=Plur	5	conj	_	_
9	have	have	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	11	aux	_	_
10	been	be	AUX	PERF	Tense=Past|VerbForm=Part	11	aux:pass	_	_
11	developed	develop	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
12	.	.	PUNCT	Period	_	11	punct	_	SpacesAfter=\s\n

# sent_id = 340
# text = These tools rely in a crucial way on logical techniques.
1	These	this	DET	DEM-PL	Number=Plur|PronType=Dem	2	det	_	_
2	tools	tool	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	rely	rely	ADV	_	_	2	advmod	_	_
4	in	in	ADP	_	_	7	case	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
6	crucial	crucial	ADJ	POS	Degree=Pos	7	amod	_	_
7	way	way	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
8	on	on	ADP	_	_	10	case	_	_
9	logical	logical	ADJ	POS	Degree=Pos	10	amod	_	_
10	techniques	technique	NOUN	PL-NOM	Number=Plur	7	nmod	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 341
# text = This course provides a sound basis in logic and a short introduction to some logical frameworks used in modelling, specifying and verifying computer systems.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	provides	provide	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	sound	sound	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	basis	basis	NOUN	SG-NOM	Number=Sing	3	obj	_	_
7	in	in	ADP	_	_	8	case	_	_
8	logic	logic	NOUN	SG-NOM	Number=Sing	3	obl	_	_
9	and	and	CCONJ	_	_	12	cc	_	_
10	a	a	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
11	short	short	ADJ	POS	Degree=Pos	12	amod	_	_
12	introduction	introduction	NOUN	SG-NOM	Number=Sing	8	conj	_	_
13	to	to	ADP	_	_	16	case	_	_
14	some	some	DET	IND	_	16	det	_	_
15	logical	logical	ADJ	POS	Degree=Pos	16	amod	_	_
16	frameworks	framework	NOUN	PL-NOM	Number=Plur	12	nmod	_	_
17	used	use	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	16	acl	_	_
18	in	in	ADP	_	_	19	mark	_	_
19	modelling	modelling	VERB	ING	Tense=Pres|VerbForm=Part	17	advcl	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	21	punct	_	_
21	specifying	specify	VERB	ING	Tense=Pres|VerbForm=Part	19	conj	_	_
22	and	and	CCONJ	_	_	23	cc	_	_
23	verifying	verify	VERB	ING	Tense=Pres|VerbForm=Part	19	conj	_	_
24	computer	computer	ADJ	CMP	Degree=Cmp	25	amod	_	_
25	systems	system	NOUN	PL-NOM	Number=Plur	23	obj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 342
# text = A sound basic knowledge in logic is a welcome prerequisite for courses in program verification, formal methods and artificial intelligence.
1	A	a	DET	IND-SG	Definite=Ind|PronType=Art	4	det	_	_
2	sound	sound	NOUN	SG-NOM	Number=Sing	4	compound	_	_
3	basic	basic	ADJ	POS	Degree=Pos	4	amod	_	_
4	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	9	nsubj	_	_
5	in	in	ADP	_	_	6	case	_	_
6	logic	logic	NOUN	SG-NOM	Number=Sing	4	nmod	_	_
7	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	_	_
8	a	a	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
9	welcome	welcome	VERB	PERF	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
10	prerequisite	prerequisite	NOUN	SG-NOM	Number=Sing	9	obj	_	_
11	for	for	ADP	_	_	12	case	_	_
12	courses	cours	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
13	in	in	ADP	_	_	15	case	_	_
14	program	program	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	verification	verification	NOUN	SG-NOM	Number=Sing	12	nmod	_	SpaceAfter=No
16	,	,	PUNCT	Comma	_	10	punct	_	_
17	formal	formal	ADJ	POS	Degree=Pos	18	amod	_	_
18	methods	method	NOUN	PL-NOM	Number=Plur	10	conj	_	_
19	and	and	CCONJ	_	_	21	cc	_	_
20	artificial	artificial	ADJ	POS	Degree=Pos	21	amod	_	_
21	intelligence	intelligence	NOUN	SG-NOM	Number=Sing	10	conj	_	SpaceAfter=No
22	.	.	PUNCT	Period	_	9	punct	_	SpacesAfter=\n

# sent_id = 343
# text = The course covers propositional and predicate calculus, and model-checking.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	covers	cover	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	propositional	propositional	ADJ	POS	Degree=Pos	7	amod	_	_
5	and	and	CCONJ	_	_	7	cc	_	_
6	predicate	predicate	ADJ	POS	Degree=Pos	7	amod	_	_
7	calculus	calculus	NOUN	PL-NOM	Number=Plur	3	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	3	punct	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	model-checking	model-check	VERB	ING	Tense=Pres|VerbForm=Part	3	conj	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 344
# text = More concretely, the course gives a thorough introduction to fundamental notions of logic such as natural deduction, semantics of both propositional and predicate calculus,soundness and completeness, conjunctive normal forms, Horn clauses, undecidability and expressiveness of predicate logic, plus an introduction to model checking: Linear-time temporal logic (LTL) and Branching-time temporal logic (CTL).
1	More	much	ADV	CMP	Degree=Cmp	2	advmod	_	_
2	concretely	concretely	ADV	_	_	6	advmod	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	the	the	ADV	_	_	6	advmod	_	_
5	course	course	ADV	_	_	4	fixed	_	_
6	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	a	a	DET	IND-SG	Definite=Ind|PronType=Art	9	det	_	_
8	thorough	thorough	ADJ	POS	Degree=Pos	9	amod	_	_
9	introduction	introduction	NOUN	SG-NOM	Number=Sing	6	obj	_	_
10	to	to	ADP	_	_	12	case	_	_
11	fundamental	fundamental	ADJ	POS	Degree=Pos	12	amod	_	_
12	notions	notion	NOUN	PL-NOM	Number=Plur	9	nmod	_	_
13	of	of	ADP	_	_	15	case	_	_
14	logic	logic	ADJ	POS	Degree=Pos	15	amod	_	_
15	such	such	NOUN	SG-NOM	Number=Sing	12	nmod	_	_
16	as	as	ADP	_	_	18	case	_	_
17	natural	natural	ADJ	POS	Degree=Pos	18	amod	_	_
18	deduction	deduction	NOUN	SG-NOM	Number=Sing	15	nmod	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	15	punct	_	_
20	semantics	semantics	NOUN	PL-NOM	Number=Plur	15	conj	_	_
21	of	of	ADP	_	_	26	case	_	_
22	both	both	CCONJ	_	_	23	cc	_	_
23	propositional	propositional	ADJ	POS	Degree=Pos	26	amod	_	_
24	and	and	CCONJ	_	_	25	cc	_	_
25	predicate	predicate	ADJ	POS	Degree=Pos	23	conj	_	_
26	calculus	calculus	NOUN	PL-NOM	Number=Plur	20	nmod	_	SpaceAfter=No
27	,	,	PUNCT	Comma	_	20	punct	_	SpaceAfter=No
28	soundness	soundness	NOUN	SG-NOM	Number=Sing	15	conj	_	_
29	and	and	CCONJ	_	_	30	cc	_	_
30	completeness	completeness	NOUN	SG-NOM	Number=Sing	28	conj	_	SpaceAfter=No
31	,	,	PUNCT	Comma	_	28	punct	_	_
32	conjunctive	conjunctive	ADJ	POS	Degree=Pos	34	amod	_	_
33	normal	normal	ADJ	POS	Degree=Pos	34	amod	_	_
34	forms	form	NOUN	PL-NOM	Number=Plur	15	conj	_	SpaceAfter=No
35	,	,	PUNCT	Comma	_	15	punct	_	_
36	Horn	horn	ADJ	PASS	Degree=Pos	37	amod	_	_
37	clauses	clause	NOUN	PL-NOM	Number=Plur	15	conj	_	SpaceAfter=No
38	,	,	PUNCT	Comma	_	37	punct	_	_
39	undecidability	undecidability	NOUN	SG-NOM	Number=Sing	15	conj	_	_
40	and	and	CCONJ	_	_	41	cc	_	_
41	expressiveness	expressiveness	NOUN	SG-NOM	Number=Sing	39	conj	_	_
42	of	of	ADP	_	_	44	case	_	_
43	predicate	predicate	ADJ	POS	Degree=Pos	44	amod	_	_
44	logic	logic	NOUN	SG-NOM	Number=Sing	41	nmod	_	SpaceAfter=No
45	,	,	PUNCT	Comma	_	48	punct	_	_
46	plus	plus	CCONJ	_	_	48	cc	_	_
47	an	an	DET	IND-SG	Definite=Ind|PronType=Art	48	det	_	_
48	introduction	introduction	NOUN	SG-NOM	Number=Sing	44	conj	_	_
49	to	to	PART	_	_	50	mark	_	_
50	model	model	VERB	INF	VerbForm=Inf	48	acl	_	_
51	checking	check	VERB	ING	Tense=Pres|VerbForm=Part	50	advcl	_	SpaceAfter=No
52	:	:	PUNCT	Colon	_	51	punct	_	_
53	Linear-time	Linear-time	VERB	PERF	Mood=Ind|Tense=Pres|VerbForm=Fin	51	conj	_	_
54	temporal	temporal	ADJ	POS	Degree=Pos	55	amod	_	_
55	logic	logic	NOUN	SG-NOM	Number=Sing	53	obj	_	_
56	(	(	PUNCT	LeftParenthesis	_	57	punct	_	SpaceAfter=No
57	LTL	LTL	X	NOM	_	55	appos	_	SpaceAfter=No
58	)	)	PUNCT	RightParenthesis	_	57	punct	_	_
59	and	and	CCONJ	_	_	62	cc	_	_
60	Branching-time	Branching-time	ADJ	POS	Degree=Pos	62	amod	_	_
61	temporal	temporal	NOUN	SG-NOM	Number=Sing	62	compound	_	_
62	logic	logic	NOUN	SG-NOM	Number=Sing	55	conj	_	_
63	(	(	PUNCT	LeftParenthesis	_	64	punct	_	SpaceAfter=No
64	CTL	CTL	X	NOM	_	62	appos	_	SpaceAfter=No
65	)	)	PUNCT	RightParenthesis	_	64	punct	_	SpaceAfter=No
66	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 345
# text = Prerequisites and selection
1	Prerequisites	Prerequisite	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	selection	selection	NOUN	SG-NOM	Number=Sing	1	conj	_	SpacesAfter=\n

# sent_id = 346
# text = Requirements
1	Requirements	requirement	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 347
# text = To be eligible for the course, students must have successfully completed courses corresponding to 105 hec within the subject Computer Science or Mathematics.
1	To	to	PART	_	_	3	mark	_	_
2	be	be	AUX	INF	VerbForm=Inf	3	cop	_	_
3	eligible	eligible	ADJ	POS	Degree=Pos	8	amod	_	_
4	for	for	ADP	_	_	6	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
6	course	course	NOUN	SG-NOM	Number=Sing	3	nmod	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	3	punct	_	_
8	students	student	NOUN	PL-NOM	Number=Plur	10	nsubj	_	_
9	must	must	AUX	PRES-AUX	VerbForm=Fin	10	aux	_	_
10	have	have	VERB	INF	VerbForm=Inf	0	root	_	_
11	successfully	successfully	ADV	_	_	12	advmod	_	_
12	completed	complete	ADJ	POS	Degree=Pos	13	amod	_	_
13	courses	cours	NOUN	PL-NOM	Number=Plur	10	obj	_	_
14	corresponding	corresponde	VERB	ING	Tense=Pres|VerbForm=Part	10	advcl	_	_
15	to	to	ADP	_	_	16	case	_	_
16	105	105	NUM	CARD-PL	NumType=Card	14	obl	_	_
17	hec	hec	ADJ	POS	Degree=Pos	16	amod	_	_
18	within	within	ADP	_	_	22	case	_	_
19	the	the	DET	DEF	Definite=Def|PronType=Art	22	det	_	_
20	subject	subject	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	Computer	computer	NOUN	SG-NOM	Number=Sing	22	compound	_	_
22	Science	science	NOUN	SG-NOM	Number=Sing	17	nmod	_	_
23	or	or	CCONJ	_	_	24	cc	_	_
24	Mathematics	Mathematics	NOUN	SG-NOM	Number=Plur	22	conj	_	SpaceAfter=No
25	.	.	PUNCT	Period	_	10	punct	_	SpacesAfter=\s\n

# sent_id = 348
# text = Including 7.5 hec in discrete mathematics (for example DIT980 Discrete Mathematics for Computer Scientists or the sub-course Introductory Algebra of MMG200 Mathematics 1).
1	Including	including	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	7.5	7.5	NUM	CARD-PL	NumType=Card	3	nummod	_	_
3	hec	hec	NOUN	SG-NOM	Number=Sing	1	obj	_	_
4	in	in	ADP	_	_	6	case	_	_
5	discrete	discrete	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	mathematics	mathematics	NOUN	PL-NOM	Number=Plur	1	obl	_	_
7	(	(	PUNCT	LeftParenthesis	_	11	punct	_	SpaceAfter=No
8	for	for	ADP	_	_	11	case	_	_
9	example	example	NOUN	_	Number=Sing	8	fixed	_	_
10	DIT980	DIT980	NUM	ID	_	11	nummod	_	_
11	Discrete	Discrete	PROPN	SG-NOM	Number=Sing	1	appos	_	_
12	Mathematics	Mathematics	PROPN	SG-NOM	Number=Sing	11	flat	_	_
13	for	for	ADP	_	_	15	case	_	_
14	Computer	computer	NOUN	SG-NOM	Number=Sing	15	compound	_	_
15	Scientists	Scientist	NOUN	PL-NOM	Number=Plur	20	nmod	_	_
16	or	or	CCONJ	_	_	19	cc	_	_
17	the	the	DET	DEF	Definite=Def|PronType=Art	19	det	_	_
18	sub-course	sub-course	ADJ	POS	Degree=Pos	19	amod	_	_
19	Introductory	Introductory	NOUN	SG-NOM	Number=Sing	20	compound	_	_
20	Algebra	Algebra	PROPN	SG-NOM	Number=Sing	11	flat	_	_
21	of	of	ADP	_	_	24	case	_	_
22	MMG200	MMG200	NUM	CARD-PL	_	24	nummod	_	_
23	Mathematics	Mathematics	NOUN	PL-NOM	Number=Plur	24	compound	_	_
24	1)	1)	NOUN	PL-NOM	Number=Plur	20	nmod	_	SpaceAfter=No
25	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 349
# text = Applicants must prove knowledge of English: English 6/English B or the equivalent level of an internationally recognized test, for example TOEFL, IELTS.
1	Applicants	applicant	NOUN	PL-NOM	Number=Plur	3	nsubj	_	_
2	must	must	AUX	PRES-AUX	VerbForm=Fin	3	aux	_	_
3	prove	prive	VERB	INF	VerbForm=Inf	0	root	_	_
4	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	3	obj	_	_
5	of	of	ADP	_	_	6	case	_	_
6	English	english	NOUN	SG-NOM	Case=Nom	4	nmod	_	SpaceAfter=No
7	:	:	PUNCT	Colon	_	3	punct	_	_
8	English	english	NOUN	SG-NOM	Case=Nom	10	compound	_	_
9	6/English	6/English	ADJ	POS	Degree=Pos	10	amod	_	_
10	B	b	PROPN	SG-NOM	Number=Sing	3	appos	_	_
11	or	or	CCONJ	_	_	14	cc	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	14	det	_	_
13	equivalent	equivalent	ADJ	POS	Degree=Pos	14	amod	_	_
14	level	level	NOUN	SG-NOM	Number=Sing	10	conj	_	_
15	of	of	ADP	_	_	19	case	_	_
16	an	an	DET	IND-SG	Definite=Ind|PronType=Art	19	det	_	_
17	internationally	internationally	ADV	_	_	18	advmod	_	_
18	recognized	recognize	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	19	amod	_	_
19	test	test	NOUN	SG-NOM	Number=Sing	14	nmod	_	SpaceAfter=No
20	,	,	PUNCT	Comma	_	23	punct	_	_
21	for	for	ADP	_	_	23	case	_	_
22	example	example	NOUN	_	Number=Sing	23	compound	_	_
23	TOEFL	TOEFL	PROPN	SG-NOM	Number=Sing	25	nmod	_	SpaceAfter=No
24	,	,	PUNCT	Comma	_	23	punct	_	_
25	IELTS	IELTS	PROPN	SG-NOM	Number=Sing	10	flat	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 350
# text = Introduction to Data science and AI
1	Introduction	introduction	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	to	to	ADP	_	_	4	case	_	_
3	Data	data	NOUN	PL-NOM	Number=Sing	4	compound	_	_
4	science	science	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	AI	AI	PROPN	SG-NOM	Number=Sing	4	conj	_	SpacesAfter=\s\n

# sent_id = 351
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n

# sent_id = 352
# text = During the course, a wide selection of methods for Data Science and AI will be introduced.
1	During	during	ADP	_	_	3	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	course	course	NOUN	SG-NOM	Number=Sing	17	obl	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
6	wide	wide	ADJ	POS	Degree=Pos	7	amod	_	_
7	selection	selection	NOUN	SG-NOM	Number=Sing	17	nsubj:pass	_	_
8	of	of	ADP	_	_	9	case	_	_
9	methods	method	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
10	for	for	ADP	_	_	12	case	_	_
11	Data	data	NOUN	PL-NOM	Number=Sing	12	compound	_	_
12	Science	science	NOUN	SG-NOM	Number=Sing	9	nmod	_	_
13	and	and	CCONJ	_	_	14	cc	_	_
14	AI	AI	PROPN	SG-NOM	Number=Sing	12	conj	_	_
15	will	will	AUX	PRES-AUX	VerbForm=Fin	17	aux	_	_
16	be	be	AUX	INF	VerbForm=Inf	17	aux:pass	_	_
17	introduced	introduc	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	17	punct	_	SpacesAfter=\n

# sent_id = 353
# text = The course is divided into three parts:
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	divided	divide	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	into	into	ADP	_	_	7	case	_	_
6	three	three	NUM	CARD-PL	NumType=Card	7	nummod	_	_
7	parts	parts	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
8	:	:	PUNCT	Colon	_	4	punct	_	SpacesAfter=\n

# sent_id = 354
# text = Introduction to data science
1	Introduction	introduction	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	to	to	ADP	_	_	4	case	_	_
3	data	data	NOUN	PL-NOM	Number=Sing	4	compound	_	_
4	science	science	NOUN	SG-NOM	Number=Sing	1	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 355
# text = Implementation of data science solutions, using Python, basic data analysis and visualization.
1	Implementation	implementation	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	of	of	ADP	_	_	5	case	_	_
3	data	data	NOUN	PL-NOM	Number=Sing	4	compound	_	_
4	science	science	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	solutions	solution	NOUN	PL-NOM	Number=Plur	1	nmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	1	punct	_	_
7	using	use	VERB	ING	Tense=Pres|VerbForm=Part	1	conj	_	_
8	Python	Python	PROPN	SG-NOM	Number=Sing	7	obj	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	8	punct	_	_
10	basic	basic	X	NOM	_	11	compound	_	_
11	data	data	NOUN	PL-NOM	Number=Sing	12	compound	_	_
12	analysis	analysis	NOUN	SG-NOM	Number=Sing	8	conj	_	_
13	and	and	CCONJ	_	_	14	cc	_	_
14	visualization	visualization	NOUN	SG-NOM	Number=Sing	8	conj	_	SpaceAfter=No
15	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 356
# text = Introduction of the data science process, and appropriate methodology.
1	Introduction	introduction	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	of	of	ADP	_	_	6	case	_	_
3	the	the	DET	DEF	Definite=Def|PronType=Art	6	det	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	5	compound	_	_
5	science	science	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	process	process	NOUN	SG-NOM	Number=Sing	1	nmod	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	1	punct	_	_
8	and	and	CCONJ	_	_	10	cc	_	_
9	appropriate	appropriate	ADJ	POS	Degree=Pos	10	amod	_	_
10	methodology	methodology	NOUN	SG-NOM	Number=Sing	1	conj	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 357
# text = Examples of core data science methods with case studies such as in clustering, classification and regression.
1	Examples	example	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	of	of	ADP	_	_	6	case	_	_
3	core	core	ADJ	CMP-SG	Degree=Cmp	4	amod	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	6	compound	_	_
5	science	science	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	methods	method	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
7	with	with	ADP	_	_	9	case	_	_
8	case	case	NOUN	SG-NOM	Number=Sing	9	compound	_	_
9	studies	study	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
10	such	such	ADJ	ADJ	_	9	amod	_	_
11	as	as	SCONJ	_	_	13	mark	_	_
12	in	in	ADP	_	_	13	mark	_	_
13	clustering	cluster	VERB	ING	Tense=Pres|VerbForm=Part	10	acl	_	SpaceAfter=No
14	,	,	PUNCT	Comma	_	10	punct	_	_
15	classification	classification	NOUN	SG-NOM	Number=Sing	9	conj	_	_
16	and	and	CCONJ	_	_	17	cc	_	_
17	regression	regression	NOUN	SG-NOM	Number=Sing	15	conj	_	SpaceAfter=No
18	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\s\s\n

# sent_id = 358
# text = Data science put in context regarding ethics, regulations and limitations
1	Data	data	NOUN	PL-NOM	Number=Sing	2	compound	_	_
2	science	science	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	put	put	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
4	in	in	ADP	_	_	5	case	_	_
5	context	context	NOUN	SG-NOM	Number=Sing	3	obl	_	_
6	regarding	regard	VERB	ING	Tense=Pres|VerbForm=Part	3	conj	_	_
7	ethics	ethics	NOUN	PL-NOM	Number=Plur	6	obj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	9	punct	_	_
9	regulations	regulation	NOUN	PL-NOM	Number=Plur	7	conj	_	_
10	and	and	CCONJ	_	_	11	cc	_	_
11	limitations	limitation	NOUN	PL-NOM	Number=Plur	7	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 359
# text = Statistical methods for data science and AI
1	Statistical	Statistical	ADJ	POS	Degree=Pos	2	amod	_	_
2	methods	method	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	for	for	ADP	_	_	5	case	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	5	compound	_	_
5	science	science	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	AI	AI	PROPN	SG-NOM	Number=Sing	5	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 360
# text = Introduction of some common stochastic models with examples of applications indata science and AI (for instance, naive Bayes classifiers, topic models for text and Hidden Markov Models for sequence data).
1	Introduction	introduction	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	of	of	ADP	_	_	6	case	_	_
3	some	some	DET	IND	_	6	det	_	_
4	common	common	ADJ	POS	Degree=Pos	6	amod	_	_
5	stochastic	stochastic	ADJ	POS	Degree=Pos	6	amod	_	_
6	models	model	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
7	with	with	ADP	_	_	8	case	_	_
8	examples	examples	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	of	of	ADP	_	_	10	case	_	_
10	applications	application	NOUN	PL-NOM	Number=Plur	12	compound	_	_
11	indata	indata	DET	IND-SG	Definite=Ind|PronType=Art	12	det	_	_
12	science	science	NOUN	SG-NOM	Number=Sing	8	nmod	_	_
13	and	and	CCONJ	_	_	14	cc	_	_
14	AI	AI	PROPN	SG-NOM	Number=Sing	12	conj	_	_
15	(	(	PUNCT	LeftParenthesis	_	17	punct	_	SpaceAfter=No
16	for	for	ADP	_	_	17	case	_	_
17	instance	instance	NOUN	SG-NOM	Number=Sing	12	appos	_	SpaceAfter=No
18	,	,	PUNCT	Comma	_	17	punct	_	_
19	naive	naive	NUM	CARD-PL	_	21	nummod	_	_
20	Bayes	Baye	NOUN	SG-NOM	Number=Sing	21	compound	_	_
21	classifiers	classifier	NOUN	PL-NOM	Number=Plur	17	conj	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	17	punct	_	_
23	topic	topic	ADJ	POS	Degree=Pos	24	amod	_	_
24	models	model	NOUN	PL-NOM	Number=Plur	17	conj	_	_
25	for	for	ADP	_	_	26	case	_	_
26	text	text	NOUN	SG-NOM	Number=Sing	24	nmod	_	_
27	and	and	CCONJ	_	_	30	cc	_	_
28	Hidden	hide	PROPN	SG-NOM	Case=Nom	30	compound	_	_
29	Markov	Markov	PROPN	SG-NOM	Number=Sing	28	flat	_	_
30	Models	Model	NOUN	PL-NOM	Number=Plur	17	conj	_	_
31	for	for	ADP	_	_	33	case	_	_
32	sequence	sequence	NOUN	SG-NOM	Number=Sing	33	compound	_	_
33	data	data	NOUN	PL-NOM	Number=Sing	30	nmod	_	SpaceAfter=No
34	)	)	PUNCT	RightParenthesis	_	17	punct	_	SpaceAfter=No
35	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 361
# text = Artificial Intelligence
1	Artificial	artificial	ADJ	POS	Degree=Pos	2	amod	_	_
2	Intelligence	intelligence	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 362
# text = Introduction to classical AI and machine learning, including the relationship torelated areas such as algorithms and optimization, and AI philosophy.
1	Introduction	introduction	NOUN	SG-NOM	Number=Sing	7	nsubj	_	_
2	to	to	ADP	_	_	4	case	_	_
3	classical	classical	ADJ	POS	Degree=Pos	4	amod	_	_
4	AI	AI	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	machine	machine	NOUN	SG-NOM	Number=Sing	4	conj	_	_
7	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	7	punct	_	_
9	including	include	VERB	ING	Tense=Pres|VerbForm=Part	12	advcl	_	_
10	the	the	DET	DEF	Definite=Def|PronType=Art	11	det	_	_
11	relationship	relationship	NOUN	SG-NOM	Number=Sing	12	nsubj	_	_
12	torelated	torelate	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	7	conj	_	_
13	areas	area	NOUN	PL-NOM	Number=Plur	22	compound	_	_
14	such	such	ADJ	ADJ	Case=Nom	22	amod	_	_
15	as	as	ADP	_	_	16	case	_	_
16	algorithms	algorithm	NOUN	PL-NOM	Number=Plur	14	nmod	_	_
17	and	and	CCONJ	_	_	18	cc	_	_
18	optimization	optimization	NOUN	SG-NOM	Number=Sing	16	conj	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	14	punct	_	_
20	and	and	CCONJ	_	_	21	cc	_	_
21	AI	AI	PROPN	SG-NOM	Number=Sing	14	conj	_	_
22	philosophy	philosophy	NOUN	SG-NOM	Number=Sing	12	obj	_	SpaceAfter=No
23	.	.	PUNCT	Period	_	7	punct	_	SpacesAfter=\n

# sent_id = 363
# text = Examples of methods and applications of AI, in classical AI (search and constraint satisfaction), and ML-based (search engines, naive Bayes and neural networks)
1	Examples	example	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	of	of	ADP	_	_	3	case	_	_
3	methods	method	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	applications	application	NOUN	PL-NOM	Number=Plur	3	conj	_	_
6	of	of	ADP	_	_	7	case	_	_
7	AI	AI	PROPN	SG-NOM	Number=Sing	5	nmod	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	1	punct	_	_
9	in	in	ADP	_	_	11	case	_	_
10	classical	classical	ADJ	POS	Degree=Pos	11	amod	_	_
11	AI	AI	NOUN	SG-NOM	Number=Sing	1	nmod	_	_
12	(	(	PUNCT	LeftParenthesis	_	13	punct	_	SpaceAfter=No
13	search	search	NOUN	SG-NOM	Number=Sing	11	appos	_	_
14	and	and	CCONJ	_	_	16	cc	_	_
15	constraint	constraint	ADJ	POS	Degree=Pos	16	amod	_	_
16	satisfaction	satisfaction	NOUN	SG-NOM	Number=Sing	13	conj	_	SpaceAfter=No
17	)	)	PUNCT	RightParenthesis	_	13	punct	_	SpaceAfter=No
18	,	,	PUNCT	Comma	_	13	punct	_	_
19	and	and	CCONJ	_	_	20	cc	_	_
20	ML-based	Ml-based	NOUN	SG-NOM	Number=Sing	13	conj	_	_
21	(	(	PUNCT	LeftParenthesis	_	13	punct	_	SpaceAfter=No
22	search	search	NOUN	SG-NOM	Number=Sing	23	compound	_	_
23	engines	engine	NOUN	PL-NOM	Number=Plur	13	conj	_	SpaceAfter=No
24	,	,	PUNCT	Comma	_	23	punct	_	_
25	naive	naive	ADJ	POS	Degree=Pos	26	amod	_	_
26	Bayes	Baye	NOUN	PL-NOM	Number=Plur	13	conj	_	_
27	and	and	CCONJ	_	_	29	cc	_	_
28	neural	neural	ADJ	POS	Degree=Pos	29	amod	_	_
29	networks	network	NOUN	PL-NOM	Number=Plur	13	conj	_	SpaceAfter=No
30	)	)	PUNCT	RightParenthesis	_	13	punct	_	SpacesAfter=\s\s\s\n

# sent_id = 364
# text = Discussion of ethics and societal impact of AI.
1	Discussion	discussion	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	of	of	ADP	_	_	3	case	_	_
3	ethics	ethics	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
4	and	and	CCONJ	_	_	6	cc	_	_
5	societal	societal	ADJ	POS	Degree=Pos	6	amod	_	_
6	impact	impact	NOUN	SG-NOM	Number=Sing	3	conj	_	_
7	of	of	ADP	_	_	8	case	_	_
8	AI	AI	PROPN	SG-NOM	Number=Sing	6	nmod	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 365
# text = Research Methods for Data Science
1	Research	research	ADJ	POS	Degree=Pos	2	amod	_	_
2	Methods	method	NOUN	PL-NOM	Number=Plur	5	compound	_	_
3	for	for	ADP	_	_	4	case	_	_
4	Data	data	NOUN	PL-NOM	Number=Sing	2	nmod	_	_
5	Science	science	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 366
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 367
# text = The following topics are covered in the course:
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	following	follow	ADJ	ING	Case=Nom	3	amod	_	_
3	topics	topic	NOUN	PL-NOM	Number=Plur	5	nsubj:pass	_	_
4	are	be	AUX	PRES-AUX	Mood=Ind|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	covered	cover	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
6	in	in	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	course	course	NOUN	SG-NOM	Number=Sing	5	obl	_	SpaceAfter=No
9	:	:	PUNCT	Colon	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 368
# text = technical writing in data science, being practiced on a topic of free choice and on a research proposal
1	technical	technical	ADJ	POS	Degree=Pos	0	root	_	_
2	writing	write	VERB	ING	Tense=Pres|VerbForm=Part	1	acl	_	_
3	in	in	ADP	_	_	5	case	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	5	compound	_	_
5	science	science	NOUN	SG-NOM	Number=Sing	2	obl	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	8	punct	_	_
7	being	be	AUX	ING	Tense=Pres|VerbForm=Part	8	aux:pass	_	_
8	practiced	practice	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	conj	_	_
9	on	on	ADP	_	_	11	case	_	_
10	a	a	DET	IND-SG	Definite=Ind|PronType=Art	11	det	_	_
11	topic	topic	NOUN	SG-NOM	Number=Sing	8	obl	_	_
12	of	of	ADP	_	_	14	case	_	_
13	free	free	ADJ	POS	Degree=Pos	14	amod	_	_
14	choice	choice	NOUN	PL-NOM	Number=Plur	11	nmod	_	_
15	and	and	CCONJ	_	_	19	cc	_	_
16	on	on	ADP	_	_	19	case	_	_
17	a	a	DET	IND-SG	Definite=Ind|PronType=Art	19	det	_	_
18	research	research	NOUN	SG-NOM	Number=Sing	19	compound	_	_
19	proposal	proposal	NOUN	SG-NOM	Number=Sing	8	conj	_	SpacesAfter=\n

# sent_id = 369
# text = structuring a scientific text
1	structuring	structur	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	a	a	DET	IND-SG	Definite=Ind|PronType=Art	4	det	_	_
3	scientific	scientific	ADJ	POS	Degree=Pos	4	amod	_	_
4	text	text	NOUN	SG-NOM	Number=Sing	1	obj	_	SpacesAfter=\n

# sent_id = 370
# text = communicating a topic to different audiences
1	communicating	communicate	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	a	a	DET	IND-SG	Definite=Ind|PronType=Art	3	det	_	_
3	topic	topic	NOUN	SG-NOM	Number=Sing	1	obj	_	_
4	to	to	ADP	_	_	6	case	_	_
5	different	different	ADJ	POS	Degree=Pos	6	amod	_	_
6	audiences	audience	NOUN	PL-NOM	Number=Plur	1	obl	_	SpacesAfter=\n

# sent_id = 371
# text = theories on ethics, with examples from data science
1	theories	theories	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	on	on	ADP	_	_	3	case	_	_
3	ethics	ethics	NOUN	PL-NOM	Number=Plur	1	nmod	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	1	punct	_	_
5	with	with	ADP	_	_	6	case	_	_
6	examples	examples	NOUN	PL-NOM	Number=Plur	1	nmod	_	_
7	from	from	ADP	_	_	9	case	_	_
8	data	data	NOUN	PL-NOM	Number=Sing	9	compound	_	_
9	science	science	NOUN	SG-NOM	Number=Sing	6	nmod	_	SpacesAfter=\n

# sent_id = 372
# text = identification and analysis of ethical and societal issues in data science
1	identification	identification	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	analysis	analysis	NOUN	SG-NOM	Number=Sing	1	conj	_	_
4	of	of	ADP	_	_	8	case	_	_
5	ethical	ethical	ADJ	POS	Degree=Pos	8	amod	_	_
6	and	and	CCONJ	_	_	7	cc	_	_
7	societal	societal	ADJ	POS	Degree=Pos	5	conj	_	_
8	issues	issue	NOUN	PL-NOM	Number=Plur	3	nmod	_	_
9	in	in	ADP	_	_	11	case	_	_
10	data	data	NOUN	PL-NOM	Number=Sing	11	compound	_	_
11	science	science	NOUN	SG-NOM	Number=Sing	8	nmod	_	SpacesAfter=\n

# sent_id = 373
# text = ethics and good practice in research and publishing
1	ethics	ethics	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	4	cc	_	_
3	good	good	ADJ	POS	Degree=Pos	4	amod	_	_
4	practice	practice	NOUN	SG-NOM	Number=Sing	1	conj	_	_
5	in	in	ADP	_	_	6	case	_	_
6	research	research	NOUN	SG-NOM	Number=Sing	4	nmod	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	publishing	publish	VERB	ING	Tense=Pres|VerbForm=Part	1	conj	_	SpacesAfter=\n\n

# newpar
# sent_id = 374
# text = Computer communication
1	Computer	computer	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	communication	communication	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 375
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 376
# text = In the study of protocols, we start with application level protocols enabling the student to start with more familiar paradigms in the context of applications that we use regularly.
1	In	in	ADP	_	_	3	case	_	_
2	the	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
3	study	study	NOUN	SG-NOM	Number=Sing	8	obl	_	_
4	of	of	ADP	_	_	5	case	_	_
5	protocols	protocol	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	3	punct	_	_
7	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	8	nsubj	_	_
8	start	start	NOUN	SG-NOM	Number=Sing	0	root	_	_
9	with	with	ADP	_	_	12	case	_	_
10	application	application	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	level	level	NOUN	SG-NOM	Number=Sing	12	compound	_	_
12	protocols	protocol	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
13	enabling	enable	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
14	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
15	student	student	NOUN	SG-NOM	Number=Sing	13	obj	_	_
16	to	to	PART	_	_	17	mark	_	_
17	start	start	VERB	INF	VerbForm=Inf	15	acl	_	_
18	with	with	ADP	_	_	21	case	_	_
19	more	very	ADJ	CMP-PL	Degree=Cmp	21	amod	_	_
20	familiar	familiar	ADJ	POS	Degree=Pos	21	amod	_	_
21	paradigms	paradigm	NOUN	PL-NOM	Number=Plur	17	obl	_	_
22	in	in	ADP	_	_	24	case	_	_
23	the	the	DET	DEF	Definite=Def|PronType=Art	24	det	_	_
24	context	context	NOUN	SG-NOM	Number=Sing	21	nmod	_	_
25	of	of	ADP	_	_	26	case	_	_
26	applications	application	NOUN	PL-NOM	Number=Plur	24	nmod	_	_
27	that	that	PRON	REL	PronType=Rel	29	obj	_	_
28	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	29	nsubj	_	_
29	use	use	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	26	acl:relcl	_	_
30	regularly	regularly	ADV	_	_	29	advmod	_	SpaceAfter=No
31	.	.	PUNCT	Period	_	8	punct	_	SpacesAfter=\s\n

# sent_id = 377
# text = Moving to lower layers later in the course, we have the possibility to gradually uncover network services, their functionality and the ease/difficulty for achieving them.
1	Moving	move	VERB	ING	Tense=Pres|VerbForm=Part	11	advcl	_	_
2	to	to	ADP	_	_	4	case	_	_
3	lower	low	ADJ	CMP	Degree=Cmp	4	amod	_	_
4	layers	layer	NOUN	PL-NOM	Number=Plur	1	obl	_	_
5	later	late	ADV	CMP	_	1	advmod	_	_
6	in	in	ADP	_	_	8	case	_	_
7	the	the	DET	DEF	Definite=Def|PronType=Art	8	det	_	_
8	course	course	NOUN	SG-NOM	Number=Sing	1	obl	_	SpaceAfter=No
9	,	,	PUNCT	Comma	_	1	punct	_	_
10	we	we	PRON	PERS-P1PL-NOM	Case=Nom|Number=Plur|Person=1|PronType=Prs	11	nsubj	_	_
11	have	have	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	_
12	the	the	DET	DEF	Definite=Def|PronType=Art	13	det	_	_
13	possibility	possibility	NOUN	SG-NOM	Number=Sing	11	obj	_	_
14	to	to	PART	_	_	15	mark	_	_
15	gradually	gradually	VERB	INF	VerbForm=Inf	13	acl	_	_
16	uncover	uncover	ADP	_	_	18	case	_	_
17	network	network	NOUN	SG-NOM	Number=Sing	18	compound	_	_
18	services	service	NOUN	PL-NOM	Number=Plur	15	obl	_	SpaceAfter=No
19	,	,	PUNCT	Comma	_	21	punct	_	_
20	their	they	PRON	P3PL-GEN	_	21	nmod:poss	_	_
21	functionality	functionality	NOUN	SG-NOM	Number=Sing	11	obj	_	_
22	and	and	CCONJ	_	_	24	cc	_	_
23	the	the	DET	DEF	Definite=Def|PronType=Art	24	det	_	_
24	ease/difficulty	ease/difficulty	NOUN	SG-NOM	Number=Sing	21	conj	_	_
25	for	for	ADP	_	_	26	mark	_	_
26	achieving	achieve	VERB	ING	Tense=Pres|VerbForm=Part	24	acl	_	_
27	them	they	PRON	PERS-P3PL-ACC	Case=Acc|Number=Plur|Person=3|PronType=Prs	26	obj	_	SpaceAfter=No
28	.	.	PUNCT	Period	_	11	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 378
# text = Topics covered include:
1	Topics	Topics	NOUN	PL-NOM	Number=Plur	2	nsubj	_	_
2	covered	cover	VERB	PAST	Mood=Ind|Tense=Past|VerbForm=Fin	0	root	_	_
3	include	include	ADV	_	_	2	advmod	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 379
# text = Networking applications and protocol; HTTP, SMTP and DNS.
1	Networking	Network	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	applications	application	NOUN	PL-NOM	Number=Plur	1	obj	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	protocol	protocol	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
5	;	;	PUNCT	SemiColon	_	1	punct	_	_
6	HTTP	HTTP	PROPN	SG-NOM	Number=Sing	1	appos	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	SMTP	SMTP	PROPN	SG-NOM	Number=Sing	6	conj	_	_
9	and	and	CCONJ	_	_	10	cc	_	_
10	DNS	DNS	PROPN	SG-NOM	Number=Sing	6	conj	_	SpaceAfter=No
11	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 380
# text = Transport protocols TCP, UDP.
1	Transport	transport	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	protocols	protocol	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	TCP	TCP	PROPN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	3	punct	_	_
5	UDP	UDP	PROPN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 381
# text = Content distribution systems.
1	Content	content	ADJ	POS	Degree=Pos	3	amod	_	_
2	distribution	distribution	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	systems	system	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
4	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 382
# text = Performance and congestion control.
1	Performance	performance	NOUN	SG-NOM	Number=Sing	4	compound	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	congestion	congestion	NOUN	SG-NOM	Number=Sing	1	conj	_	_
4	control	control	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n

# sent_id = 383
# text = Internet Protocol ITv4 and addressing.
1	Internet	Internet	PROPN	SG-NOM	Case=Nom	2	compound	_	_
2	Protocol	protocol	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	ITv4	Itv4	NUM	ID	_	0	root	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	addressing	address	VERB	ING	Tense=Pres|VerbForm=Part	3	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 384
# text = Internet routing, mobile IPTv4.
1	Internet	Internet	PROPN	SG-NOM	Case=Nom	2	nsubj	_	_
2	routing	rout	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	mobile	mobile	ADJ	POS	Degree=Pos	5	amod	_	_
5	IPTv4	Iptv4	NOUN	SG-NOM	Number=Sing	2	obj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 385
# text = Local area networks LANs, medium access protocols; MAC protocols (IEEE 802.X and others),
1	Local	local	ADJ	POS	Degree=Pos	2	amod	_	_
2	area	area	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	networks	networks	NOUN	PL-NOM	Number=Plur	4	compound	_	_
4	LANs	Lan	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	medium	medium	NOUN	PL-NOM	Number=Plur	8	compound	_	_
7	access	access	NOUN	SG-NOM	Number=Sing	8	compound	_	_
8	protocols	protocol	NOUN	PL-NOM	Number=Plur	4	conj	_	SpaceAfter=No
9	;	;	PUNCT	SemiColon	_	4	punct	_	_
10	MAC	MAC	NOUN	SG-NOM	Number=Sing	11	compound	_	_
11	protocols	protocol	NOUN	PL-NOM	Number=Plur	4	conj	_	_
12	(	(	PUNCT	LeftParenthesis	_	13	punct	_	SpaceAfter=No
13	IEEE	IEEE	VERB	IMP	Mood=Imp|VerbForm=Fin	11	appos	_	_
14	802.X	802.X	PROPN	SG-NOM	Number=Sing	13	obj	_	_
15	and	and	CCONJ	_	_	16	cc	_	_
16	others	other	PRON	IND-PL-NOM	Case=Nom	14	conj	_	SpaceAfter=No
17	)	)	PUNCT	RightParenthesis	_	13	punct	_	SpaceAfter=No
18	,	,	PUNCT	Comma	_	4	punct	_	SpacesAfter=\n

# sent_id = 386
# text = Ethernet, switches and VLANs.
1	Ethernet	Ethernet	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
2	,	,	PUNCT	Comma	_	3	punct	_	_
3	switches	switch	NOUN	PL-NOM	Number=Plur	1	conj	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	VLANs	Vlan	NOUN	PL-NOM	Number=Plur	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 387
# text = Wireless LAN especially Wifi, Access Points, bridges and physical media.
1	Wireless	wireless	SCONJ	_	_	7	case	_	_
2	LAN	Lan	PROPN	SG-NOM	Number=Sing	7	compound	_	_
3	especially	especially	ADV	_	_	4	advmod	_	_
4	Wifi	Wifi	PROPN	SG-NOM	Number=Sing	2	flat	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	Access	Access	PROPN	SG-NOM	Case=Nom	7	compound	_	_
7	Points	point	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	9	punct	_	_
9	bridges	bridge	NOUN	PL-NOM	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	_	_	12	cc	_	_
11	physical	physical	ADJ	POS	Degree=Pos	12	amod	_	_
12	media	medium	NOUN	PL-NOM	Number=Plur	9	conj	_	SpaceAfter=No
13	.	.	PUNCT	Period	_	7	punct	_	SpacesAfter=\n

# sent_id = 388
# text = Detection and correction of bit errors.
1	Detection	Detection	NOUN	SG-NOM	Number=Sing	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	correction	correction	NOUN	SG-NOM	Number=Sing	1	conj	_	_
4	of	of	ADP	_	_	6	case	_	_
5	bit	bit	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	errors	error	NOUN	PL-NOM	Number=Plur	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	Period	_	1	punct	_	SpacesAfter=\n

# sent_id = 389
# text = Multimedia applications and network security.
1	Multimedia	Multimedia	PROPN	SG-NOM	Number=Sing	2	compound	_	_
2	applications	application	NOUN	PL-NOM	Number=Plur	5	compound	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	network	network	NOUN	SG-NOM	Number=Sing	2	conj	_	_
5	security	security	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 390
# text = Natural language processing
1	Natural	natural	ADJ	POS	Degree=Pos	2	amod	_	_
2	language	language	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	processing	process	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 391
# text = Summary
1	Summary	Summary	ADV	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 392
# text = This course gives a theoretical view of problems encountered within Natural Language Processing and some solutions.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	gives	give	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	6	det	_	_
5	theoretical	theoretical	ADJ	POS	Degree=Pos	6	amod	_	_
6	view	view	NOUN	SG-NOM	Number=Sing	3	obj	_	_
7	of	of	ADP	_	_	8	case	_	_
8	problems	problem	NOUN	PL-NOM	Number=Plur	6	nmod	_	_
9	encountered	encounter	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	8	acl	_	_
10	within	within	ADP	_	_	12	case	_	_
11	Natural	natural	ADJ	POS	Degree=Pos	12	amod	_	_
12	Language	language	NOUN	SG-NOM	Number=Sing	9	obl	_	_
13	Processing	Processe	VERB	ING	Mood=Ind|Tense=Pres|VerbForm=Part	3	xcomp	_	_
14	and	and	CCONJ	_	_	16	cc	_	_
15	some	some	DET	IND	_	16	det	_	_
16	solutions	solution	NOUN	PL-NOM	Number=Plur	13	conj	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 393
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 394
# text = The course is divided into four main topics: one covering basic concepts and three covering subfields of NLP ? words, syntax and semantics/pragmatics.
1	The	the	DET	DEF	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	PRES-AUX	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	divided	divide	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	_
5	into	into	ADP	_	_	8	case	_	_
6	four	four	NUM	CARD-PL	NumType=Card	8	nummod	_	_
7	main	main	ADJ	POS	Degree=Pos	8	amod	_	_
8	topics	topics	NOUN	PL-NOM	Number=Plur	4	obl	_	SpaceAfter=No
9	:	:	PUNCT	Colon	_	4	punct	_	_
10	one	one	PRON	IND-P3SG	_	11	nsubj	_	_
11	covering	cover	VERB	ING	Tense=Pres|VerbForm=Part	4	conj	_	_
12	basic	basic	ADJ	POS	Degree=Pos	13	amod	_	_
13	concepts	concept	NOUN	PL-NOM	Number=Plur	11	obj	_	_
14	and	and	CCONJ	_	_	16	cc	_	_
15	three	three	NUM	CARD-PL	NumType=Card	16	nummod	_	_
16	covering	cover	VERB	ING	Tense=Pres|VerbForm=Part	11	conj	_	_
17	subfields	subfield	NOUN	PL-NOM	Number=Plur	16	obj	_	_
18	of	of	ADP	_	_	19	case	_	_
19	NLP	NLP	PROPN	SG-NOM	Number=Sing	17	nmod	_	_
20	?	?	PUNCT	QuestionMark	_	16	punct	_	_
21	words	word	NOUN	PL-NOM	Number=Plur	11	conj	_	SpaceAfter=No
22	,	,	PUNCT	Comma	_	21	punct	_	_
23	syntax	syntax	NOUN	SG-NOM	Number=Sing	11	conj	_	_
24	and	and	CCONJ	_	_	25	cc	_	_
25	semantics/pragmatics	semantics/pragmatics	NOUN	PL-NOM	Number=Plur	23	conj	_	SpaceAfter=No
26	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n

# sent_id = 395
# text = 1. Basic concepts:
1	1	1	NUM	ID	NumType=Card	3	discourse	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	_
3	Basic	Basic	PROPN	SG-NOM	Number=Sing	4	nsubj	_	_
4	concepts	concepts	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
5	:	:	PUNCT	Colon	_	4	punct	_	SpacesAfter=\n

# sent_id = 396
# text = Basic concepts in NLP.
1	Basic	Basic	PROPN	SG-NOM	Number=Sing	2	nsubj	_	_
2	concepts	concepts	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	in	in	ADP	_	_	4	case	_	_
4	NLP	NLP	PROPN	SG-NOM	Number=Sing	2	obl	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 397
# text = Automata theory and mathematical linguistics.
1	Automata	Automata	DET	IND-SG	Definite=Ind|PronType=Art	2	det	_	_
2	theory	theory	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	and	and	CCONJ	_	_	5	cc	_	_
4	mathematical	mathematical	ADJ	POS	Degree=Pos	5	amod	_	_
5	linguistics	linguistics	NOUN	PL-NOM	Number=Plur	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 398
# text = Probability theory and machine learning.
1	Probability	probability	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	theory	theory	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	and	and	CCONJ	_	_	5	cc	_	_
4	machine	machine	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	learning	learn	NOUN	SG-NOM	Case=Nom	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 399
# text = Evaluation measurement, correctness, precision, and recall.
1	Evaluation	evaluation	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	measurement	measurement	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	correctness	correctness	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	precision	precision	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
7	,	,	PUNCT	Comma	_	6	punct	_	_
8	and	and	CCONJ	_	_	9	cc	_	_
9	recall	recall	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
10	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 400
# text = 2. Words:
1	2	2	NUM	ID	NumType=Card	3	discourse	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	_
3	Words	word	NOUN	PL-NOM	Case=Nom	0	root	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n

# sent_id = 401
# text = Corpora and corpus annotation.
1	Corpora	Corpora	ADJ	POS	Degree=Pos	4	amod	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	corpus	corpus	ADJ	POS	Degree=Pos	1	conj	_	_
4	annotation	annotation	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	Period	_	4	punct	_	SpacesAfter=\n

# sent_id = 402
# text = Finite-state methods for segmentation and morphological analysis.
1	Finite-state	Finite-state	ADJ	POS	Degree=Pos	2	amod	_	_
2	methods	method	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	for	for	ADP	_	_	4	case	_	_
4	segmentation	segmentation	NOUN	SG-NOM	Number=Sing	2	nmod	_	_
5	and	and	CCONJ	_	_	7	cc	_	_
6	morphological	morphological	ADJ	POS	Degree=Pos	7	amod	_	_
7	analysis	analysis	NOUN	SG-NOM	Number=Sing	4	conj	_	SpaceAfter=No
8	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 403
# text = Statistical language modeling with n-gram markov models.
1	Statistical	Statistical	ADJ	POS	Degree=Pos	2	amod	_	_
2	language	language	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	modeling	model	VERB	ING	Tense=Pres|VerbForm=Part	2	acl	_	_
4	with	with	ADP	_	_	7	case	_	_
5	n-gram	n-gram	NOUN	SG-NOM	Number=Sing	7	compound	_	_
6	markov	markov	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	models	model	NOUN	PL-NOM	Number=Plur	3	obl	_	SpaceAfter=No
8	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 404
# text = 3. Syntax:
1	3	3	NUM	ID	NumType=Card	3	discourse	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	_
3	Syntax	syntax	NOUN	SG-NOM	Number=Sing	0	root	_	SpaceAfter=No
4	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n

# sent_id = 405
# text = Part-of-speech tagging and chunking/partial parsing, making use of methods within machine learning or/and finite-state technology.
1	Part-of-speech	Part-of-speech	NOUN	SG-NOM	Number=Sing	2	nsubj	_	_
2	tagging	tag	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	chunking/partial	chunking/partial	ADJ	POS	Degree=Pos	2	conj	_	_
5	parsing	parse	VERB	ING	Tense=Pres|VerbForm=Part	2	conj	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	making	make	VERB	ING	Tense=Pres|VerbForm=Part	2	conj	_	_
8	use	use	NOUN	SG-NOM	Number=Sing	7	obj	_	_
9	of	of	ADP	_	_	10	case	_	_
10	methods	method	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
11	within	within	ADP	_	_	12	case	_	_
12	machine	machine	NOUN	SG-NOM	Number=Sing	10	nmod	_	_
13	learning	learn	VERB	ING	Tense=Pres|VerbForm=Part	12	acl	_	_
14	or/and	or/and	ADJ	POS	Degree=Pos	16	amod	_	_
15	finite-state	finite-state	ADJ	POS	Degree=Pos	16	amod	_	_
16	technology	technology	NOUN	SG-NOM	Number=Sing	13	obj	_	SpaceAfter=No
17	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 406
# text = Common formal grammars, such as feature based and probabilistic context-free grammars.
1	Common	common	ADP	_	_	3	case	_	_
2	formal	formal	ADJ	POS	Degree=Pos	3	amod	_	_
3	grammars	grammar	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
4	,	,	PUNCT	Comma	_	5	punct	_	_
5	such	such	ADJ	ADJ	Case=Nom	3	amod	_	_
6	as	as	ADP	_	_	7	case	_	_
7	feature	feature	NOUN	SG-NOM	Case=Nom	5	nmod	_	_
8	based	base	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	7	acl	_	_
9	and	and	CCONJ	_	_	12	cc	_	_
10	probabilistic	probabilistic	ADJ	POS	Degree=Pos	12	amod	_	_
11	context-free	context-free	ADJ	POS	Degree=Pos	12	amod	_	_
12	grammars	grammar	NOUN	PL-NOM	Number=Plur	8	conj	_	SpaceAfter=No
13	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 407
# text = Syntactic parsing.
1	Syntactic	Syntactic	ADJ	POS	Degree=Pos	2	amod	_	_
2	parsing	parse	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	SpaceAfter=No
3	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 408
# text = 4. Semantics and Pragmatics:
1	4	4	NUM	ID	NumType=Card	3	discourse	_	SpaceAfter=No
2	.	.	PUNCT	Period	_	1	punct	_	_
3	Semantics	Semantics	NOUN	PL-NOM	Number=Plur	0	root	_	_
4	and	and	CCONJ	_	_	5	cc	_	_
5	Pragmatics	Pragmatics	NOUN	PL-NOM	Number=Plur	3	conj	_	SpaceAfter=No
6	:	:	PUNCT	Colon	_	3	punct	_	SpacesAfter=\n

# sent_id = 409
# text = Lexical semantics, lexica, Wordnet and FrameNet.
1	Lexical	Lexical	ADJ	POS	Degree=Pos	2	amod	_	_
2	semantics	semantics	NOUN	PL-NOM	Number=Plur	0	root	_	SpaceAfter=No
3	,	,	PUNCT	Comma	_	2	punct	_	_
4	lexica	lexica	NOUN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
5	,	,	PUNCT	Comma	_	4	punct	_	_
6	Wordnet	Wordnet	PROPN	SG-NOM	Case=Nom	2	conj	_	_
7	and	and	CCONJ	_	_	8	cc	_	_
8	FrameNet	FrameNet	PROPN	SG-NOM	Number=Sing	2	conj	_	SpaceAfter=No
9	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n

# sent_id = 410
# text = Word sense disambiguation with machine learning.
1	Word	Word	PROPN	SG-NOM	Number=Sing	3	compound	_	_
2	sense	sense	NOUN	SG-NOM	Number=Sing	3	compound	_	_
3	disambiguation	disambiguation	NOUN	SG-NOM	Number=Sing	0	root	_	_
4	with	with	ADP	_	_	6	case	_	_
5	machine	machine	NOUN	SG-NOM	Number=Sing	6	compound	_	_
6	learning	learn	NOUN	SG-NOM	Case=Nom	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\n

# sent_id = 411
# text = Text classification with machine learning.
1	Text	text	ADJ	POS	Degree=Pos	2	amod	_	_
2	classification	classification	NOUN	SG-NOM	Number=Sing	0	root	_	_
3	with	with	ADP	_	_	5	case	_	_
4	machine	machine	NOUN	SG-NOM	Number=Sing	5	compound	_	_
5	learning	learn	NOUN	SG-NOM	Case=Nom	2	nmod	_	SpaceAfter=No
6	.	.	PUNCT	Period	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 412
# text = Functional Programming
1	Functional	Functional	ADJ	POS	Degree=Pos	2	amod	_	_
2	Programming	programming	NOUN	SG-NOM	Number=Sing	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 413
# text = About
1	About	about	ADP	_	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 414
# text = This course introduces a functional programming language and related concepts to students that already have some knowledge in programming.
1	This	this	DET	DEM-SG	Number=Sing|PronType=Dem	2	det	_	_
2	course	course	NOUN	SG-NOM	Number=Sing	3	nsubj	_	_
3	introduces	introduc	VERB	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	a	a	DET	IND-SG	Definite=Ind|PronType=Art	7	det	_	_
5	functional	functional	ADJ	POS	Degree=Pos	7	amod	_	_
6	programming	programming	NOUN	SG-NOM	Number=Sing	7	compound	_	_
7	language	language	NOUN	SG-NOM	Number=Sing	3	obj	_	_
8	and	and	CCONJ	_	_	10	cc	_	_
9	related	relate	ADJ	PASS	Degree=Pos	10	amod	_	_
10	concepts	concept	NOUN	PL-NOM	Number=Plur	7	conj	_	_
11	to	to	ADP	_	_	12	case	_	_
12	students	student	NOUN	PL-NOM	Number=Plur	10	nmod	_	_
13	that	that	PRON	REL	PronType=Rel	15	nsubj	_	_
14	already	already	ADV	_	_	15	advmod	_	_
15	have	have	VERB	PRES	Mood=Ind|Tense=Pres|VerbForm=Fin	12	acl:relcl	_	_
16	some	some	DET	IND	_	17	det	_	_
17	knowledge	knowledge	NOUN	SG-NOM	Number=Sing	15	obj	_	_
18	in	in	ADP	_	_	19	mark	_	_
19	programming	programming	VERB	ING	Tense=Pres|VerbForm=Part	17	acl	_	SpaceAfter=No
20	.	.	PUNCT	Period	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 415
# text = The primary goal is to make it possible for students to apply the functional approach to write realistic (small to medium-sized) programs, and transfer general programming skills to the functional programming domain.
1	The	the	DET	DEF	Definite=Def|PronType=Art	3	det	_	_
2	primary	primary	ADJ	POS	Degree=Pos	3	amod	_	_
3	goal	goal	NOUN	SG-NOM	Number=Sing	6	nsubj	_	_
4	is	be	AUX	PRES	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
5	to	to	PART	_	_	6	mark	_	_
6	make	make	VERB	INF	VerbForm=Inf	0	root	_	_
7	it	it	PRON	PERS-SG	_	6	obj	_	_
8	possible	possible	ADJ	POS	Degree=Pos	6	xcomp	_	_
9	for	for	ADP	_	_	10	case	_	_
10	students	student	NOUN	PL-NOM	Number=Plur	8	nmod	_	_
11	to	to	PART	_	_	12	mark	_	_
12	apply	apply	VERB	INF	VerbForm=Inf	10	acl	_	_
13	the	the	DET	DEF	Definite=Def|PronType=Art	15	det	_	_
14	functional	functional	ADJ	POS	Degree=Pos	15	amod	_	_
15	approach	approach	NOUN	SG-NOM	Number=Sing	12	obj	_	_
16	to	to	PART	_	_	17	mark	_	_
17	write	write	VERB	INF	VerbForm=Inf	12	xcomp	_	_
18	realistic	realistic	ADJ	POS	Degree=Pos	17	xcomp	_	_
19	(	(	PUNCT	LeftParenthesis	_	20	punct	_	SpaceAfter=No
20	small	small	ADJ	POS	Degree=Pos	30	amod	_	_
21	to	to	ADP	_	_	24	case	_	_
22	medium-sized	medium-size	ADJ	PASS	Degree=Pos	24	amod	_	SpaceAfter=No
23	)	)	PUNCT	RightParenthesis	_	22	punct	_	_
24	programs	program	NOUN	PL-NOM	Number=Plur	20	nmod	_	SpaceAfter=No
25	,	,	PUNCT	Comma	_	20	punct	_	_
26	and	and	CCONJ	_	_	27	cc	_	_
27	transfer	transfer	VERB	INF	VerbForm=Inf	20	conj	_	_
28	general	general	ADJ	POS	Degree=Pos	30	amod	_	_
29	programming	program	NOUN	SG-NOM	Number=Sing	30	compound	_	_
30	skills	skill	NOUN	PL-NOM	Number=Plur	17	obj	_	_
31	to	to	ADP	_	_	35	case	_	_
32	the	the	DET	DEF	Definite=Def|PronType=Art	35	det	_	_
33	functional	functional	ADJ	POS	Degree=Pos	34	amod	_	_
34	programming	programming	NOUN	SG-NOM	Number=Sing	35	compound	_	_
35	domain	domain	NOUN	SG-NOM	Number=Sing	30	nmod	_	SpaceAfter=No
36	.	.	PUNCT	Period	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 416
# text = Concrete topics encountered in the course include;
1	Concrete	Concrete	ADJ	POS	Degree=Pos	2	amod	_	_
2	topics	topics	NOUN	PL-NOM	Number=Plur	0	root	_	_
3	encountered	encounter	VERB	PASS	Tense=Past|VerbForm=Part|Voice=Pass	2	acl	_	_
4	in	in	ADP	_	_	7	case	_	_
5	the	the	DET	DEF	Definite=Def|PronType=Art	7	det	_	_
6	course	course	ADJ	POS	Degree=Pos	7	amod	_	_
7	include	include	NOUN	SG-NOM	Number=Sing	3	obl	_	SpaceAfter=No
8	;	;	PUNCT	SemiColon	_	2	punct	_	SpacesAfter=\n

# sent_id = 417
# text = functions as first-class values
1	functions	function	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	as	as	ADP	_	_	4	case	_	_
3	first-class	first-class	ADJ	POS	Degree=Pos	4	amod	_	_
4	values	value	NOUN	PL-NOM	Number=Plur	1	nmod	_	SpacesAfter=\n

# sent_id = 418
# text = compound data types (lists, tuples, and user-defined types)
1	compound	compound	VERB	PASS	Case=Nom	0	root	_	_
2	data	data	NOUN	PL-NOM	Number=Sing	3	compound	_	_
3	types	type	NOUN	PL-NOM	Number=Plur	1	obj	_	_
4	(	(	PUNCT	LeftParenthesis	_	5	punct	_	SpaceAfter=No
5	lists	list	NOUN	PL-NOM	Number=Plur	3	appos	_	SpaceAfter=No
6	,	,	PUNCT	Comma	_	5	punct	_	_
7	tuples	tuple	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
8	,	,	PUNCT	Comma	_	5	punct	_	_
9	and	and	CCONJ	_	_	11	cc	_	_
10	user-defined	user-defined	ADJ	POS	Degree=Pos	11	amod	_	_
11	types	type	NOUN	PL-NOM	Number=Plur	5	conj	_	SpaceAfter=No
12	)	)	PUNCT	RightParenthesis	_	5	punct	_	SpacesAfter=\n

# sent_id = 419
# text = recursion and recursive data types
1	recursion	recursion	NOUN	SG-NOM	Number=Sing	4	compound	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	recursive	recursive	VERB	INF	VerbForm=Inf	1	conj	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	5	compound	_	_
5	types	type	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 420
# text = using abstraction to avoid repetitive programming
1	using	use	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	abstraction	abstraction	NOUN	SG-NOM	Number=Sing	1	obj	_	_
3	to	to	PART	_	_	4	mark	_	_
4	avoid	avoid	VERB	INF	VerbForm=Inf	1	xcomp	_	_
5	repetitive	repetitive	ADJ	POS	Degree=Pos	6	amod	_	_
6	programming	program	NOUN	SG-NOM	Number=Sing	4	obj	_	SpacesAfter=\n

# sent_id = 421
# text = algebraic data types
1	algebraic	algebraic	ADJ	POS	Degree=Pos	2	amod	_	_
2	data	data	NOUN	PL-NOM	Number=Sing	3	compound	_	_
3	types	type	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 422
# text = polymorphism and type classes
1	polymorphism	polymorphism	NOUN	PL-NOM	Number=Plur	4	compound	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	type	type	NOUN	SG-NOM	Number=Sing	1	conj	_	_
4	classes	class	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 423
# text = time complexity: efficient and inefficient functional programs
1	time	time	NOUN	SG-NOM	Number=Sing	2	compound	_	_
2	complexity	complexity	NOUN	SG-NOM	Number=Sing	8	compound	_	SpaceAfter=No
3	:	:	PUNCT	Colon	_	2	punct	_	_
4	efficient	efficient	ADJ	POS	Degree=Pos	8	amod	_	_
5	and	and	CCONJ	_	_	6	cc	_	_
6	inefficient	inefficient	ADJ	POS	Degree=Pos	4	conj	_	_
7	functional	functional	ADJ	POS	Degree=Pos	8	amod	_	_
8	programs	program	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 424
# text = pure functions vs input-output
1	pure	pure	ADJ	POS	Degree=Pos	2	amod	_	_
2	functions	function	NOUN	PL-NOM	Number=Plur	3	compound	_	_
3	vs	v	NOUN	PL-NOM	Number=Plur	4	nsubj	_	_
4	input-output	input-output	VERB	PAST	Mood=Ind|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 425
# text = modules and abstract data types
1	modules	module	NOUN	PL-NOM	Number=Plur	0	root	_	_
2	and	and	CCONJ	_	_	3	cc	_	_
3	abstract	abstract	VERB	INF	VerbForm=Inf	1	conj	_	_
4	data	data	NOUN	PL-NOM	Number=Sing	5	compound	_	_
5	types	type	NOUN	PL-NOM	Number=Plur	3	obj	_	SpacesAfter=\n

# sent_id = 426
# text = testing functional programs
1	testing	tes	VERB	ING	Tense=Pres|VerbForm=Part	0	root	_	_
2	functional	functional	ADJ	POS	Degree=Pos	3	amod	_	_
3	programs	program	NOUN	PL-NOM	Number=Plur	1	obj	_	SpacesAfter=\n

# sent_id = 427
# text = lazy evaluation and infinite objects
1	lazy	lazy	ADJ	POS	Degree=Pos	2	amod	_	_
2	evaluation	evaluation	NOUN	SG-NOM	Number=Sing	5	compound	_	_
3	and	and	CCONJ	_	_	4	cc	_	_
4	infinite	infinite	ADJ	POS	Degree=Pos	2	conj	_	_
5	objects	object	NOUN	PL-NOM	Case=Nom	0	root	_	SpacesAfter=\n

# sent_id = 428
# text = monads
1	monads	monad	NOUN	PL-NOM	Number=Plur	0	root	_	SpacesAfter=\n

