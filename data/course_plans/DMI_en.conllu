# newdoc id = data/course_plans/all_uniPG_en.txt
# newpar
# sent_id = 1
# text = MATHEMATICAL ANALYSIS - MOD. I
1	MATHEMATICAL	mathematical	PROPN	SP	_	5	nmod	_	_
2	ANALYSIS	analysis	PROPN	SP	_	1	flat	_	_
3	-	-	PUNCT	FF	_	1	punct	_	_
4	MOD.	MOD.	PROPN	SP	_	1	flat	_	_
5	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 2
# text = Code
1	Code	code	ADP	E	_	0	root	_	SpacesAfter=\n

# sent_id = 3
# text = GP004146
1	GP00	GP00	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	4146	4146	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 4
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 5
# text = 7
1	7	7	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 6
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 7
# text = Paola Rubbioni
1	Paola	Paola	PROPN	SP	_	0	root	_	_
2	Rubbioni	Rubbioni	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 8
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\s\n

# sent_id = 9
# text = Paola Rubbioni - Didattica Ufficiale
1	Paola	Paolà	PROPN	SP	_	0	root	_	_
2	Rubbioni	Rubbioni	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 10
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\s\n

# sent_id = 11
# text = 49 Hours - Didattica Ufficiale - Paola Rubbioni
1	49	49	NUM	N	NumType=Card	2	nummod	_	_
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Paola	Paola	PROPN	SP	_	4	flat	_	_
8	Rubbioni	Rubbioni	PROPN	SP	_	2	flat	_	SpacesAfter=\n

# sent_id = 12
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 13
# text = Base
1	Base	base	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 14
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 15
# text = Formazione matematico-fisica
1	Formazione	Formazione	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	obl	_	_
2	matematico	matematico	ADJ	A	Degree=Pos	4	amod	_	SpaceAfter=No
3	-	-	PUNCT	FF	_	2	punct	_	SpaceAfter=No
4	fisica	fisica	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 16
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 17
# text = MAT/05
1	MAT	Mat	PRON	PQ	PronType=Int	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	05	05	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 18
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 19
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 20
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\n

# sent_id = 21
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 22
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\s\n

# sent_id = 23
# text = Sets, upper and lower extremes, numerical sequences, elementary functions.
1	Sets	set	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	upper	upper	ADJ	A	Degree=Pos	1	conj	_	_
4	and	and	CCONJ	CC	_	6	cc	_	_
5	lower	lower	ADJ	A	Degree=Cmp	6	amod	_	_
6	extremes	extremes	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	9	punct	_	_
8	numerical	numerical	ADJ	A	Degree=Pos	9	amod	_	_
9	sequences	sequence	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	12	punct	_	_
11	elementary	elementary	ADJ	A	Degree=Pos	12	amod	_	_
12	functions	function	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 24
# text = Limits, continuity and derivation for real functions of one variable.
1	Limits	limit	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	continuity	continuity	NOUN	S	Number=Sing	1	conj	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	derivation	derive	NOUN	S	Number=Sing	1	conj	_	_
6	for	for	ADP	E	_	8	case	_	_
7	real	re	ADJ	A	Degree=Pos	8	amod	_	_
8	functions	function	NOUN	S	Number=Plur	5	nmod	_	_
9	of	of	ADP	E	_	11	case	_	_
10	one	one	NUM	N	NumType=Card	11	nummod	_	_
11	variable	variable	ADJ	A	Degree=Pos	8	nmod	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 25
# text = Riemann Integral.
1	Riemann	Riemann	ADV	B	_	2	advmod	_	_
2	Integral	Integral	ADJ	A	Degree=Pos	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 26
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 27
# text = Marco Bramanti Carlo Domenico Pagani Sandro Salsa
1	Marco	Marco	PROPN	SP	_	0	root	_	_
2	Bramanti	Bramanti	PROPN	SP	_	1	nmod	_	_
3	Carlo	Carlo	PROPN	SP	_	2	flat	_	_
4	Domenico	Domenico	PROPN	SP	_	2	flat	_	_
5	Pagani	Pagani	PROPN	SP	_	2	flat	_	_
6	Sandro	Sandro	PROPN	SP	_	2	flat	_	_
7	Salsa	Salsa	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 28
# text = Analisi matematica 1
1	Analisi	Analisi	X	X	_	0	root	_	_
2	matematica	matematicà	X	SW	Foreign=Yes	1	flat:foreign	_	_
3	1	1	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 29
# text = Zanichelli, 2008
1	Zanichelli	Zanichelli	PROPN	SP	_	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	2008	2008	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 30
# text = .Volume unico
1	.	.	PUNCT	FF	_	2	punct	_	SpaceAfter=No
2	Volume	volume	PROPN	SP	_	3	obl	_	_
3	unico	unico	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 31
# text = Pagine: 392 ISBN: 9788808064851
1	Pagine	Pagine	PROPN	SP	_	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	3	punct	_	_
3	392	392	NUM	N	NumType=Card	1	nummod	_	_
4	ISBN	ISBN	PROPN	SP	_	3	flat	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	3	punct	_	_
6	97888080	97888080	NUM	N	NumType=Card	3	flat	_	SpaceAfter=No
7	6	6	NUM	N	NumType=Card	3	flat	_	SpaceAfter=No
8	4851	4851	NUM	N	NumType=Card	3	flat	_	SpacesAfter=\n

# sent_id = 32
# text = .Ebook - versione Booktab
1	.	.	PUNCT	FF	_	4	punct	_	SpaceAfter=No
2	Ebook	Ebook	PROPN	SP	_	4	nmod	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	versione	versione	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
5	Booktab	Booktab	PROPN	SP	_	4	obj	_	SpacesAfter=\n

# sent_id = 33
# text = ISBN: 9788808642752
1	ISBN	Isbn	ADV	B	_	3	advmod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	9788808	9788808	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
4	6	6	NUM	N	NumType=Card	3	flat	_	SpaceAfter=No
5	42752	42752	NUM	N	NumType=Card	3	flat	_	SpacesAfter=\n

# sent_id = 34
# text = .Ebook licenza 9 mesi - versione Booktab
1	.	.	PUNCT	FF	_	3	punct	_	SpaceAfter=No
2	Ebook	Ebook	PROPN	SP	_	3	nmod	_	_
3	licenza	licenza	NOUN	S	Number=Sing	7	nsubj	_	_
4	9	9	NUM	N	NumType=Card	3	nummod	_	_
5	mesi	mesi	X	X	_	3	appos	_	_
6	-	-	PUNCT	FF	_	5	punct	_	_
7	versione	versione	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
8	Booktab	Booktab	PROPN	SP	_	7	obj	_	SpacesAfter=\n

# sent_id = 35
# text = ISBN: 9788808842541
1	ISBN	Isbn	ADV	B	_	3	advmod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	9788808	9788808	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
4	8	8	NUM	N	NumType=Card	3	flat	_	SpaceAfter=No
5	42541	42541	NUM	N	NumType=Card	3	flat	_	SpacesAfter=\n

# sent_id = 36
# text = Marco Bramanti
1	Marco	Marco	PROPN	SP	_	0	root	_	_
2	Bramanti	Bramanti	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 37
# text = "Esercitazioni di Analisi matematica 1"
1	"	"	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	Esercitazioni	Esercitazioni	PROPN	SP	_	0	root	_	_
3	di	di	X	X	_	2	nmod	_	_
4	Analisi	Analisi	X	X	_	3	flat:foreign	_	_
5	matematica	matematica	X	SW	Foreign=Yes	3	flat:foreign	_	_
6	1	1	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
7	"	"	PUNCT	FB	_	2	punct	_	SpacesAfter=\n

# sent_id = 38
# text = Esculapio editore, 2018
1	Esculapio	Esculapio	ADV	B	_	2	advmod	_	_
2	editore	editore	ADV	B	_	4	advmod	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	2018	2018	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 39
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 40
# text = The course aims to provide students with the bases of Mathematical Analysis both from a methodological and a calculation point of view.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	S	Number=Sing	3	nsubj	_	_
3	aims	aim	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	to	to	PART	PART	_	5	mark	_	_
5	provide	provide	VERB	V	VerbForm=Inf	3	xcomp	_	_
6	students	student	NOUN	S	Number=Plur	5	obj	_	_
7	with	with	ADP	E	_	9	case	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	bases	base	NOUN	S	Number=Plur	5	obl	_	_
10	of	of	ADP	E	_	12	case	_	_
11	Mathematical	mathematical	ADJ	A	Degree=Pos	12	amod	_	_
12	Analysis	analysis	NOUN	S	Gender=Masc|Number=Sing	9	nmod	_	_
13	both	both	CCONJ	CC	_	16	cc	_	_
14	from	from	ADP	E	_	16	case	_	_
15	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	16	det	_	_
16	methodological	methodological	ADJ	A	Degree=Pos	12	conj	_	_
17	and	and	CCONJ	CC	_	20	cc	_	_
18	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	20	det	_	_
19	calculation	calculation	NOUN	S	Number=Sing	20	nmod	_	_
20	point	point	NOUN	S	Number=Sing	16	conj	_	_
21	of	of	ADP	E	_	22	case	_	_
22	view	view	NOUN	S	Number=Sing	20	nmod	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 41
# text = At the end of the Module I the student must:
1	At	at	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	end	end	NOUN	S	Number=Sing	9	nmod	_	_
4	of	of	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	Module	Module	NOUN	S	Number=Sing	3	nmod	_	_
7	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	9	nsubj	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	student	student	NOUN	S	Number=Sing	0	root	_	_
10	must	must	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	9	cop	_	SpaceAfter=No
11	:	:	PUNCT	FC	_	10	punct	_	SpacesAfter=\s\n

# sent_id = 42
# text = have acquired the notions of limit, derivative, integral;
1	have	have	AUX	VA	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	2	aux	_	_
2	acquired	acquire	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	notions	notion	NOUN	S	Number=Plur	2	obj	_	_
5	of	of	ADP	E	_	6	case	_	_
6	limit	limit	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	8	punct	_	_
8	derivative	derivative	ADJ	A	Degree=Pos	6	conj	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	10	punct	_	_
10	integral	integral	ADJ	A	Degree=Pos	6	conj	_	SpaceAfter=No
11	;	;	PUNCT	FC	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 43
# text = to be able to carry out the complete study of a function of one variable;
1	to	to	PART	PART	_	3	mark	_	_
2	be	be	AUX	V	VerbForm=Inf	3	cop	_	_
3	able	able	ADJ	A	Degree=Pos	0	root	_	_
4	to	to	PART	PART	_	5	mark	_	_
5	carry	carry	VERB	V	VerbForm=Inf	3	advcl	_	_
6	out	out	ADP	E	_	5	compound:prt	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
8	complete	complete	ADJ	A	Degree=Pos	9	amod	_	_
9	study	study	NOUN	S	Number=Sing	5	obj	_	_
10	of	of	ADP	E	_	12	case	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
12	function	function	NOUN	S	Number=Sing	9	nmod	_	_
13	of	of	ADP	E	_	14	case	_	_
14	one	one	NUM	N	NumType=Card	12	nmod	_	_
15	variable	variable	ADJ	A	Degree=Pos	14	amod	_	SpaceAfter=No
16	;	;	PUNCT	FC	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 44
# text = know how to calculate simple Riemann integrals;
1	know	know	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
2	how	how	ADV	B	_	4	advmod	_	_
3	to	to	PART	PART	_	4	mark	_	_
4	calculate	calculate	VERB	V	VerbForm=Inf	1	ccomp	_	_
5	simple	simple	ADJ	A	Degree=Pos	7	amod	_	_
6	Riemann	Riemann	ADJ	A	Degree=Pos	7	amod	_	_
7	integrals	integral	NOUN	S	Number=Plur	4	obj	_	SpaceAfter=No
8	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 45
# text = know how to expose and discuss the definitions and theorems presented in class.
1	know	know	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
2	how	how	ADV	B	_	4	advmod	_	_
3	to	to	PART	PART	_	4	mark	_	_
4	expose	expose	VERB	V	VerbForm=Inf	1	ccomp	_	_
5	and	and	CCONJ	CC	_	6	cc	_	_
6	discuss	discuss	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	4	conj	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	definitions	definition	NOUN	S	Number=Plur	6	obj	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	theorems	theorem	NOUN	S	Number=Plur	8	conj	_	_
11	presented	present	VERB	V	Tense=Past|VerbForm=Part	10	acl	_	_
12	in	in	ADP	E	_	13	case	_	_
13	class	class	NOUN	S	Number=Sing	11	obl	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 46
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 47
# text = First and second degree equations and inequalities, rational, irrational, transcendent. Elements of analytical geometry.
1	First	first	ADJ	NO	Degree=Pos|NumType=Ord	4	amod	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	second	second	ADJ	NO	Degree=Pos|NumType=Ord	1	conj	_	_
4	degree	degree	NOUN	S	Number=Sing	5	nmod	_	_
5	equations	equation	NOUN	S	Number=Plur	0	root	_	_
6	and	and	CCONJ	CC	_	7	cc	_	_
7	inequalities	inequality	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	9	punct	_	_
9	rational	rational	ADJ	A	Degree=Pos	7	conj	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	11	punct	_	_
11	irrational	irrational	ADJ	A	Degree=Pos	7	conj	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	transcendent	transcendent	ADJ	A	Degree=Pos	7	conj	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	15	punct	_	_
15	Elements	Elements	PROPN	SP	_	7	conj	_	_
16	of	of	ADP	E	_	18	case	_	_
17	analytical	analytic	ADJ	A	Degree=Pos	18	amod	_	_
18	geometry	geometry	NOUN	S	Number=Sing	15	nmod	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 48
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 49
# text = Face-to-face lessons on all the topics of the course.
1	Face	face	ADV	B	_	5	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	to	to	ADP	E	_	1	fixed	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	face	face	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
6	lessons	lesson	NOUN	S	Number=Plur	5	obj	_	_
7	on	on	ADP	E	_	10	case	_	_
8	all	all	DET	T	PronType=Tot	10	det	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	topics	topics	NOUN	S	Number=Plur	5	obl	_	_
11	of	of	ADP	E	_	13	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
13	course	course	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 50
# text = In addition to a detailed theoretical presentation, for each topic will also be carried out the related exercises that will be a model to those proposed in the examination.
1	In	in	ADP	E	_	2	case	_	_
2	addition	addition	NOUN	S	Number=Sing	15	obl	_	_
3	to	to	ADP	E	_	7	case	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
5	detailed	detail	ADJ	A	Degree=Pos	7	amod	_	_
6	theoretical	theoretic	ADJ	A	Degree=Pos	7	amod	_	_
7	presentation	presentation	NOUN	S	Number=Sing	2	nmod	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	2	punct	_	_
9	for	for	ADP	E	_	11	case	_	_
10	each	each	DET	DI	Number=Sing|PronType=Ind	11	det	_	_
11	topic	topic	NOUN	S	Number=Sing	15	nsubj:pass	_	_
12	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	15	aux	_	_
13	also	also	ADV	B	_	15	advmod	_	_
14	be	be	AUX	VA	VerbForm=Inf	15	aux:pass	_	_
15	carried	carry	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
16	out	out	ADP	E	_	19	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
18	related	related	ADJ	A	Degree=Pos	19	amod	_	_
19	exercises	exercise	NOUN	S	Number=Plur	15	obl	_	_
20	that	that	PRON	PR	PronType=Rel	24	nsubj	_	_
21	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	24	aux	_	_
22	be	be	AUX	V	VerbForm=Inf	24	cop	_	_
23	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	24	det	_	_
24	model	model	NOUN	S	Number=Sing	19	acl:relcl	_	_
25	to	to	ADP	E	_	26	case	_	_
26	those	that	PRON	PD	Number=Plur|PronType=Dem	24	nmod	_	_
27	proposed	propose	VERB	V	Tense=Past|VerbForm=Part	26	acl	_	_
28	in	in	ADP	E	_	30	case	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
30	examination	examination	NOUN	S	Number=Sing	27	obl	_	SpaceAfter=No
31	.	.	PUNCT	FS	_	15	punct	_	SpacesAfter=\n

# sent_id = 51
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 52
# text = During the written test the use of: textbook is allowed; handwritten cards with their own personal notes inserted in a portalistini; sheets for draft; pens, pencils, ruler, ...
1	During	during	ADP	E	_	4	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	written	written	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
4	test	test	NOUN	S	Number=Sing	11	obl	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	use	use	NOUN	S	Number=Sing	11	nsubj:pass	_	_
7	of	of	ADP	E	_	9	case	_	SpaceAfter=No
8	:	:	PUNCT	FC	_	9	punct	_	_
9	textbook	textbook	NOUN	S	Number=Sing	6	nmod	_	_
10	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	aux:pass	_	_
11	allowed	allow	VERB	V	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
12	;	;	PUNCT	FC	_	13	punct	_	_
13	handwritten	handwrite	VERB	V	Tense=Past|VerbForm=Part	11	xcomp	_	_
14	cards	card	NOUN	S	Number=Plur	13	obj	_	_
15	with	with	ADP	E	_	19	case	_	_
16	their	their	DET	AP	Poss=Yes|PronType=Prs	19	nmod:poss	_	_
17	own	own	ADJ	A	Degree=Pos	19	amod	_	_
18	personal	personal	ADJ	A	Degree=Pos	19	amod	_	_
19	notes	note	NOUN	S	Number=Plur	14	nmod	_	_
20	inserted	insert	VERB	V	Tense=Past|VerbForm=Part	19	acl	_	_
21	in	in	ADP	E	_	23	case	_	_
22	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	23	det	_	_
23	portalistini	portalistini	NOUN	S	Number=Sing	20	obl	_	SpaceAfter=No
24	;	;	PUNCT	FC	_	23	punct	_	_
25	sheets	sheet	NOUN	S	Number=Plur	23	appos	_	_
26	for	for	ADP	E	_	27	case	_	_
27	draft	draft	NOUN	S	Number=Sing	25	nmod	_	SpaceAfter=No
28	;	;	PUNCT	FC	_	29	punct	_	_
29	pens	pen	NOUN	S	Number=Plur	27	appos	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	31	punct	_	_
31	pencils	pencil	NOUN	S	Number=Plur	29	conj	_	SpaceAfter=No
32	,	,	PUNCT	FF	_	33	punct	_	_
33	ruler	ruler	NOUN	S	Number=Sing	29	conj	_	SpaceAfter=No
34	,	,	PUNCT	FF	_	29	punct	_	_
35	...	.	PUNCT	FF	_	11	punct	_	SpacesAfter=\n

# sent_id = 53
# text = It is not possible to keep with you: bags or backpacks; smartphones or notebooks or calculators or other similar devices; books other than text.
1	It	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	4	expl	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	_	_
3	not	not	PART	PART	Polarity=Neg	4	advmod	_	_
4	possible	possible	ADJ	A	Degree=Pos	0	root	_	_
5	to	to	PART	PART	_	6	mark	_	_
6	keep	keep	VERB	V	VerbForm=Inf	4	csubj	_	_
7	with	with	ADP	E	_	8	case	_	_
8	you	you	PRON	PE	Person=2|PronType=Prs	6	obl	_	SpaceAfter=No
9	:	:	PUNCT	FC	_	10	punct	_	_
10	bags	bag	NOUN	S	Number=Plur	6	obj	_	_
11	or	or	CCONJ	CC	_	12	cc	_	_
12	backpacks	backpack	NOUN	S	Number=Plur	10	conj	_	SpaceAfter=No
13	;	;	PUNCT	FC	_	14	punct	_	_
14	smartphones	smartphone	NOUN	S	Number=Plur	12	nmod	_	_
15	or	or	CCONJ	CC	_	16	cc	_	_
16	notebooks	notebook	NOUN	S	Number=Plur	14	conj	_	_
17	or	or	CCONJ	CC	_	18	cc	_	_
18	calculators	calculator	NOUN	S	Number=Plur	14	conj	_	_
19	or	or	CCONJ	CC	_	22	cc	_	_
20	other	other	ADJ	A	Degree=Pos	22	amod	_	_
21	similar	similar	ADJ	A	Degree=Pos	22	amod	_	_
22	devices	device	NOUN	S	Number=Plur	14	conj	_	SpaceAfter=No
23	;	;	PUNCT	FC	_	24	punct	_	_
24	books	book	NOUN	S	Number=Plur	14	conj	_	_
25	other	other	ADJ	A	Degree=Pos	24	amod	_	_
26	than	than	ADP	E	_	27	case	_	_
27	text	text	NOUN	S	Number=Sing	25	obl	_	SpaceAfter=No
28	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 54
# text = For communications and any additional material, reference is made to the Unistudium platform.
1	For	for	ADP	E	_	2	case	_	_
2	communications	communication	NOUN	S	Number=Plur	10	obl	_	_
3	and	and	CCONJ	CC	_	6	cc	_	_
4	any	any	DET	DI	PronType=Ind	6	det	_	_
5	additional	addition	ADJ	A	Degree=Pos	6	amod	_	_
6	material	material	ADJ	A	Degree=Pos	2	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	2	punct	_	_
8	reference	reference	NOUN	S	Number=Sing	10	nsubj:pass	_	_
9	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	_	_
10	made	make	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
11	to	to	ADP	E	_	14	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	Unistudium	Unistudium	PROPN	SP	_	14	nmod	_	_
14	platform	platform	NOUN	S	Number=Sing	10	obl	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	10	punct	_	SpacesAfter=\n

# sent_id = 55
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 56
# text = The final exam is inclusive of both modules.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	final	final	ADJ	A	Degree=Pos	3	amod	_	_
3	exam	exam	NOUN	S	Number=Sing	5	nsubj	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	_	_
5	inclusive	inclusive	ADJ	A	Degree=Pos	0	root	_	_
6	of	of	ADP	E	_	8	case	_	_
7	both	both	DET	DI	PronType=Ind	8	det	_	_
8	modules	module	NOUN	S	Number=Plur	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 57
# text = For each module there are:
1	For	for	ADP	E	_	3	case	_	_
2	each	each	DET	DI	Number=Sing|PronType=Ind	3	det	_	_
3	module	module	NOUN	S	Number=Sing	5	obl	_	_
4	there	there	PRON	_	_	5	expl	_	_
5	are	be	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
6	:	:	PUNCT	FC	_	5	punct	_	SpacesAfter=\n

# sent_id = 58
# text = a written test in which the student must perform two exercises in two hours to verify the knowledge and skills related to the calculation;
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	written	write	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
3	test	test	NOUN	S	Number=Sing	0	root	_	_
4	in	in	ADP	E	_	5	case	_	_
5	which	which	PRON	PR	PronType=Rel	9	obl	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	student	student	NOUN	S	Number=Sing	9	nsubj	_	_
8	must	must	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
9	perform	perform	VERB	V	VerbForm=Inf	3	acl:relcl	_	_
10	two	two	NUM	N	NumType=Card	11	nummod	_	_
11	exercises	exercise	NOUN	S	Number=Plur	9	obj	_	_
12	in	in	ADP	E	_	14	case	_	_
13	two	two	NUM	N	NumType=Card	14	nummod	_	_
14	hours	hour	NOUN	S	Number=Plur	9	obl	_	_
15	to	to	PART	PART	_	16	mark	_	_
16	verify	verify	VERB	V	VerbForm=Inf	9	advcl	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
18	knowledge	knowledge	NOUN	S	Number=Sing	16	obj	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	skills	skill	NOUN	S	Number=Plur	18	conj	_	_
21	related	relate	VERB	V	Tense=Past|VerbForm=Part	20	acl	_	_
22	to	to	ADP	E	_	24	case	_	_
23	the	the	DET	RD	Definite=Def|PronType=Art	24	det	_	_
24	calculation	calculation	NOUN	S	Number=Sing	21	obl	_	SpaceAfter=No
25	;	;	PUNCT	FC	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 59
# text = an oral test of about fifteen minutes of verification of the acquisition of the method, of the language and of the fundamental theoretical knowledge of the subject.
1	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	test	test	NOUN	S	Number=Sing	0	root	_	_
4	of	of	ADP	E	_	7	case	_	_
5	about	about	ADV	B	_	7	advmod	_	_
6	fifteen	fifteen	NUM	N	NumType=Card	7	nummod	_	_
7	minutes	minute	NOUN	S	Number=Plur	3	nmod	_	_
8	of	of	ADP	E	_	9	case	_	_
9	verification	verification	NOUN	S	Number=Sing	7	nmod	_	_
10	of	of	ADP	E	_	12	case	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
12	acquisition	acquisition	NOUN	S	Number=Sing	9	nmod	_	_
13	of	of	ADP	E	_	15	case	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
15	method	method	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	3	punct	_	_
17	of	of	ADP	E	_	19	case	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
19	language	language	NOUN	S	Number=Sing	3	nmod	_	_
20	and	and	CCONJ	CC	_	25	cc	_	_
21	of	of	ADP	E	_	25	case	_	_
22	the	the	DET	RD	Definite=Def|PronType=Art	25	det	_	_
23	fundamental	fundamental	ADJ	A	Degree=Pos	25	amod	_	_
24	theoretical	theoretic	ADJ	A	Degree=Pos	25	amod	_	_
25	knowledge	knowledge	NOUN	S	Number=Sing	19	conj	_	_
26	of	of	ADP	E	_	28	case	_	_
27	the	the	DET	RD	Definite=Def|PronType=Art	28	det	_	_
28	subject	subject	NOUN	S	Number=Sing	25	nmod	_	SpaceAfter=No
29	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 60
# text = The final grade is the average of the marks obtained in the two modules.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	final	final	ADJ	A	Degree=Pos	3	amod	_	_
3	grade	grade	NOUN	S	Number=Sing	6	nsubj	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	average	average	NOUN	S	Number=Sing	0	root	_	_
7	of	of	ADP	E	_	9	case	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	marks	marks	NOUN	S	Number=Plur	6	nmod	_	_
10	obtained	obtain	VERB	V	Tense=Past|VerbForm=Part	9	acl	_	_
11	in	in	ADP	E	_	14	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	two	two	NUM	N	NumType=Card	14	nummod	_	_
14	modules	module	NOUN	S	Number=Plur	10	obl	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 61
# text = For information on support services for students with disabilities and / or DSA visit http://www.unipg.it/disabilita-e-dsa
1	For	for	ADP	E	_	2	case	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	_
3	on	on	ADP	E	_	5	case	_	_
4	support	support	NOUN	S	Number=Sing	5	nmod	_	_
5	services	service	NOUN	S	Number=Plur	2	nmod	_	_
6	for	for	ADP	E	_	7	case	_	_
7	students	student	NOUN	S	Number=Plur	5	nmod	_	_
8	with	with	ADP	E	_	9	case	_	_
9	disabilities	disability	NOUN	S	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	CC	_	15	cc	_	_
11	/	/	PUNCT	FF	_	13	punct	_	_
12	or	or	CCONJ	CC	_	13	cc	_	_
13	DSA	Dsa	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	conj	_	_
14	visit	visit	NOUN	S	Number=Sing	15	nmod	_	_
15	http://www.unipg.it/disabilita-e-dsa	http://www.unipg.it/disabilita-e-dsà	NOUN	S	Number=Sing	9	conj	_	SpacesAfter=\n

# sent_id = 62
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\n

# sent_id = 63
# text = Basic concepts on sets; elementary logic; real numbers; upper extreme.
1	Basic	basic	ADJ	A	Degree=Pos	2	amod	_	_
2	concepts	concept	NOUN	S	Number=Plur	0	root	_	_
3	on	on	ADP	E	_	4	case	_	_
4	sets	set	NOUN	S	Number=Plur	2	nmod	_	SpaceAfter=No
5	;	;	PUNCT	FC	_	7	punct	_	_
6	elementary	elementary	ADJ	A	Degree=Pos	7	amod	_	_
7	logic	logic	NOUN	S	Number=Sing	2	conj	_	SpaceAfter=No
8	;	;	PUNCT	FC	_	10	punct	_	_
9	real	real	ADJ	A	Degree=Pos	10	amod	_	_
10	numbers	number	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
11	;	;	PUNCT	FC	_	13	punct	_	_
12	upper	upper	ADJ	A	Degree=Pos	13	amod	_	_
13	extreme	extreme	NOUN	S	Number=Sing	10	conj	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 64
# text = Functions of one variable: generality and elementary functions; composition of functions and inverse functions.
1	Functions	Function	NOUN	S	Number=Plur	0	root	_	_
2	of	of	ADP	E	_	11	case	_	_
3	one	one	NUM	N	NumType=Card	11	nummod	_	_
4	variable	variable	ADJ	A	Degree=Pos	11	amod	_	SpaceAfter=No
5	:	:	PUNCT	FF	_	6	punct	_	_
6	generality	generality	NOUN	S	Number=Sing	11	nmod	_	_
7	and	and	CCONJ	CC	_	9	cc	_	_
8	elementary	elementary	ADJ	A	Degree=Pos	9	amod	_	_
9	functions	function	NOUN	S	Number=Plur	6	conj	_	SpaceAfter=No
10	;	;	PUNCT	FC	_	6	punct	_	_
11	composition	composition	NOUN	S	Number=Sing	1	nmod	_	_
12	of	of	ADP	E	_	13	case	_	_
13	functions	function	NOUN	S	Number=Plur	11	nmod	_	_
14	and	and	CCONJ	CC	_	16	cc	_	_
15	inverse	inverse	NOUN	S	Number=Sing	16	nmod	_	_
16	functions	function	NOUN	S	Number=Plur	13	conj	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 65
# text = Limits and continuity: numerical sequences; limits of functions, continuity, asymptotes; calculation of limits; global properties of continuous functions.
1	Limits	limit	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	continuity	continuity	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	:	:	PUNCT	FC	_	6	punct	_	_
5	numerical	numerical	ADJ	A	Degree=Pos	6	amod	_	_
6	sequences	sequence	NOUN	S	Number=Plur	3	conj	_	SpaceAfter=No
7	;	;	PUNCT	FC	_	6	punct	_	_
8	limits	limit	NOUN	S	Number=Plur	6	nmod	_	_
9	of	of	ADP	E	_	10	case	_	_
10	functions	function	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	continuity	continuity	NOUN	S	Number=Sing	10	conj	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	14	punct	_	_
14	asymptotes	asymptote	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	conj	_	SpaceAfter=No
15	;	;	PUNCT	FC	_	16	punct	_	_
16	calculation	calculation	NOUN	S	Number=Sing	10	conj	_	_
17	of	of	ADP	E	_	18	case	_	_
18	limits	limits	NOUN	S	Number=Plur	16	nmod	_	SpaceAfter=No
19	;	;	PUNCT	FC	_	21	punct	_	_
20	global	global	ADJ	A	Degree=Pos	21	amod	_	_
21	properties	property	NOUN	S	Number=Plur	18	nmod	_	_
22	of	of	ADP	E	_	24	case	_	_
23	continuous	continuous	ADJ	A	Degree=Pos	24	amod	_	_
24	functions	function	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
25	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 66
# text = Differential calculus for functions of one variable: derivative of a function; rules for calculating derivatives; the theorem of the mean value and its consequences; second derivative; study of the graph of a function.
1	Differential	Differential	ADJ	A	Degree=Pos	2	amod	_	_
2	calculus	calculus	NOUN	S	Gender=Masc|Number=Sing	0	root	_	_
3	for	for	ADP	E	_	4	case	_	_
4	functions	function	NOUN	S	Number=Plur	2	nmod	_	_
5	of	of	ADP	E	_	9	case	_	_
6	one	one	NUM	N	NumType=Card	9	nummod	_	_
7	variable	variable	ADJ	A	Degree=Pos	9	amod	_	SpaceAfter=No
8	:	:	PUNCT	FC	_	9	punct	_	_
9	derivative	derivative	ADJ	A	Degree=Pos	4	nmod	_	_
10	of	of	ADP	E	_	12	case	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
12	function	function	NOUN	S	Number=Sing	9	obl	_	SpaceAfter=No
13	;	;	PUNCT	FC	_	12	punct	_	_
14	rules	rule	NOUN	S	Number=Plur	12	appos	_	_
15	for	for	ADP	E	_	17	case	_	_
16	calculating	calculat	VERB	V	VerbForm=Ger	17	acl	_	_
17	derivatives	derivative	NOUN	S	Number=Plur	14	nmod	_	SpaceAfter=No
18	;	;	PUNCT	FC	_	20	punct	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	20	det	_	_
20	theorem	theorem	NOUN	S	Number=Sing	14	nmod	_	_
21	of	of	ADP	E	_	24	case	_	_
22	the	the	DET	RD	Definite=Def|PronType=Art	24	det	_	_
23	mean	mean	ADJ	A	Degree=Pos	24	amod	_	_
24	value	value	NOUN	S	Number=Sing	20	nmod	_	_
25	and	and	CCONJ	CC	_	27	cc	_	_
26	its	its	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	27	nmod:poss	_	_
27	consequences	consequence	NOUN	S	Number=Plur	24	conj	_	SpaceAfter=No
28	;	;	PUNCT	FC	_	30	punct	_	_
29	second	second	ADJ	NO	Degree=Pos|NumType=Ord	30	amod	_	_
30	derivative	derivative	NOUN	S	Number=Sing	32	nmod	_	SpaceAfter=No
31	;	;	PUNCT	FC	_	30	punct	_	_
32	study	study	NOUN	S	Number=Sing	27	nmod	_	_
33	of	of	ADP	E	_	35	case	_	_
34	the	the	DET	RD	Definite=Def|PronType=Art	35	det	_	_
35	graph	graph	NOUN	S	Number=Sing	32	nmod	_	_
36	of	of	ADP	E	_	38	case	_	_
37	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	38	det	_	_
38	function	function	NOUN	S	Number=Sing	35	nmod	_	SpaceAfter=No
39	.	.	PUNCT	FS	_	9	punct	_	SpacesAfter=\n

# sent_id = 67
# text = Riemann Integral: integral of a function; properties of the integral; the fundamental theorem of integral calculus; calculation of indefinite and defined integrals.
1	Riemann	Riemann	ADP	E	_	2	case	_	_
2	Integral	Integral	ADJ	A	Degree=Pos	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FF	_	4	punct	_	_
4	integral	integral	ADJ	A	Degree=Pos	2	xcomp	_	_
5	of	of	ADP	E	_	7	case	_	_
6	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
7	function	function	NOUN	S	Number=Sing	4	obl	_	SpaceAfter=No
8	;	;	PUNCT	FC	_	7	punct	_	_
9	properties	property	NOUN	S	Number=Plur	7	appos	_	_
10	of	of	ADP	E	_	12	case	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
12	integral	integral	ADJ	A	Degree=Pos	9	nmod	_	SpaceAfter=No
13	;	;	PUNCT	FC	_	16	punct	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
15	fundamental	fundamental	ADJ	A	Degree=Pos	16	amod	_	_
16	theorem	theorem	NOUN	S	Number=Sing	9	conj	_	_
17	of	of	ADP	E	_	19	case	_	_
18	integral	integral	ADJ	A	Degree=Pos	19	amod	_	_
19	calculus	calculus	NOUN	S	Number=Sing	16	nmod	_	SpaceAfter=No
20	;	;	PUNCT	FC	_	16	punct	_	_
21	calculation	calculation	NOUN	S	Number=Sing	16	nmod	_	_
22	of	of	ADP	E	_	26	case	_	_
23	indefinite	indefinite	ADJ	A	Degree=Pos	26	amod	_	_
24	and	and	CCONJ	CC	_	25	cc	_	_
25	defined	defined	ADJ	A	Degree=Pos	23	conj	_	_
26	integrals	integral	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 68
# text = MATHEMATICAL ANALYSIS - MOD. II
1	MATHEMATICAL	mathematical	PROPN	SP	_	0	root	_	_
2	ANALYSIS	analysis	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	MOD.	MOD.	PROPN	SP	_	2	flat	_	_
5	II	II	ADJ	NO	Degree=Pos|NumType=Ord	1	flat	_	SpacesAfter=\n

# sent_id = 69
# text = Code
1	Code	code	ADP	E	_	0	root	_	SpacesAfter=\n

# sent_id = 70
# text = GP004147
1	GP00	GP00	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	4147	4147	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 71
# text = CFU 7
1	CFU	Cfu	PROPN	SP	_	0	root	_	SpacesAfter=\s\s
2	7	7	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 72
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 73
# text = Antonio Boccuto
1	Antonio	Antonio	PROPN	SP	_	0	root	_	_
2	Boccuto	Boccuto	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 74
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\s\n\n

# newpar
# sent_id = 75
# text = Antonio Boccuto - Didattica Ufficiale
1	Antonio	Antonio	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Boccuto	Boccuto	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 76
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\s\n

# sent_id = 77
# text = 49 Hours - Didattica Ufficiale - Antonio Boccuto
1	49	49	NUM	N	NumType=Card	2	nummod	_	_
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Antonio	Antonio	PROPN	SP	_	4	flat	_	_
8	Boccuto	Boccuto	PROPN	SP	_	2	flat	_	SpacesAfter=\n

# sent_id = 78
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 79
# text = Base
1	Base	base	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 80
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 81
# text = Formazione matematico-fisica
1	Formazione	Formazione	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	obl	_	_
2	matematico	matematico	ADJ	A	Degree=Pos	4	amod	_	SpaceAfter=No
3	-	-	PUNCT	FF	_	2	punct	_	SpaceAfter=No
4	fisica	fisica	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 82
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 83
# text = MAT/05
1	MAT	Mat	PRON	PQ	PronType=Int	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	05	05	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 84
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 85
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 86
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\n

# sent_id = 87
# text = ITALIAN
1	ITALIAN	Italia	ADP	E	_	0	root	_	SpacesAfter=\n

# sent_id = 88
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 89
# text = Series. Different types of techniques for solving them.
1	Series	series	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	4	punct	_	_
3	Different	different	ADJ	A	Degree=Pos	4	amod	_	_
4	types	type	NOUN	S	Number=Plur	0	root	_	_
5	of	of	ADP	E	_	6	case	_	_
6	techniques	techniques	NOUN	S	Number=Plur	4	nmod	_	_
7	for	for	ADP	E	_	8	mark	_	_
8	solving	solve	VERB	V	VerbForm=Ger	6	acl	_	_
9	them	they	PRON	PE	Number=Plur|Person=3|PronType=Prs	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 90
# text = Double integrals and generalized integrals.
1	Double	double	ADJ	A	Degree=Pos	2	amod	_	_
2	integrals	integral	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	generalized	generalize	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	2	conj	_	_
5	integrals	integral	NOUN	S	Number=Plur	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 91
# text = Applications to Probability and Statistics.
1	Applications	application	NOUN	S	Number=Plur	0	root	_	_
2	to	to	ADP	E	_	3	case	_	_
3	Probability	Probability	PROPN	SP	_	1	nmod	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	Statistics	statistics	PROPN	SP	_	3	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 92
# text = Maxima and minima of functions of several variables, and eigenvalues.
1	Maxima	Maxima	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	minima	minimum	NOUN	S	Number=Sing	1	conj	_	_
4	of	of	ADP	E	_	5	case	_	_
5	functions	function	NOUN	S	Number=Plur	3	nmod	_	_
6	of	of	ADP	E	_	8	case	_	_
7	several	several	ADJ	A	Degree=Pos	8	amod	_	_
8	variables	variable	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	11	punct	_	_
10	and	and	CCONJ	CC	_	11	cc	_	_
11	eigenvalues	eigenvalue	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	conj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 93
# text = Taylor series and applications.
1	Taylor	Taylor	ADP	E	_	2	case	_	_
2	series	series	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	applications	application	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 94
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 95
# text = Didactic material given by the teacher
1	Didactic	Didactic	X	SW	Foreign=Yes	0	root	_	_
2	material	material	X	SW	Foreign=Yes	1	flat:foreign	_	_
3	given	give	VERB	V	Tense=Past|VerbForm=Part	1	acl	_	_
4	by	by	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	teacher	teacher	NOUN	S	Number=Sing	3	obl	_	SpacesAfter=\n

# sent_id = 96
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 97
# text = The aim of the course is to give different techniques and methods of calculus for series, improper integrals, double integrals, local maxima and minima of functions of several variables, the Taylor series, with several applications, among which to Probability and Statistics and to the calculus of irrational numbers with a given fixed precision.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	aim	aim	NOUN	S	Number=Sing	6	nsubj	_	_
3	of	of	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	S	Number=Sing	2	nmod	_	_
6	is	be	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	to	to	PART	PART	_	8	mark	_	_
8	give	give	VERB	V	VerbForm=Inf	6	xcomp	_	_
9	different	different	ADJ	A	Degree=Pos	10	amod	_	_
10	techniques	technique	NOUN	S	Number=Plur	8	obj	_	_
11	and	and	CCONJ	CC	_	12	cc	_	_
12	methods	method	NOUN	S	Number=Plur	10	conj	_	_
13	of	of	ADP	E	_	14	case	_	_
14	calculus	calculus	NOUN	S	Number=Sing	12	nmod	_	_
15	for	for	ADP	E	_	16	case	_	_
16	series	series	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	8	punct	_	_
18	improper	improper	ADP	E	_	19	case	_	_
19	integrals	integral	NOUN	S	Number=Plur	8	obl	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	22	punct	_	_
21	double	double	ADJ	A	Degree=Pos	22	amod	_	_
22	integrals	integral	NOUN	S	Number=Plur	19	conj	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	25	punct	_	_
24	local	local	ADJ	A	Degree=Pos	25	amod	_	_
25	maxima	maxima	NOUN	S	Number=Sing	19	conj	_	_
26	and	and	CCONJ	CC	_	27	cc	_	_
27	minima	minimum	NOUN	S	Number=Sing	19	conj	_	_
28	of	of	ADP	E	_	29	case	_	_
29	functions	function	NOUN	S	Number=Plur	27	nmod	_	_
30	of	of	ADP	E	_	32	case	_	_
31	several	several	ADJ	A	Degree=Pos	32	amod	_	_
32	variables	variable	NOUN	S	Number=Plur	29	nmod	_	SpaceAfter=No
33	,	,	PUNCT	FF	_	36	punct	_	_
34	the	the	DET	RD	Definite=Def|PronType=Art	36	det	_	_
35	Taylor	Taylor	PROPN	SP	_	36	nmod	_	_
36	series	series	NOUN	S	Number=Sing	19	conj	_	SpaceAfter=No
37	,	,	PUNCT	FF	_	8	punct	_	_
38	with	with	ADP	E	_	40	case	_	_
39	several	several	ADJ	A	Degree=Pos	40	amod	_	_
40	applications	application	NOUN	S	Number=Plur	8	obl	_	SpaceAfter=No
41	,	,	PUNCT	FF	_	8	punct	_	_
42	among	among	ADP	E	_	43	case	_	_
43	which	which	PRON	PR	PronType=Rel	8	obl	_	_
44	to	to	ADP	E	_	45	case	_	_
45	Probability	Probability	PROPN	SP	_	43	nmod	_	_
46	and	and	CCONJ	CC	_	47	cc	_	_
47	Statistics	statistics	PROPN	SP	_	45	conj	_	_
48	and	and	CCONJ	CC	_	51	cc	_	_
49	to	to	ADP	E	_	51	case	_	_
50	the	the	DET	RD	Definite=Def|PronType=Art	51	det	_	_
51	calculus	calculus	NOUN	S	Number=Sing	43	conj	_	_
52	of	of	ADP	E	_	54	case	_	_
53	irrational	irrational	ADJ	A	Degree=Pos	54	amod	_	_
54	numbers	number	NOUN	S	Number=Plur	51	nmod	_	_
55	with	with	ADP	E	_	59	case	_	_
56	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	59	det	_	_
57	given	given	VERB	V	Tense=Past|VerbForm=Part	59	acl	_	_
58	fixed	fixed	ADJ	A	Degree=Pos	59	amod	_	_
59	precision	precision	NOUN	S	Number=Sing	51	nmod	_	SpaceAfter=No
60	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 98
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 99
# text = The WHOLE Course of Mathematical Analysis I Modulus, of course.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	WHOLE	whole	PROPN	SP	_	3	nmod	_	_
3	Course	course	NOUN	S	Number=Sing	0	root	_	_
4	of	of	ADP	E	_	6	case	_	_
5	Mathematical	mathematical	ADJ	A	Degree=Pos	6	amod	_	_
6	Analysis	analysis	PROPN	SP	_	3	nmod	_	_
7	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	6	nmod	_	_
8	Modulus	Modulus	PROPN	SP	_	7	flat	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	6	punct	_	_
10	of	of	ADV	B	_	11	advmod	_	_
11	course	course	ADV	B	_	6	advmod	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 100
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 101
# text = Theoretical lectures on a projector with examples and exercises, solved in detail.
1	Theoretical	theoretic	ADJ	A	Degree=Pos	2	amod	_	_
2	lectures	lecture	NOUN	S	Number=Plur	0	root	_	_
3	on	on	ADP	E	_	5	case	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
5	projector	projector	NOUN	S	Number=Sing	2	nmod	_	_
6	with	with	ADP	E	_	7	case	_	_
7	examples	examples	NOUN	S	Number=Plur	5	nmod	_	_
8	and	and	CCONJ	CC	_	9	cc	_	_
9	exercises	exercise	NOUN	S	Number=Plur	7	conj	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	5	punct	_	_
11	solved	solve	VERB	V	Tense=Past|VerbForm=Part	5	acl	_	_
12	in	in	ADP	E	_	13	case	_	_
13	detail	detail	NOUN	S	Number=Sing	11	obl	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 102
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 103
# text = Attending the lectures is very important, fundamental and warmly suggested.
1	Attending	Attending	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	lectures	lecture	NOUN	S	Number=Plur	0	root	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
5	very	very	ADV	B	_	6	advmod	_	_
6	important	important	ADJ	A	Degree=Pos	3	acl	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	8	punct	_	_
8	fundamental	fundamental	ADJ	A	Degree=Pos	6	conj	_	_
9	and	and	CCONJ	CC	_	11	cc	_	_
10	warmly	warmly	ADV	B	_	11	advmod	_	_
11	suggested	suggest	VERB	V	Tense=Past|VerbForm=Part	6	conj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 104
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 105
# text = Written (the time is 2 hours) and oral examination.
1	Written	written	ADV	B	_	7	advmod	_	_
2	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	time	time	NOUN	S	Number=Sing	7	nsubj	_	_
5	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
6	2	2	NUM	N	NumType=Card	7	nummod	_	_
7	hours	hour	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	11	punct	_	_
9	and	and	CCONJ	CC	_	11	cc	_	_
10	oral	oral	ADJ	A	Degree=Pos	11	amod	_	_
11	examination	examination	NOUN	S	Number=Sing	7	conj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n

# sent_id = 106
# text = The oral examination is given within two sessions after the written part.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	examination	examine	NOUN	S	Number=Sing	5	nsubj:pass	_	_
4	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
6	within	within	ADP	E	_	8	case	_	_
7	two	two	NUM	N	NumType=Card	8	nummod	_	_
8	sessions	sessions	NOUN	S	Number=Plur	5	obl	_	_
9	after	after	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	written	write	VERB	V	Tense=Past|VerbForm=Part	12	acl	_	_
12	part	part	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 107
# text = In some cases there is the possibility of establishing a calendar, but in any case the exams have to be NECESSARILY BOOKED.
1	In	in	ADP	E	_	3	case	_	_
2	some	some	DET	DI	PronType=Ind	3	det	_	_
3	cases	case	NOUN	S	Number=Plur	5	obl	_	_
4	there	there	PRON	_	_	5	expl	_	_
5	is	be	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	possibility	possibility	NOUN	S	Number=Sing	5	nsubj	_	_
8	of	of	ADP	E	_	9	mark	_	_
9	establishing	establish	VERB	V	VerbForm=Ger	7	acl	_	_
10	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	11	det	_	_
11	calendar	calendar	NOUN	S	Number=Sing	9	obj	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	19	punct	_	_
13	but	but	CCONJ	CC	_	19	cc	_	_
14	in	in	ADP	E	_	16	case	_	_
15	any	any	DET	DI	PronType=Ind	16	det	_	_
16	case	case	NOUN	S	Number=Sing	19	obl	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
18	exams	exam	NOUN	S	Number=Plur	19	nsubj	_	_
19	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	9	conj	_	_
20	to	to	PART	PART	_	22	mark	_	_
21	be	be	AUX	V	VerbForm=Inf	22	cop	_	_
22	NECESSARILY	necessarily	PROPN	SP	_	19	xcomp	_	_
23	BOOKED.	BOOKED.	PROPN	SP	_	22	flat	_	SpacesAfter=\n

# sent_id = 108
# text = The registration to both the written and the oral part MUST BE DONE BY E-MAIL, to which the teacher will answer, some day before the exam.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	registration	registration	NOUN	S	Number=Sing	13	nsubj:pass	_	_
3	to	to	ADP	E	_	6	case	_	_
4	both	both	CCONJ	CC	_	6	cc	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	written	written	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
7	and	and	CCONJ	CC	_	10	cc	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	oral	oral	ADJ	A	Degree=Pos	10	amod	_	_
10	part	part	NOUN	S	Number=Sing	6	conj	_	_
11	MUST	must	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	13	aux	_	_
12	BE	be	AUX	VA	VerbForm=Inf	13	aux:pass	_	_
13	DONE	do	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
14	BY	by	ADP	E	_	15	case	_	_
15	E	E	PROPN	SP	_	13	obl	_	SpaceAfter=No
16	-	-	PUNCT	FF	_	15	punct	_	SpaceAfter=No
17	MAIL	MAIL	PROPN	SP	_	15	flat	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	13	punct	_	_
19	to	to	ADP	E	_	20	case	_	_
20	which	which	PRON	PR	PronType=Rel	24	obl	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
22	teacher	teacher	NOUN	S	Number=Sing	24	nsubj	_	_
23	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	24	aux	_	_
24	answer	answer	VERB	V	VerbForm=Inf	13	advcl	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	24	punct	_	_
26	some	some	DET	DI	PronType=Ind	27	det	_	_
27	day	day	NOUN	S	Number=Sing	24	obj	_	_
28	before	before	ADP	E	_	30	case	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
30	exam	exam	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
31	.	.	PUNCT	FS	_	13	punct	_	SpacesAfter=\s\n

# sent_id = 109
# text = The address is antonio.boccuto@unipg.it
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	address	address	NOUN	S	Number=Sing	4	nsubj:pass	_	_
3	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	_	_
4	antonio.boccuto@unipg.it	antonio.boccuto@unipg.it	VERB	V	Tense=Past|VerbForm=Part	0	root	_	SpacesAfter=\n

# sent_id = 110
# text = It is not possible to receive non-booked or non-confirmed students.
1	It	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	4	expl	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	_	_
3	not	not	PART	PART	Polarity=Neg	4	advmod	_	_
4	possible	possible	ADJ	A	Degree=Pos	0	root	_	_
5	to	to	PART	PART	_	6	mark	_	_
6	receive	receive	VERB	V	VerbForm=Inf	4	csubj	_	_
7	non	non	ADV	BN	PronType=Neg	9	advmod	_	SpaceAfter=No
8	-	-	PUNCT	FF	_	9	punct	_	SpaceAfter=No
9	booked	book	VERB	V	Tense=Past|VerbForm=Part	14	acl	_	_
10	or	or	CCONJ	CC	_	13	cc	_	_
11	non	non	ADV	BN	PronType=Neg	13	advmod	_	SpaceAfter=No
12	-	-	PUNCT	FF	_	13	punct	_	SpaceAfter=No
13	confirmed	confirm	ADJ	A	Degree=Pos	9	conj	_	_
14	students	student	NOUN	S	Number=Plur	6	obj	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 111
# text = The written part consists of two exercises with theoretical sketches.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	written	write	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
3	part	part	NOUN	S	Number=Sing	4	nmod	_	_
4	consists	consist	NOUN	S	Number=Plur	0	root	_	_
5	of	of	ADP	E	_	7	case	_	_
6	two	two	NUM	N	NumType=Card	7	nummod	_	_
7	exercises	exercise	NOUN	S	Number=Plur	4	nmod	_	_
8	with	with	ADP	E	_	10	case	_	_
9	theoretical	theoretic	ADJ	A	Degree=Pos	10	amod	_	_
10	sketches	sketch	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 112
# text = The oral examination is on the WHOLE PROGRAM, included exercises.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	examination	examine	NOUN	S	Number=Sing	7	nsubj	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
5	on	on	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	WHOLE	whole	PROPN	SP	_	11	nmod	_	_
8	PROGRAM	program	PROPN	SP	_	7	flat	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	7	punct	_	_
10	included	include	VERB	V	Tense=Past|VerbForm=Part	11	acl	_	_
11	exercises	exercise	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	11	punct	_	SpacesAfter=\n

# sent_id = 113
# text = The material consists of the "set union" of the didactic material and the lectures of the teacher.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	material	material	ADJ	A	Degree=Pos	3	amod	_	_
3	consists	consist	NOUN	S	Number=Plur	0	root	_	_
4	of	of	ADP	E	_	8	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
6	"	"	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	set	set	ADJ	A	Degree=Pos	8	amod	_	_
8	union	union	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
9	"	"	PUNCT	FB	_	8	punct	_	_
10	of	of	ADP	E	_	13	case	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	didactic	didactic	ADJ	A	Degree=Pos	13	amod	_	_
13	material	material	ADJ	A	Degree=Pos	8	nmod	_	_
14	and	and	CCONJ	CC	_	16	cc	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
16	lectures	lecture	NOUN	S	Number=Plur	13	conj	_	_
17	of	of	ADP	E	_	19	case	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
19	teacher	teacher	NOUN	S	Number=Sing	16	nmod	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 114
# text = A RESPONSIBLE DAILY STUDY IS FUNDAMENTAL.
1	A	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	RESPONSIBLE	responsible	PROPN	SP	_	0	root	_	_
3	DAILY	daily	PROPN	SP	_	2	nmod	_	_
4	STUDY	study	PROPN	SP	_	3	flat	_	_
5	IS	be	PROPN	SP	_	3	flat	_	_
6	FUNDAMENTAL	fundamental	PROPN	SP	_	3	flat	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 115
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\n

# sent_id = 116
# text = Series. Different types of techniques for solving them.
1	Series	series	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	4	punct	_	_
3	Different	different	ADJ	A	Degree=Pos	4	amod	_	_
4	types	type	NOUN	S	Number=Plur	0	root	_	_
5	of	of	ADP	E	_	6	case	_	_
6	techniques	techniques	NOUN	S	Number=Plur	4	nmod	_	_
7	for	for	ADP	E	_	8	mark	_	_
8	solving	solve	VERB	V	VerbForm=Ger	6	acl	_	_
9	them	they	PRON	PE	Number=Plur|Person=3|PronType=Prs	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 117
# text = Double integrals and generalized integrals.
1	Double	double	ADJ	A	Degree=Pos	2	amod	_	_
2	integrals	integral	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	generalized	generalize	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	2	conj	_	_
5	integrals	integral	NOUN	S	Number=Plur	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 118
# text = Applications to Probability and Statistics.
1	Applications	application	NOUN	S	Number=Plur	0	root	_	_
2	to	to	ADP	E	_	3	case	_	_
3	Probability	Probability	PROPN	SP	_	1	nmod	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	Statistics	statistics	PROPN	SP	_	3	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 119
# text = Maxima and minima of functions of several variables, and eigenvalues.
1	Maxima	Maxima	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	minima	minimum	NOUN	S	Number=Sing	1	conj	_	_
4	of	of	ADP	E	_	5	case	_	_
5	functions	function	NOUN	S	Number=Plur	3	nmod	_	_
6	of	of	ADP	E	_	8	case	_	_
7	several	several	ADJ	A	Degree=Pos	8	amod	_	_
8	variables	variable	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	11	punct	_	_
10	and	and	CCONJ	CC	_	11	cc	_	_
11	eigenvalues	eigenvalue	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	conj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 120
# text = Taylor series and applications.
1	Taylor	Taylor	ADP	E	_	2	case	_	_
2	series	series	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	applications	application	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 121
# text = Study-unit COMPUTER ARCHITECTURE
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	COMPUTER	computer	PROPN	SP	_	3	nmod	_	_
5	ARCHITECTURE	ARCHITECTURE	PROPN	SP	_	4	flat	_	SpacesAfter=\n

# sent_id = 122
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 123
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 124
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 125
# text = 20009205
1	20009205	20009205	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 126
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 127
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 128
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 129
# text = Alfredo Navarra
1	Alfredo	Alfredo	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	2	cop	_	_
2	Navarra	Navarra	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 130
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 131
# text = Alfredo Navarra - Didattica Ufficiale
1	Alfredo	Alfredo	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	2	cop	_	SpacesBefore=\s\s\s\s
2	Navarra	Navarra	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	SpacesAfter=\n

# sent_id = 132
# text = Raffaella Gentilini - Didattica Ufficiale (Codocenza)
1	Raffaella	Raffaellà	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Gentilini	Gentilini	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 133
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 134
# text = 42 Hours - Didattica Ufficiale - Alfredo Navarra
1	42	42	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	8	nsubj	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	2	punct	_	_
7	Alfredo	Alfredo	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	8	cop	_	_
8	Navarra	Navarra	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 135
# text = 21 Hours - Didattica Ufficiale (Codocenza) - Raffaella Gentilini
1	21	21	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	4	appos	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	4	punct	_	_
10	Raffaella	Raffaella	PROPN	SP	_	4	flat	_	_
11	Gentilini	Gentilini	PROPN	SP	_	2	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 136
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 137
# text = 9
1	9	9	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 138
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 139
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 140
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 141
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 142
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 143
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 144
# text = Base
1	Base	base	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 145
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 146
# text = Formazione informatica di base
1	Formazione	Formazione	PRON	PE	Number=Sing|Person=3|PronType=Prs	4	nsubj	_	_
2	informatica	informatica	X	X	_	4	nmod	_	_
3	di	fdirst	X	X	_	4	nmod	_	_
4	base	base	NOUN	S	Gender=Masc|Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 147
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 148
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 149
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 150
# text = whole year
1	whole	whole	SCONJ	CS	_	2	mark	_	_
2	year	year	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 151
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 152
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 153
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 154
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 155
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 156
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 157
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 158
# text = MODULE I: This module provides a primer in digital logic design, focusing on
1	MODULE	Module	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	6	nsubj	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	6	punct	_	_
4	This	this	DET	DD	Number=Sing|PronType=Dem	5	det	_	_
5	module	module	NOUN	S	Number=Sing	6	nsubj	_	_
6	provides	provide	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
8	primer	primer	NOUN	S	Number=Sing	6	obj	_	_
9	in	in	ADP	E	_	12	case	_	_
10	digital	digit	ADJ	A	Degree=Pos	12	amod	_	_
11	logic	logic	ADJ	A	Degree=Pos	12	amod	_	_
12	design	design	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	12	punct	_	_
14	focusing	focus	VERB	V	VerbForm=Ger	6	advcl	_	_
15	on	on	ADP	E	_	14	compound:prt	_	SpacesAfter=\n

# sent_id = 159
# text = boolean functions and boolean algebra
1	boolean	boolean	ADJ	A	Degree=Pos	2	amod	_	_
2	functions	function	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	5	cc	_	_
4	boolean	boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	algebra	algebrà	NOUN	S	Number=Sing	2	conj	_	SpacesAfter=\s\n

# sent_id = 160
# text = combinational circuit analysis and synthesis
1	combinational	combinational	ADJ	A	Degree=Pos	3	amod	_	_
2	circuit	circuit	NOUN	S	Number=Sing	3	nmod	_	_
3	analysis	analysis	NOUN	S	Number=Sing	0	root	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	synthesis	synthesis	NOUN	S	Number=Sing	3	conj	_	SpacesAfter=\n

# sent_id = 161
# text = basics of sequential circuits.
1	basics	basics	NOUN	S	Number=Plur	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	sequential	sequential	ADJ	A	Degree=Pos	4	amod	_	_
4	circuits	circuit	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 162
# text = MODULE II:
1	MODULE	Module	PROPN	SP	_	0	root	_	_
2	II	second	ADJ	NO	Degree=Pos|NumType=Ord	1	flat	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 163
# text = Numbers representation: positional, sign-and-magnitude, twos' complement; Designs of adders, multipliers, and dividers; Floating points: 16 bit standard IEEE 754; Cellular automata: Game of Life, Scintillae and Computer architecture; Abstraction levels: Functional level, RTL.
1	Numbers	number	NOUN	S	Number=Plur	2	nmod	_	_
2	representation	representation	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	4	punct	_	_
4	positional	positional	ADJ	A	Degree=Pos	2	amod	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	6	punct	_	_
6	sign	sign	ADJ	A	Degree=Pos	4	conj	_	SpaceAfter=No
7	-	-	PUNCT	FF	_	4	punct	_	SpaceAfter=No
8	and	and	CCONJ	CC	_	10	cc	_	SpaceAfter=No
9	-	-	PUNCT	FF	_	10	punct	_	SpaceAfter=No
10	magnitude	magnitude	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	twos	two	NOUN	S	Number=Plur	4	conj	_	SpaceAfter=No
13	'	'	PART	PART	_	14	case	_	_
14	complement	complement	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
15	;	;	PUNCT	FC	_	16	punct	_	_
16	Designs	Designs	PROPN	SP	_	14	appos	_	_
17	of	of	ADP	E	_	18	case	_	_
18	adders	adder	NOUN	S	Number=Plur	16	nmod	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	20	punct	_	_
20	multipliers	multiplier	NOUN	S	Number=Plur	18	conj	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	23	punct	_	_
22	and	and	CCONJ	CC	_	23	cc	_	_
23	dividers	divider	NOUN	S	Number=Plur	18	conj	_	SpaceAfter=No
24	;	;	PUNCT	FC	_	16	punct	_	_
25	Floating	float	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	14	acl	_	_
26	points	point	NOUN	S	Number=Plur	47	nmod	_	SpaceAfter=No
27	:	:	PUNCT	FC	_	47	punct	_	_
28	16	16	NUM	N	NumType=Card	29	nummod	_	_
29	bit	bit	NOUN	S	Number=Sing	47	nmod	_	_
30	standard	standard	ADJ	A	Degree=Pos	47	amod	_	_
31	IEEE	Ieee	PROPN	SP	_	35	nmod	_	_
32	754	754	NUM	N	NumType=Card	35	nummod	_	SpaceAfter=No
33	;	;	PUNCT	FC	_	32	punct	_	_
34	Cellular	Cellular	ADJ	A	Degree=Pos	35	amod	_	_
35	automata	automatum	NOUN	S	Number=Plur	47	nmod	_	SpaceAfter=No
36	:	:	PUNCT	FC	_	37	punct	_	_
37	Game	game	PROPN	SP	_	47	nmod	_	_
38	of	of	ADP	E	_	39	case	_	_
39	Life	life	PROPN	SP	_	37	nmod	_	SpaceAfter=No
40	,	,	PUNCT	FF	_	41	punct	_	_
41	Scintillae	Scintillae	PROPN	SP	_	39	conj	_	_
42	and	and	CCONJ	CC	_	44	cc	_	_
43	Computer	computer	ADJ	A	Degree=Cmp	44	amod	_	_
44	architecture	architecture	NOUN	S	Number=Sing	39	conj	_	SpaceAfter=No
45	;	;	PUNCT	FC	_	37	punct	_	_
46	Abstraction	Abstraction	NOUN	S	Number=Sing	47	nmod	_	_
47	levels	level	NOUN	S	Number=Plur	25	obj	_	SpaceAfter=No
48	:	:	PUNCT	FC	_	50	punct	_	_
49	Functional	functional	ADJ	A	Degree=Pos	50	amod	_	_
50	level	level	NOUN	S	Number=Sing	47	nmod	_	SpaceAfter=No
51	,	,	PUNCT	FF	_	52	punct	_	_
52	RTL	RTL	PROPN	SP	_	50	conj	_	SpaceAfter=No
53	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 164
# text = Micro-oprerations.
1	Micro	Micro	NUM	N	NumType=Card	2	nummod	_	SpaceAfter=No
2	-oprerations	-opreration	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 165
# text = Control Unit.
1	Control	control	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Unit	unit	PROPN	SP	_	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 166
# text = Machine cycle.
1	Machine	machine	PROPN	SP	_	2	nmod	_	_
2	cycle	cycle	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 167
# text = PDP8: register level, functional level, control unit, Assembly.
1	PDP8	PDP8	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	register	register	NOUN	S	Number=Sing	4	nmod	_	_
4	level	level	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	7	punct	_	_
6	functional	functional	ADJ	A	Degree=Pos	7	amod	_	_
7	level	level	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	10	punct	_	_
9	control	control	NOUN	S	Number=Sing	10	nmod	_	_
10	unit	unit	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	Assembly	assembly	ADV	B	_	4	conj	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 168
# text = Cache memory. Pipelining.
1	Cache	Cache	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	memory	memory	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	4	punct	_	_
4	Pipelining	Pipelining	PROPN	SP	_	2	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 169
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 170
# text = MODULE I:
1	MODULE	Module	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 171
# text = 1. Cristiana Bolchini, Carlo Brandolese, Fabio Salice, Donatella Sciuto.
1	1	1	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	1	punct	_	_
3	Cristiana	Cristiana	PROPN	SP	_	0	root	_	_
4	Bolchini	Bolchini	PROPN	SP	_	3	flat	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	6	punct	_	_
6	Carlo	Carlo	PROPN	SP	_	3	conj	_	_
7	Brandolese	Brandolese	PROPN	SP	_	6	flat	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	9	punct	_	_
9	Fabio	Fabio	PROPN	SP	_	3	conj	_	_
10	Salice	Salice	PROPN	SP	_	9	flat	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	Donatella	Donatella	PROPN	SP	_	3	conj	_	_
13	Sciuto	Sciuto	PROPN	SP	_	12	flat	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 172
# text = Reti Logiche.
1	Reti	Reti	PROPN	SP	_	0	root	_	_
2	Logiche	Logiche	PROPN	SP	_	1	flat	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 173
# text = Maggioli Editore, 2015, Apogeo Education.
1	Maggioli	Maggioli	NOUN	S	Gender=Fem|Number=Sing	0	root	_	_
2	Editore	Editore	ADV	B	_	1	advmod	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	4	punct	_	_
4	2015	2015	NUM	N	NumType=Card	1	conj	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	7	punct	_	_
6	Apogeo	Apogeo	PROPN	SP	_	7	nmod	_	_
7	Education	education	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 174
# text = MODULE II:
1	MODULE	Module	PROPN	SP	_	0	root	_	_
2	II	second	ADJ	NO	Degree=Pos|NumType=Ord	1	flat	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 175
# text = 2. F. Barsi: Architettura degli elaboratori, parte seconda: struttura dei sistemi. Margiacchi-Galeno
1	2	2	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	1	punct	_	_
3	F	F	PROPN	SP	_	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FF	_	5	punct	_	_
5	Barsi	Barsi	PROPN	SP	_	3	flat	_	SpaceAfter=No
6	:	:	PUNCT	FF	_	5	punct	_	_
7	Architettura	Architettura	PROPN	SP	_	5	flat	_	_
8	degli	degli	X	X	_	5	flat	_	_
9	elaboratori	elaboratori	X	X	_	5	flat	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	12	punct	_	_
11	parte	parte	ADJ	A	Degree=Pos	12	amod	_	_
12	seconda	seconda	NOUN	S	Number=Sing	5	conj	_	SpaceAfter=No
13	:	:	PUNCT	FC	_	5	punct	_	_
14	struttura	struttura	X	X	_	5	flat	_	_
15	dei	fdeirst	X	X	_	5	flat	_	_
16	sistemi	sistemi	X	X	_	5	flat	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	18	punct	_	_
18	Margiacchi	Margiacchi	PROPN	SP	_	5	flat	_	SpaceAfter=No
19	-	-	PUNCT	FF	_	5	punct	_	SpaceAfter=No
20	Galeno	Galeno	PROPN	SP	_	3	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 176
# text = 3. C. Hamacher, Z. Vranesic, S. Zaky, Naraig Manjikian: Introduzione all'architettura dei calcolatori III edizione. McGraw-Hill
1	3	3	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	1	punct	_	_
3	C	C	PROPN	SP	_	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FF	_	5	punct	_	_
5	Hamacher	Hamacher	PROPN	SP	_	3	flat	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	7	punct	_	_
7	Z	z	PROPN	SP	_	3	conj	_	SpaceAfter=No
8	.	.	PUNCT	FF	_	9	punct	_	_
9	Vranesic	Vranesic	PROPN	SP	_	7	flat	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	11	punct	_	_
11	S.	S.	PROPN	SP	_	3	conj	_	_
12	Zaky	Zaky	PROPN	SP	_	11	flat	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	3	punct	_	_
14	Naraig	Naraig	PROPN	SP	_	3	nmod	_	_
15	Manjikian	Manjikian	PROPN	SP	_	14	flat	_	SpaceAfter=No
16	:	:	PUNCT	FF	_	17	punct	_	_
17	Introduzione	Introduzione	PROPN	SP	_	14	flat	_	_
18	all	all	DET	T	PronType=Tot	24	det	_	SpaceAfter=No
19	'	'	X	X	_	18	fixed	_	SpaceAfter=No
20	architettura	architettura	X	X	_	18	fixed	_	_
21	dei	dei	X	X	_	24	nmod	_	_
22	calcolatori	calcolatori	X	X	_	24	nmod	_	_
23	III	third	ADJ	NO	Degree=Pos|NumType=Ord	24	amod	_	_
24	edizione	edizione	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
25	.	.	PUNCT	FS	_	26	punct	_	_
26	McGraw	McGraw	PROPN	SP	_	24	nmod	_	SpaceAfter=No
27	-	-	PUNCT	FF	_	26	punct	_	SpaceAfter=No
28	Hill	Hill	PROPN	SP	_	26	flat	_	SpacesAfter=\n

# sent_id = 177
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 178
# text = Knowledge and understanding about basic properties of a computer, including assembly programming
1	Knowledge	knowledge	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	understanding	understande	NOUN	S	Number=Sing	1	conj	_	_
4	about	about	ADP	E	_	6	case	_	_
5	basic	basic	ADJ	A	Degree=Pos	6	amod	_	_
6	properties	property	NOUN	S	Number=Plur	3	nmod	_	_
7	of	of	ADP	E	_	9	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
9	computer	computer	NOUN	S	Number=Sing	6	nmod	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	9	punct	_	_
11	including	include	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	12	acl	_	_
12	assembly	assembly	NOUN	S	Number=Sing	13	nmod	_	_
13	programming	program	NOUN	S	Number=Sing	9	nmod	_	SpacesAfter=\n

# sent_id = 179
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 180
# text = none
1	none	no	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 181
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 182
# text = Face-to-face
1	Face	face	ADV	B	_	5	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	to	to	ADP	E	_	1	fixed	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	face	face	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 183
# text = Practical training
1	Practical	practical	ADJ	A	Degree=Pos	2	amod	_	_
2	training	training	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 184
# text = Seminars
1	Seminars	seminar	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 185
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 186
# text = examination in class
1	examination	examination	NOUN	S	Number=Sing	0	root	_	_
2	in	in	ADP	E	_	3	case	_	_
3	class	class	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\n

# sent_id = 187
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 188
# text = MODULE I:
1	MODULE	Module	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 189
# text = Boolean algebra and logic gates: basic theorems and properties of boolean algebra, boolean functions, canonical forms, digital logic gates.
1	Boolean	Boolean	ADJ	A	Degree=Pos	2	amod	_	_
2	algebra	algebrà	NOUN	S	Number=Sing	0	root	_	_
3	and	and	CCONJ	CC	_	5	cc	_	_
4	logic	logic	ADJ	A	Degree=Pos	5	amod	_	_
5	gates	gate	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
6	:	:	PUNCT	FC	_	8	punct	_	_
7	basic	basic	ADJ	A	Degree=Pos	8	amod	_	_
8	theorems	theorem	NOUN	S	Number=Plur	2	conj	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	properties	property	NOUN	S	Number=Plur	8	conj	_	_
11	of	of	ADP	E	_	13	case	_	_
12	boolean	boolean	ADJ	A	Degree=Pos	13	amod	_	_
13	algebra	algebra	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	16	punct	_	_
15	boolean	boolean	ADJ	A	Degree=Pos	16	amod	_	_
16	functions	function	NOUN	S	Number=Plur	13	conj	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	19	punct	_	_
18	canonical	canonical	ADJ	A	Degree=Pos	19	amod	_	_
19	forms	form	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	23	punct	_	_
21	digital	digit	ADJ	A	Degree=Pos	23	amod	_	_
22	logic	logic	NOUN	S	Number=Sing	23	nmod	_	_
23	gates	gate	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 190
# text = Study-unit PROCEDURAL PROGRAMMING WITH LABORATORY
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	PROCEDURAL	Procedural	PROPN	SP	_	3	nmod	_	_
5	PROGRAMMING	programme	PROPN	SP	_	4	flat	_	_
6	WITH	with	PROPN	SP	_	4	flat	_	_
7	LABORATORY	laboratory	PROPN	SP	_	3	nmod	_	SpacesAfter=\n

# sent_id = 191
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 192
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 193
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 194
# text = A002058
1	A002058	A002058	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 195
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 196
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 197
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 198
# text = Francesco Santini
1	Francesco	Francesco	PROPN	SP	_	0	root	_	_
2	Santini	Santini	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 199
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 200
# text = Francesco Santini - Didattica Ufficiale
1	Francesco	Francesco	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Santini	Santini	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 201
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 202
# text = 73 Hours - Didattica Ufficiale - Francesco Santini
1	73	73	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	4	nmod	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	0	root	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Francesco	Francesco	PROPN	SP	_	4	flat	_	_
8	Santini	Santini	PROPN	SP	_	4	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 203
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 204
# text = 9
1	9	9	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 205
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 206
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 207
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 208
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 209
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 210
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 211
# text = Caratterizzante
1	Caratterizzante	Caratterizzante	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 212
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 213
# text = Discipline informatiche
1	Discipline	discipline	NOUN	S	Number=Sing	2	nmod	_	_
2	informatiche	informatiche	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 214
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 215
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 216
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 217
# text = I
1	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 218
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 219
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 220
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 221
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 222
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 223
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 224
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 225
# text = Introduction to programming.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	programming	programme	VERB	V	VerbForm=Ger	1	acl	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 226
# text = C programming language.
1	C	Celsius	PROPN	SP	_	3	nmod	_	_
2	programming	programme	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	3	acl	_	_
3	language	language	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 227
# text = Linked lists.
1	Linked	link	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
2	lists	list	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 228
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 229
# text = C How to Program (8th Edition), Paul J. Deitel and Harvey M. Deitel (Authors), Publisher: Pearson; 8 edizione, ISBN-10: 0133976890, Pages: 1008, 2015.
1	C	Celsius	PROPN	SP	_	0	root	_	_
2	How	how	ADV	B	_	1	advmod	_	_
3	to	to	ADP	E	_	4	case	_	_
4	Program	program	PROPN	SP	_	1	nmod	_	_
5	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
6	8	8	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
7	th	th	ADJ	A	Degree=Pos	8	amod	_	_
8	Edition	edition	NOUN	S	Number=Sing	4	appos	_	SpaceAfter=No
9	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	11	punct	_	_
11	Paul	Paul	PROPN	SP	_	4	conj	_	_
12	J	j	PROPN	SP	_	11	flat	_	SpaceAfter=No
13	.	.	PUNCT	FF	_	14	punct	_	_
14	Deitel	Deitel	PROPN	SP	_	4	flat	_	_
15	and	and	CCONJ	CC	_	16	cc	_	_
16	Harvey	Harvey	PROPN	SP	_	4	conj	_	_
17	M.	M.	PROPN	SP	_	16	flat	_	_
18	Deitel	Deitel	PROPN	SP	_	16	flat	_	_
19	(	(	PUNCT	FB	_	20	punct	_	SpaceAfter=No
20	Authors	authors	PROPN	SP	_	16	appos	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	23	punct	_	_
23	Publisher	publisher	PROPN	SP	_	4	conj	_	SpaceAfter=No
24	:	:	PUNCT	FF	_	25	punct	_	_
25	Pearson	Pearson	PROPN	SP	_	23	flat	_	SpaceAfter=No
26	;	;	PUNCT	FC	_	28	punct	_	_
27	8	8	NUM	N	NumType=Card	28	nummod	_	_
28	edizione	edizione	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	28	punct	_	_
30	ISBN-10	ISBN-10	ADJ	A	Degree=Pos	34	amod	_	SpaceAfter=No
31	:	:	PUNCT	FF	_	32	punct	_	_
32	0133976890	0133976890	NUM	N	NumType=Card	34	nummod	_	SpaceAfter=No
33	,	,	PUNCT	FF	_	32	punct	_	_
34	Pages	pages	PROPN	SP	_	28	nmod	_	SpaceAfter=No
35	:	:	PUNCT	FF	_	36	punct	_	_
36	1008	1008	NUM	N	NumType=Card	34	nummod	_	SpaceAfter=No
37	,	,	PUNCT	FF	_	36	punct	_	_
38	2015	2015	NUM	N	NumType=Card	36	nummod	_	SpaceAfter=No
39	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 230
# text = C Pocket Reference, Peter Prinz, Ulla Kirch-Prinzm, Publisher: O'Reilly Media, ISBN-10: 0596004362, Pages: 144, 2002.
1	C	Celsius	PROPN	SP	_	3	nmod	_	_
2	Pocket	pocket	PROPN	SP	_	1	flat	_	_
3	Reference	reference	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	Peter	Peter	PROPN	SP	_	3	conj	_	_
6	Prinz	Prinz	PROPN	SP	_	5	flat	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	9	punct	_	_
8	Ulla	Ulla	PROPN	SP	_	9	nmod	_	_
9	Kirch	Kirch	PROPN	SP	_	3	conj	_	SpaceAfter=No
10	-	-	PUNCT	FF	_	9	punct	_	SpaceAfter=No
11	Prinzm	Prinzm	PROPN	SP	_	9	flat	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	Publisher	publisher	PROPN	SP	_	3	conj	_	SpaceAfter=No
14	:	:	PUNCT	FF	_	15	punct	_	_
15	O	O	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	'	'	PUNCT	FF	_	15	punct	_	SpaceAfter=No
17	Reilly	Reilly	PROPN	SP	_	15	flat	_	_
18	Media	media	PROPN	SP	_	15	flat	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	15	punct	_	_
20	ISBN-10	ISBN-10	ADJ	A	Degree=Pos	15	flat	_	SpaceAfter=No
21	:	:	PUNCT	FF	_	15	punct	_	_
22	059600	059600	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
23	4362	4362	NUM	N	NumType=Card	22	nummod	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	22	punct	_	_
25	Pages	pages	PROPN	SP	_	22	nmod	_	SpaceAfter=No
26	:	:	PUNCT	FF	_	27	punct	_	_
27	144	144	NUM	N	NumType=Card	25	nummod	_	SpaceAfter=No
28	,	,	PUNCT	FF	_	27	punct	_	_
29	2002	2002	NUM	N	NumType=Card	27	nummod	_	SpaceAfter=No
30	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 231
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 232
# text = Students will learn basic programming concepts and problem solving.
1	Students	student	NOUN	S	Number=Plur	3	nsubj	_	_
2	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	learn	learn	VERB	V	VerbForm=Inf	0	root	_	_
4	basic	basic	ADJ	A	Degree=Pos	5	amod	_	_
5	programming	programming	NOUN	S	Number=Sing	6	nmod	_	_
6	concepts	concept	NOUN	S	Number=Plur	3	obj	_	_
7	and	and	CCONJ	CC	_	8	cc	_	_
8	problem	problem	NOUN	S	Number=Sing	3	conj	_	_
9	solving	solve	VERB	V	VerbForm=Ger	8	acl	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 233
# text = Moreover, we will directly acquire programming skills using C language.
1	Moreover	moreover	ADV	B	_	6	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	6	nsubj	_	_
4	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	directly	directly	ADV	B	_	6	advmod	_	_
6	acquire	acquire	VERB	V	VerbForm=Inf	0	root	_	_
7	programming	programming	VERB	V	VerbForm=Ger	6	advcl	_	_
8	skills	skill	NOUN	S	Number=Plur	7	obj	_	_
9	using	use	VERB	V	VerbForm=Ger	7	advcl	_	_
10	C	Celsius	PROPN	SP	_	11	nmod	_	_
11	language	language	NOUN	S	Number=Sing	9	obj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 234
# text = Finally, we will be able to use a linked list and its basic operations, e.g., insertion and deletion of elements.
1	Finally	finally	ADV	B	_	6	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	6	nsubj	_	_
4	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	be	be	AUX	V	VerbForm=Inf	6	cop	_	_
6	able	able	ADJ	A	Degree=Pos	0	root	_	_
7	to	to	PART	PART	_	8	mark	_	_
8	use	use	VERB	V	VerbForm=Inf	6	advcl	_	_
9	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	11	det	_	_
10	linked	linked	VERB	V	Tense=Past|VerbForm=Part	11	acl	_	_
11	list	list	NOUN	S	Number=Sing	8	obj	_	_
12	and	and	CCONJ	CC	_	15	cc	_	_
13	its	its	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	15	nmod:poss	_	_
14	basic	basic	ADJ	A	Degree=Pos	15	amod	_	_
15	operations	operation	NOUN	S	Number=Plur	11	conj	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	11	punct	_	_
17	e.g.	e.g.	X	SW	Foreign=Yes	11	nmod	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	19	punct	_	_
19	insertion	insertion	NOUN	S	Number=Sing	17	conj	_	_
20	and	and	CCONJ	CC	_	21	cc	_	_
21	deletion	deletion	NOUN	S	Number=Sing	17	conj	_	_
22	of	of	ADP	E	_	23	case	_	_
23	elements	element	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 235
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 236
# text = No prerequisite in particular.
1	No	no	DET	DI	PronType=Ind	2	det	_	_
2	prerequisite	prerequisite	NOUN	S	Number=Sing	0	root	_	_
3	in	in	ADP	E	_	4	case	_	_
4	particular	particular	ADJ	A	Number=Sing	2	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 237
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 238
# text = Lectures with slides.
1	Lectures	Lecture	NOUN	S	Number=Plur	0	root	_	_
2	with	with	ADP	E	_	3	case	_	_
3	slides	slide	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 239
# text = Home assignments.
1	Home	home	DET	DI	PronType=Ind	2	det	_	_
2	assignments	assignment	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 240
# text = Compilation examples.
1	Compilation	Compilation	NOUN	S	Number=Sing	2	nmod	_	_
2	examples	examples	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 241
# text = Classroom exercises.
1	Classroom	Classroom	ADP	E	_	2	case	_	_
2	exercises	exercise	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 242
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 243
# text = Attendance of lessons is strongly suggested
1	Attendance	attendance	NOUN	S	Number=Sing	6	nsubj:pass	_	_
2	of	of	ADP	E	_	3	case	_	_
3	lessons	lesson	NOUN	S	Number=Plur	1	nmod	_	_
4	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	_	_
5	strongly	strongly	ADV	B	_	6	advmod	_	_
6	suggested	suggest	VERB	V	Tense=Past|VerbForm=Part	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 244
# text = Website: www.unistudium.unipg.it
1	Website	website	ADV	B	_	3	advmod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	www.unistudium.unipg.it	www.unistudium.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 245
# text = For the exam schedule, see:
1	For	for	ADP	E	_	4	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	exam	exam	NOUN	S	Number=Sing	4	nmod	_	_
4	schedule	schedule	NOUN	S	Number=Sing	6	obl	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	4	punct	_	_
6	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
7	:	:	PUNCT	FC	_	6	punct	_	SpacesAfter=\n

# sent_id = 246
# text = www.informatica.unipg.it
1	www.informatica.unipg.it	www.informatica.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 247
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 248
# text = Written exam with 9-10 exercises based on understanding and writing pieces of code in C language (duration: 2 hours and half).
1	Written	write	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
2	exam	exam	NOUN	S	Number=Sing	0	root	_	_
3	with	with	ADP	E	_	5	case	_	_
4	9-10	9-10	ADJ	A	Degree=Pos	5	amod	_	_
5	exercises	exercise	NOUN	S	Number=Plur	2	nmod	_	_
6	based	based	VERB	V	Tense=Past|VerbForm=Part	5	acl	_	_
7	on	on	ADP	E	_	11	case	_	_
8	understanding	understande	ADJ	A	Degree=Pos	11	amod	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	writing	write	ADJ	A	Degree=Pos	8	conj	_	_
11	pieces	piece	NOUN	S	Number=Plur	6	obl	_	_
12	of	of	ADP	E	_	13	case	_	_
13	code	code	NOUN	S	Number=Sing	11	nmod	_	_
14	in	in	ADP	E	_	16	case	_	_
15	C	Celsius	ADJ	A	Degree=Pos	16	amod	_	_
16	language	language	NOUN	S	Number=Sing	13	nmod	_	_
17	(	(	PUNCT	FB	_	18	punct	_	SpaceAfter=No
18	duration	duration	NOUN	S	Number=Sing	13	nmod	_	SpaceAfter=No
19	:	:	PUNCT	FC	_	21	punct	_	_
20	2	2	NUM	N	NumType=Card	21	nummod	_	_
21	hours	hour	NOUN	S	Number=Plur	18	nmod	_	_
22	and	and	CCONJ	CC	_	23	cc	_	_
23	half	half	NOUN	S	Gender=Masc|Number=Sing	21	conj	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 249
# text = If the marks of the written exam are good enough, the student is required to give a lab exam where she will be asked to modify some parts of a project developed at home (duration: 1 hour).
1	If	if	SCONJ	CS	_	10	mark	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	marks	mark	NOUN	S	Number=Sing	10	nsubj	_	_
4	of	of	ADP	E	_	7	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
6	written	written	VERB	V	Tense=Past|VerbForm=Part	7	acl	_	_
7	exam	exbe	NOUN	S	Number=Sing	3	nmod	_	_
8	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	10	cop	_	_
9	good	good	ADV	B	_	10	advmod	_	_
10	enough	enough	ADJ	A	Degree=Pos	15	advcl	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	10	punct	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
13	student	student	NOUN	S	Number=Sing	15	nsubj:pass	_	_
14	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	aux:pass	_	_
15	required	require	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
16	to	to	PART	PART	_	17	mark	_	_
17	give	give	VERB	V	VerbForm=Inf	15	xcomp	_	_
18	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	20	det	_	_
19	lab	lab	NOUN	S	Number=Sing	20	nmod	_	_
20	exam	exam	NOUN	S	Number=Sing	17	obj	_	_
21	where	where	PRON	PR	PronType=Rel	25	obl	_	_
22	she	she	PRON	PE	Gender=Fem|Number=Sing|Person=3|PronType=Prs	25	nsubj:pass	_	_
23	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	25	aux	_	_
24	be	be	AUX	VA	VerbForm=Inf	25	aux:pass	_	_
25	asked	ask	VERB	V	Tense=Past|VerbForm=Part	20	acl:relcl	_	_
26	to	to	PART	PART	_	27	mark	_	_
27	modify	modify	VERB	V	VerbForm=Inf	25	advcl	_	_
28	some	some	DET	DI	PronType=Ind	29	det	_	_
29	parts	part	NOUN	S	Number=Plur	27	obj	_	_
30	of	of	ADP	E	_	32	case	_	_
31	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	32	det	_	_
32	project	project	NOUN	S	Number=Sing	29	nmod	_	_
33	developed	develop	VERB	V	Tense=Past|VerbForm=Part	32	acl	_	_
34	at	at	ADP	E	_	35	case	_	_
35	home	home	NOUN	S	Number=Sing	33	obl	_	_
36	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
37	duration	duration	NOUN	S	Number=Sing	35	nmod	_	SpaceAfter=No
38	:	:	PUNCT	FC	_	40	punct	_	_
39	1	1	NUM	N	NumType=Card	40	nummod	_	_
40	hour	hour	NOUN	S	Number=Sing	37	appos	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	.	.	PUNCT	FS	_	15	punct	_	SpacesAfter=\s\n

# sent_id = 250
# text = Some further questions can asked at the end of the Lab exam, depending on the marks of the two previous tests.
1	Some	some	DET	DI	PronType=Ind	3	det	_	_
2	further	further	ADJ	A	Degree=Pos	3	amod	_	_
3	questions	questions	NOUN	S	Number=Plur	5	nsubj	_	_
4	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	asked	ask	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
6	at	at	ADP	E	_	8	case	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	end	end	NOUN	S	Number=Sing	5	obl	_	_
9	of	of	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	Lab	lab	ADJ	A	Degree=Pos	12	amod	_	_
12	exam	exam	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	8	punct	_	_
14	depending	depend	VERB	V	VerbForm=Ger	8	acl	_	_
15	on	on	ADP	E	_	17	case	_	_
16	the	the	DET	RD	Definite=Def|PronType=Art	17	det	_	_
17	marks	marks	NOUN	S	Number=Sing	14	obl	_	_
18	of	of	ADP	E	_	22	case	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
20	two	two	NUM	N	NumType=Card	22	nummod	_	_
21	previous	previous	ADJ	A	Degree=Pos	22	amod	_	_
22	tests	tests	NOUN	S	Number=Plur	17	nmod	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 251
# text = The written exam is scored 18-30, then 4-5 more points will be given to the assigned project.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	written	written	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
3	exam	exbe	NOUN	S	Number=Sing	5	nsubj:pass	_	_
4	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	scored	score	VERB	V	Tense=Past|VerbForm=Part	14	advcl	_	_
6	18-30	18-30	ADJ	A	Degree=Pos	5	xcomp	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	5	punct	_	_
8	then	then	ADV	B	_	9	advmod	_	_
9	4-5	4-5	NUM	N	NumType=Card	11	nummod	_	_
10	more	more	ADV	B	Degree=Cmp	9	advmod	_	_
11	points	point	NOUN	S	Number=Plur	14	nsubj:pass	_	_
12	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	14	aux	_	_
13	be	be	AUX	VA	VerbForm=Inf	14	aux:pass	_	_
14	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
15	to	to	ADP	E	_	18	case	_	_
16	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
17	assigned	assigned	ADJ	A	Degree=Pos	18	amod	_	_
18	project	project	NOUN	S	Number=Sing	14	obl	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	14	punct	_	SpacesAfter=\s\n

# sent_id = 252
# text = The oral exam is then used to assess the skills of a student and tune the final mark.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	exam	exam	NOUN	S	Number=Sing	6	nsubj:pass	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	_	_
5	then	then	ADV	B	_	6	advmod	_	_
6	used	use	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
7	to	to	PART	PART	_	8	mark	_	_
8	assess	assess	VERB	V	VerbForm=Inf	6	xcomp	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	skills	skill	NOUN	S	Number=Plur	8	obj	_	_
11	of	of	ADP	E	_	13	case	_	_
12	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	det	_	_
13	student	student	NOUN	S	Number=Sing	10	nmod	_	_
14	and	and	CCONJ	CC	_	15	cc	_	_
15	tune	tune	VERB	V	VerbForm=Inf	8	conj	_	_
16	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
17	final	final	ADJ	A	Degree=Pos	18	amod	_	_
18	mark	mark	NOUN	S	Number=Sing	15	obj	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 253
# text = For information on support services for students with disabilities and / or DSA visit the page http://www.unipg.it/disabilita-e-dsa
1	For	for	ADP	E	_	2	case	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	_
3	on	on	ADP	E	_	5	case	_	_
4	support	support	NOUN	S	Number=Sing	5	nmod	_	_
5	services	service	NOUN	S	Number=Plur	2	nmod	_	_
6	for	for	ADP	E	_	7	case	_	_
7	students	student	NOUN	S	Number=Plur	5	nmod	_	_
8	with	with	ADP	E	_	9	case	_	_
9	disabilities	disability	NOUN	S	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	CC	_	14	cc	_	_
11	/	/	PUNCT	FF	_	13	punct	_	_
12	or	or	CCONJ	CC	_	13	cc	_	_
13	DSA	DSA	PROPN	SP	_	10	conj	_	_
14	visit	visit	VERB	V	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	9	conj	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	17	det	_	_
16	page	page	NOUN	S	Number=Sing	17	nmod	_	_
17	http://www.unipg.it/disabilita-e-dsa	http://www.unipg.it/disabilita-e-dsà	NOUN	S	Number=Sing	14	obj	_	SpacesAfter=\n

# sent_id = 254
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 255
# text = - Introduction to programming languages
1	-	-	PUNCT	FF	_	2	punct	_	_
2	Introduction	introduction	NOUN	S	Number=Sing	5	nmod	_	_
3	to	to	PART	PART	_	4	mark	_	_
4	programming	programme	VERB	V	VerbForm=Ger	2	acl	_	_
5	languages	language	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 256
# text = - Interpreted and compiled languages
1	-	-	PUNCT	FF	_	2	punct	_	_
2	Interpreted	interpret	PROPN	SP	_	5	nmod	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	compiled	compil	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	2	conj	_	_
5	languages	language	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 257
# text = - Names, scope
1	-	-	PUNCT	FF	_	2	punct	_	_
2	Names	names	PROPN	SP	_	4	nsubj	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	scope	scope	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 258
# text = - Versioning systems (GitHub)
1	-	-	PUNCT	FF	_	2	punct	_	_
2	Versioning	Versioning	PROPN	SP	_	3	nmod	_	_
3	systems	system	NOUN	S	Number=Plur	0	root	_	_
4	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
5	GitHub	GitHub	PROPN	SP	_	3	nmod	_	SpaceAfter=No
6	)	)	PUNCT	FB	_	5	punct	_	SpacesAfter=\n

# sent_id = 259
# text = - C language:
1	-	-	PUNCT	FF	_	2	punct	_	_
2	C	Celsius	PROPN	SP	_	3	nmod	_	_
3	language	language	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	:	:	PUNCT	FC	_	3	punct	_	SpacesAfter=\n

# sent_id = 260
# text = Language Basics
1	Language	language	NOUN	S	Number=Sing	2	nmod	_	_
2	Basics	Basics	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 261
# text = Types
1	Types	types	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 262
# text = Literals
1	Literals	Literal	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 263
# text = Type conversions
1	Type	type	ADJ	A	Degree=Pos	2	amod	_	_
2	conversions	conversion	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 264
# text = Expressions and operators
1	Expressions	expression	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	operators	operator	NOUN	S	Number=Plur	1	conj	_	SpacesAfter=\n

# sent_id = 265
# text = Statements
1	Statements	Statement	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 266
# text = Loops
1	Loops	Loops	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 267
# text = Conditional statements
1	Conditional	conditional	ADJ	A	Degree=Pos	2	amod	_	_
2	statements	statement	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 268
# text = Functions
1	Functions	Function	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 269
# text = Arrays
1	Arrays	Arrays	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 270
# text = Pointers
1	Pointers	Pointers	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 271
# text = Structures and Unions
1	Structures	structures	PROPN	SP	_	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Unions	unions	PROPN	SP	_	1	conj	_	SpacesAfter=\n

# sent_id = 272
# text = Dynamic Memory Management
1	Dynamic	dynamic	ADJ	A	Degree=Pos	3	amod	_	_
2	Memory	memory	NOUN	S	Number=Sing	3	nmod	_	_
3	Management	management	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 273
# text = Input and Output
1	Input	Input	ADP	E	_	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Output	Output	ADP	E	_	1	conj	_	SpacesAfter=\n

# sent_id = 274
# text = Pre-processing directives
1	Pre	Pre	X	X	_	3	obl	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	processing	process	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	4	acl	_	_
4	directives	directife	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 275
# text = Compiling with GCC
1	Compiling	Compil	VERB	V	VerbForm=Ger	0	root	_	_
2	with	with	ADP	E	_	3	case	_	_
3	GCC	GCC	PROPN	SP	_	1	obl	_	SpacesAfter=\n

# sent_id = 276
# text = Debugging C Programs with GDB
1	Debugging	Debugge	VERB	V	VerbForm=Ger	0	root	_	_
2	C	Celsius	PROPN	SP	_	3	nmod	_	_
3	Programs	program	NOUN	S	Number=Plur	1	obj	_	_
4	with	with	ADP	E	_	5	case	_	_
5	GDB	GDB	PROPN	SP	_	1	obl	_	SpacesAfter=\n

# sent_id = 277
# text = - Linked lists
1	-	-	PUNCT	FF	_	2	punct	_	_
2	Linked	link	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
3	lists	list	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 278
# text = Study-unit OBJECT ORIENTED PROGRAMMING WITH LABORATORY
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	OBJECT	object	PROPN	SP	_	3	nmod	_	_
5	ORIENTED	oriented	PROPN	SP	_	4	flat	_	_
6	PROGRAMMING	programming	PROPN	SP	_	4	flat	_	_
7	WITH	with	PROPN	SP	_	4	flat	_	_
8	LABORATORY	laboratory	PROPN	SP	_	3	nmod	_	SpacesAfter=\n

# sent_id = 279
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 280
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 281
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 282
# text = A002059
1	A002059	A002059	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 283
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 284
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 285
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 286
# text = Stefano Marcugini
1	Stefano	Stefano	PROPN	SP	_	0	root	_	_
2	Marcugini	Marcugini	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 287
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 288
# text = Stefano Marcugini - Didattica Ufficiale
1	Stefano	Stefano	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Marcugini	Marcugini	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 289
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 290
# text = 78 Hours - Didattica Ufficiale - Stefano Marcugini
1	78	78	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Stefano	Stefano	PROPN	SP	_	4	flat	_	_
8	Marcugini	Marcugini	PROPN	SP	_	2	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 291
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 292
# text = 9
1	9	9	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 293
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 294
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 295
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 296
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 297
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 298
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 299
# text = Caratterizzante
1	Caratterizzante	Caratterizzante	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 300
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 301
# text = Discipline informatiche
1	Discipline	discipline	NOUN	S	Number=Sing	2	nmod	_	_
2	informatiche	informatiche	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 302
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 303
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 304
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 305
# text = II
1	II	second	ADJ	NO	Degree=Pos|NumType=Ord	0	root	_	SpacesAfter=\n

# sent_id = 306
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 307
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 308
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 309
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 310
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 311
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 312
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 313
# text = OBJECT ORIENTED PROGRAMMING
1	OBJECT	object	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	ORIENTED	oriented	PROPN	SP	_	1	obj	_	_
3	PROGRAMMING	programming	PROPN	SP	_	1	obl	_	SpacesAfter=\n

# sent_id = 314
# text = Model of the objects;
1	Model	model	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	objects	object	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
5	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 315
# text = Encapsulation;
1	Encapsulation	Encapsulation	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 316
# text = Inheritance;
1	Inheritance	inheritance	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 317
# text = Polymorphism.
1	Polymorphism	Polymorphism	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 318
# text = INTRODUCTION TO JAVA LANGUAGE
1	INTRODUCTION	introduction	NOUN	S	Number=Sing	0	root	_	_
2	TO	to	ADP	E	_	3	case	_	_
3	JAVA	JAVA	PROPN	SP	_	1	nmod	_	_
4	LANGUAGE	Language	PROPN	SP	_	3	flat	_	SpacesAfter=\n

# sent_id = 319
# text = Structured programming.
1	Structured	Structured	ADJ	A	Degree=Pos	2	amod	_	_
2	programming	programming	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 320
# text = Array.
1	Array	array	ADV	B	_	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 321
# text = Classes and methods;
1	Classes	class	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	methods	method	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
4	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 322
# text = Applications and Applet;
1	Applications	application	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Applet	Applet	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 323
# text = Java Packages;
1	Java	Java	PROPN	SP	_	0	root	_	_
2	Packages	Packages	PROPN	SP	_	1	flat	_	SpaceAfter=No
3	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 324
# text = Ecceptions;
1	Ecceptions	Ecceptions	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 325
# text = Multithreading;
1	Multithreading	Multithreading	VERB	V	VerbForm=Ger	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 326
# text = Input and Output;
1	Input	Input	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Output	Output	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 327
# text = Expressions;
1	Expressions	expression	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 328
# text = Event oriented programming;
1	Event	event	ADJ	A	Degree=Pos	3	amod	_	_
2	oriented	orient	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	3	acl	_	_
3	programming	programming	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	;	;	PUNCT	FC	_	3	punct	_	SpacesAfter=\n

# sent_id = 329
# text = Socket;
1	Socket	Socket	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 330
# text = Client-server applications.
1	Client	client	ADJ	A	Degree=Pos	3	amod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	server	server	NOUN	S	Number=Sing	4	nmod	_	_
4	applications	application	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 331
# text = EXAMPLES OF ALGORITHMS
1	EXAMPLES	EXAMPLES	PROPN	SP	_	0	root	_	_
2	OF	of	ADP	E	_	3	case	_	_
3	ALGORITHMS	ALGORITHMS	PROPN	SP	_	1	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 332
# text = Recursion.
1	Recursion	Recursion	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 333
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 334
# text = Concetti di informatica e fondamenti di Java settima edizione per Java 8, 9, 10 e 11
1	Concetti	Concetti	X	X	_	17	case	_	_
2	di	di	X	X	_	1	flat:foreign	_	_
3	informatica	informatica	X	SW	Foreign=Yes	1	flat:foreign	_	_
4	e	e	X	SW	Foreign=Yes	1	flat:foreign	_	_
5	fondamenti	fondamenti	X	X	_	1	flat:foreign	_	_
6	di	di	X	X	_	1	flat:foreign	_	_
7	Java	Java	X	SW	Foreign=Yes	1	flat:foreign	_	_
8	settima	settima	X	SW	Foreign=Yes	1	flat:foreign	_	_
9	edizione	edizio	VERB	V	Tense=Past|VerbForm=Part	17	advcl	_	_
10	per	per	ADP	E	_	11	case	_	_
11	Java	Java	PROPN	SP	_	9	obl	_	_
12	8	8	NUM	N	NumType=Card	11	flat	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	9	punct	_	_
14	9	9	NUM	N	NumType=Card	17	nummod	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	14	punct	_	_
16	10	10	NUM	N	NumType=Card	17	nummod	_	_
17	e	e	NOUN	S	Number=Sing	0	root	_	_
18	11	11	NUM	N	NumType=Card	17	nummod	_	SpacesAfter=\n

# sent_id = 335
# text = di Cay Horstmann
1	di	fdirst	NOUN	S	Number=Sing	2	nmod	_	_
2	Cay	Cay	PROPN	SP	_	0	root	_	_
3	Horstmann	Horstmann	PROPN	SP	_	2	flat	_	SpacesAfter=\n

# sent_id = 336
# text = Maggioli Editore
1	Maggioli	Maggioli	NOUN	S	Gender=Fem|Number=Sing	0	root	_	_
2	Editore	Editore	ADP	E	_	1	case	_	SpacesAfter=\n\n

# newpar
# sent_id = 337
# text = Available at the library:
1	Available	available	ADJ	A	Degree=Pos	0	root	_	_
2	at	at	ADP	E	_	4	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	library	library	NOUN	S	Number=Sing	1	obl	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 338
# text = Java 1.2 - L.Lemay, C.L. Perkins, Edizioni Sams net
1	Java	Javà	PROPN	SP	_	12	nmod	_	_
2	1.2	1.2	NUM	N	NumType=Card	4	nummod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	L.Lemay	L.Lemay	PROPN	SP	_	1	flat	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	6	punct	_	_
6	C.L	C.L	PROPN	SP	_	1	conj	_	SpaceAfter=No
7	.	.	PUNCT	FF	_	8	punct	_	_
8	Perkins	Perkins	PROPN	SP	_	6	flat	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	10	punct	_	_
10	Edizioni	Edizioni	PROPN	SP	_	1	conj	_	_
11	Sams	Sams	PROPN	SP	_	10	flat	_	_
12	net	net	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 339
# text = Java 2 i fondamenti - Cay S. Horstmann e Gary Cornell - Mc Graw Hill;
1	Java	Java	PROPN	SP	_	0	root	_	_
2	2	2	NUM	N	NumType=Card	1	flat	_	_
3	i	i	X	X	_	1	flat	_	_
4	fondamenti	fondamenti	X	X	_	9	nmod	_	_
5	-	-	PUNCT	FF	_	4	punct	_	_
6	Cay	Cay	PROPN	SP	_	4	flat	_	_
7	S.	S.	PROPN	SP	_	4	flat	_	_
8	Horstmann	Horstmann	PROPN	SP	_	4	flat	_	_
9	e	e	NOUN	S	Number=Sing	1	nmod	_	_
10	Gary	Gary	PROPN	SP	_	9	nmod	_	_
11	Cornell	Cornell	PROPN	SP	_	10	flat	_	_
12	-	-	PUNCT	FF	_	9	punct	_	_
13	Mc	Mc	PROPN	SP	_	9	nmod	_	_
14	Graw	Graw	PROPN	SP	_	13	flat	_	_
15	Hill	Hill	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 340
# text = Java 2 tecniche avanzate - Cay S. Horstmann e Gary Cornell - Mc Graw Hill;
1	Java	Java	PROPN	SP	_	0	root	_	_
2	2	2	NUM	N	NumType=Card	9	nummod	_	_
3	tecniche	tecniche	DET	RD	Definite=Def|PronType=Art	9	det	_	_
4	avanzate	avanzate	NOUN	S	Number=Sing	6	nmod	_	_
5	-	-	PUNCT	FF	_	4	punct	_	_
6	Cay	Cay	PROPN	SP	_	7	nmod	_	_
7	S.	S.	PROPN	SP	_	9	nmod	_	_
8	Horstmann	Horstmann	PROPN	SP	_	9	nmod	_	_
9	e	e	NOUN	S	Number=Sing	1	nmod	_	_
10	Gary	Gary	PROPN	SP	_	9	nmod	_	_
11	Cornell	Cornell	PROPN	SP	_	10	flat	_	_
12	-	-	PUNCT	FF	_	13	punct	_	_
13	Mc	Mc	PROPN	SP	_	10	flat	_	_
14	Graw	Graw	PROPN	SP	_	13	flat	_	_
15	Hill	Hill	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 341
# text = in English:
1	in	in	ADP	E	_	2	case	_	_
2	English	English	PROPN	SP	_	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 342
# text = Core Java Volume I--Fundamentals, 9th Edition, Cay S. Horstman, Prentice Hall.
1	Core	core	ADP	E	_	2	case	_	_
2	Java	Java	PROPN	SP	_	0	root	_	_
3	Volume	volume	PROPN	SP	_	2	flat	_	_
4	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	3	nmod	_	SpaceAfter=No
5	-	-	PUNCT	FF	_	6	punct	_	SpaceAfter=No
6	-	-	PUNCT	FF	_	7	punct	_	SpaceAfter=No
7	Fundamentals	Fundamental	PROPN	SP	_	4	flat	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	2	punct	_	_
9	9	9	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
10	th	th	ADJ	A	Degree=Pos	9	amod	_	_
11	Edition	edition	NOUN	S	Number=Sing	2	appos	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	Cay	Cay	PROPN	SP	_	11	conj	_	_
14	S.	S.	PROPN	SP	_	13	flat	_	_
15	Horstman	Horstman	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	17	punct	_	_
17	Prentice	Prentice	PROPN	SP	_	11	conj	_	_
18	Hall	Hall	PROPN	SP	_	17	flat	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 343
# text = Part of the Pearson Custom Library: Computer Science series.
1	Part	part	NOUN	S	Number=Sing	10	nmod	_	_
2	of	of	ADP	E	_	4	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	Pearson	Pearson	PROPN	SP	_	1	nmod	_	_
5	Custom	Custom	PROPN	SP	_	4	flat	_	_
6	Library	Library	PROPN	SP	_	4	flat	_	SpaceAfter=No
7	:	:	PUNCT	FF	_	8	punct	_	_
8	Computer	computer	PROPN	SP	_	10	nmod	_	_
9	Science	science	PROPN	SP	_	10	nmod	_	_
10	series	series	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	10	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 344
# text = Core Java, Volume II--Advanced Features, 9th Edition, Cay S. Horstman, Prentice Hall.
1	Core	core	ADP	E	_	2	case	_	_
2	Java	Java	PROPN	SP	_	0	root	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	Volume	volume	PROPN	SP	_	2	appos	_	_
5	II	second	ADJ	NO	Degree=Pos|NumType=Ord	6	amod	_	SpaceAfter=No
6	--Advanced	--Advanced	PROPN	SP	_	4	flat	_	_
7	Features	feature	PROPN	SP	_	4	flat	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	4	punct	_	_
9	9	9	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
10	th	th	ADJ	A	Degree=Pos	9	amod	_	_
11	Edition	edition	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	Cay	Cay	PROPN	SP	_	11	conj	_	_
14	S.	S.	PROPN	SP	_	13	flat	_	_
15	Horstman	Horstman	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	17	punct	_	_
17	Prentice	Prentice	PROPN	SP	_	11	conj	_	_
18	Hall	Hall	PROPN	SP	_	17	flat	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 345
# text = Part of the Pearson Custom Library: Computer Science series.
1	Part	part	NOUN	S	Number=Sing	10	nmod	_	_
2	of	of	ADP	E	_	4	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	Pearson	Pearson	PROPN	SP	_	1	nmod	_	_
5	Custom	Custom	PROPN	SP	_	4	flat	_	_
6	Library	Library	PROPN	SP	_	4	flat	_	SpaceAfter=No
7	:	:	PUNCT	FF	_	8	punct	_	_
8	Computer	computer	PROPN	SP	_	10	nmod	_	_
9	Science	science	PROPN	SP	_	10	nmod	_	_
10	series	series	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	10	punct	_	SpacesAfter=\n

# sent_id = 346
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 347
# text = Understanding the concepts of object-oriented programming and events.
1	Understanding	understanding	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	concepts	concept	NOUN	S	Number=Plur	7	obl	_	_
4	of	of	ADP	E	_	5	case	_	_
5	object	object	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
6	-	-	PUNCT	FF	_	7	punct	_	SpaceAfter=No
7	oriented	orient	VERB	V	Tense=Past|VerbForm=Part	8	acl	_	_
8	programming	programming	NOUN	S	Number=Sing	0	root	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	events	event	NOUN	S	Number=Plur	8	conj	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n

# sent_id = 348
# text = Ability to build applications.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	build	build	VERB	V	VerbForm=Inf	1	acl	_	_
4	applications	application	NOUN	S	Number=Plur	3	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 349
# text = Ability to compare possible solutions to choose the best.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	compare	compare	VERB	V	VerbForm=Inf	1	acl	_	_
4	possible	possible	ADJ	A	Degree=Pos	5	amod	_	_
5	solutions	solution	NOUN	S	Number=Plur	3	obj	_	_
6	to	to	PART	PART	_	7	mark	_	_
7	choose	choose	VERB	V	VerbForm=Inf	3	xcomp	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	best	best	ADJ	A	Degree=Sup	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 350
# text = Ability to apply patterns of classical solutions to new problems.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	apply	apply	VERB	V	VerbForm=Inf	1	acl	_	_
4	patterns	pattern	NOUN	S	Number=Plur	3	obj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	classical	classic	ADJ	A	Degree=Pos	7	amod	_	_
7	solutions	solution	NOUN	S	Number=Plur	4	nmod	_	_
8	to	to	ADP	E	_	10	case	_	_
9	new	new	ADJ	A	Degree=Pos	10	amod	_	_
10	problems	problem	NOUN	S	Number=Plur	3	obl	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 351
# text = Ability to design the hierarchy of objects suitable to the specific problem.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	design	design	VERB	V	VerbForm=Inf	1	acl	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	hierarchy	hierarchy	NOUN	S	Number=Sing	3	obj	_	_
6	of	of	ADP	E	_	7	case	_	_
7	objects	object	NOUN	S	Number=Plur	5	nmod	_	_
8	suitable	suitable	ADJ	A	Degree=Pos	7	amod	_	_
9	to	to	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	specific	specific	ADJ	A	Degree=Pos	12	amod	_	_
12	problem	problem	NOUN	S	Number=Sing	8	obl	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 352
# text = Ability to implement programs of professional interfaces.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	implement	implement	VERB	V	VerbForm=Inf	1	acl	_	_
4	programs	program	NOUN	S	Number=Plur	3	obj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	professional	professional	ADJ	A	Degree=Pos	7	amod	_	_
7	interfaces	interface	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 353
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 354
# text = It is useful to have taken the exam of Procedural programming.
1	It	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	expl	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	_	_
3	useful	useful	ADJ	A	Degree=Pos	0	root	_	_
4	to	to	PART	PART	_	6	mark	_	_
5	have	have	AUX	VA	VerbForm=Inf	6	aux	_	_
6	taken	take	VERB	V	Tense=Past|VerbForm=Part	3	csubj	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	exam	exam	NOUN	S	Number=Sing	6	obj	_	_
9	of	of	ADP	E	_	11	case	_	_
10	Procedural	Procedural	ADJ	A	Degree=Pos	11	amod	_	_
11	programming	programming	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 355
# text = In particular it is important to be familiar with the following concepts: pointers, dynamic memory management, elementary algorithms.
1	In	in	ADP	E	_	2	case	_	_
2	particular	particular	ADJ	A	Number=Sing	5	obl	_	_
3	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	5	expl	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	_	_
5	important	important	ADJ	A	Degree=Pos	0	root	_	_
6	to	to	PART	PART	_	8	mark	_	_
7	be	be	AUX	V	VerbForm=Inf	8	cop	_	_
8	familiar	familiar	ADJ	A	Degree=Pos	5	csubj	_	_
9	with	with	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	following	following	ADJ	A	Degree=Pos	12	amod	_	_
12	concepts	concept	NOUN	S	Number=Plur	8	obl	_	SpaceAfter=No
13	:	:	PUNCT	FC	_	14	punct	_	_
14	pointers	pointer	NOUN	S	Number=Plur	12	conj	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	14	punct	_	_
16	dynamic	dynamic	ADJ	A	Degree=Pos	18	amod	_	_
17	memory	memory	NOUN	S	Number=Sing	18	nmod	_	_
18	management	management	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	21	punct	_	_
20	elementary	elementary	ADJ	A	Degree=Pos	21	amod	_	_
21	algorithms	algorithm	NOUN	S	Number=Plur	18	conj	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 356
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 357
# text = Lectures, laboratory exercises.
1	Lectures	Lectures	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	4	punct	_	_
3	laboratory	laboratory	ADJ	A	Degree=Pos	4	amod	_	_
4	exercises	exercise	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 358
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 359
# text = Website: www.unistudium.unipg.it
1	Website	website	ADV	B	_	3	advmod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	www.unistudium.unipg.it	www.unistudium.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 360
# text = For the exam schedule, see: www.informatica.unipg.it
1	For	for	ADP	E	_	4	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	exam	exam	NOUN	S	Number=Sing	4	nmod	_	_
4	schedule	schedule	NOUN	S	Number=Sing	6	obl	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	4	punct	_	_
6	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
7	:	:	PUNCT	FC	_	6	punct	_	_
8	www.informatica.unipg.it	www.informatica.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	6	obj	_	SpacesAfter=\n

# sent_id = 361
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 362
# text = Written and oral exam.
1	Written	write	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	4	cc	_	_
3	oral	oral	ADJ	A	Degree=Pos	4	amod	_	_
4	exam	exam	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 363
# text = Tests of exoneration are planned during the course.
1	Tests	Test	NOUN	S	Number=Plur	5	nsubj:pass	_	_
2	of	of	ADP	E	_	3	case	_	_
3	exoneration	exoneration	NOUN	S	Number=Sing	1	nmod	_	_
4	are	be	AUX	VA	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	5	aux:pass	_	_
5	planned	plan	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
6	during	during	ADP	E	_	8	case	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	course	course	NOUN	S	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 364
# text = The written exam involves the solution of three exercises and is designed to test the ability to correctly apply the theoretical knowledge and understanding of the issues proposed.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	written	write	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
3	exam	exam	NOUN	S	Number=Sing	4	nsubj	_	_
4	involves	involve	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	solution	solution	NOUN	S	Number=Sing	4	obj	_	_
7	of	of	ADP	E	_	9	case	_	_
8	three	three	NUM	N	NumType=Card	9	nummod	_	_
9	exercises	exercise	NOUN	S	Number=Plur	6	nmod	_	_
10	and	and	CCONJ	CC	_	12	cc	_	_
11	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux	_	_
12	designed	designed	VERB	V	Tense=Past|VerbForm=Part	9	conj	_	_
13	to	to	PART	PART	_	14	mark	_	_
14	test	test	VERB	V	VerbForm=Inf	12	xcomp	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
16	ability	ability	NOUN	S	Number=Sing	14	obj	_	_
17	to	to	PART	PART	_	19	mark	_	_
18	correctly	correctly	ADV	B	_	19	advmod	_	_
19	apply	apply	VERB	V	VerbForm=Inf	16	acl	_	_
20	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
21	theoretical	theoretic	ADJ	A	Degree=Pos	22	amod	_	_
22	knowledge	knowledge	NOUN	S	Number=Sing	19	obj	_	_
23	and	and	CCONJ	CC	_	24	cc	_	_
24	understanding	understanding	NOUN	S	Number=Sing	22	conj	_	_
25	of	of	ADP	E	_	27	case	_	_
26	the	the	DET	RD	Definite=Def|PronType=Art	27	det	_	_
27	issues	issue	NOUN	S	Number=Plur	24	nmod	_	_
28	proposed	propose	VERB	V	Tense=Past|VerbForm=Part	27	acl	_	SpaceAfter=No
29	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 365
# text = The written exam lasts three hours.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	written	write	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
3	exam	exam	NOUN	S	Number=Sing	4	nmod	_	_
4	lasts	last	NOUN	S	Number=Plur	6	nsubj	_	_
5	three	three	NUM	N	NumType=Card	6	nummod	_	_
6	hours	hour	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 366
# text = The oral exam is a discussion lasting about 30 minutes designed to ascertain the level of knowledge and understanding about the theoretical contents of the course reached by the student.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	exam	exam	NOUN	S	Number=Sing	6	nsubj	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
5	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
6	discussion	discussion	NOUN	S	Number=Sing	0	root	_	_
7	lasting	last	ADJ	A	Degree=Pos	6	amod	_	_
8	about	about	ADP	E	_	10	case	_	_
9	30	30	NUM	N	NumType=Card	10	nummod	_	_
10	minutes	minute	NOUN	S	Number=Plur	7	obl	_	_
11	designed	designed	VERB	V	Tense=Past|VerbForm=Part	10	acl	_	_
12	to	to	PART	PART	_	13	mark	_	_
13	ascertain	ascertain	VERB	V	VerbForm=Inf	11	xcomp	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
15	level	level	NOUN	S	Number=Sing	13	obj	_	_
16	of	of	ADP	E	_	17	case	_	_
17	knowledge	knowledge	NOUN	S	Number=Sing	15	nmod	_	_
18	and	and	CCONJ	CC	_	19	cc	_	_
19	understanding	understande	NOUN	S	Number=Sing	17	conj	_	_
20	about	about	ADP	E	_	23	case	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	23	det	_	_
22	theoretical	theoretic	ADJ	A	Degree=Pos	23	amod	_	_
23	contents	content	NOUN	S	Number=Plur	19	nmod	_	_
24	of	of	ADP	E	_	26	case	_	_
25	the	the	DET	RD	Definite=Def|PronType=Art	26	det	_	_
26	course	course	NOUN	S	Number=Sing	23	nmod	_	_
27	reached	reach	VERB	V	Tense=Past|VerbForm=Part	26	acl	_	_
28	by	by	ADP	E	_	30	case	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
30	student	student	NOUN	S	Number=Sing	27	obl	_	SpaceAfter=No
31	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 367
# text = Also the oral exam will test the ability of communication of the student and the ability of autonomous organization of the speech.
1	Also	also	ADV	B	_	6	advmod	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	oral	oral	ADJ	A	Degree=Pos	4	amod	_	_
4	exam	exam	NOUN	S	Number=Sing	6	nsubj	_	_
5	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	test	test	VERB	V	VerbForm=Inf	0	root	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	ability	ability	NOUN	S	Number=Sing	6	obj	_	_
9	of	of	ADP	E	_	10	case	_	_
10	communication	communication	NOUN	S	Number=Sing	8	nmod	_	_
11	of	of	ADP	E	_	13	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
13	student	student	NOUN	S	Number=Sing	10	nmod	_	_
14	and	and	CCONJ	CC	_	16	cc	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
16	ability	ability	NOUN	S	Number=Sing	8	conj	_	_
17	of	of	ADP	E	_	19	case	_	_
18	autonomous	autonomous	ADJ	A	Degree=Pos	19	amod	_	_
19	organization	organization	NOUN	S	Number=Sing	16	nmod	_	_
20	of	of	ADP	E	_	22	case	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
22	speech	speech	NOUN	S	Number=Sing	19	nmod	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 368
# text = At the request of the student the exam may be taken also in English.
1	At	at	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	request	request	NOUN	S	Number=Sing	11	nsubj:pass	_	_
4	of	of	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	student	student	NOUN	S	Number=Sing	3	nmod	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	exam	exam	NOUN	S	Number=Sing	6	nmod	_	_
9	may	may	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	11	aux	_	_
10	be	be	AUX	VA	VerbForm=Inf	11	aux:pass	_	_
11	taken	take	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
12	also	also	ADV	B	_	14	advmod	_	_
13	in	in	ADP	E	_	14	case	_	_
14	English	English	ADJ	A	Degree=Pos	11	xcomp	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	11	punct	_	SpacesAfter=\n

# sent_id = 369
# text = For information on support services for students with disabilities and / or DSA visit the page http://www.unipg.it/disabilita-e-dsa
1	For	for	ADP	E	_	2	case	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	_
3	on	on	ADP	E	_	5	case	_	_
4	support	support	NOUN	S	Number=Sing	5	nmod	_	_
5	services	service	NOUN	S	Number=Plur	2	nmod	_	_
6	for	for	ADP	E	_	7	case	_	_
7	students	student	NOUN	S	Number=Plur	5	nmod	_	_
8	with	with	ADP	E	_	9	case	_	_
9	disabilities	disability	NOUN	S	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	CC	_	14	cc	_	_
11	/	/	PUNCT	FF	_	13	punct	_	_
12	or	or	CCONJ	CC	_	13	cc	_	_
13	DSA	DSA	PROPN	SP	_	10	conj	_	_
14	visit	visit	VERB	V	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	9	conj	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	17	det	_	_
16	page	page	NOUN	S	Number=Sing	17	nmod	_	_
17	http://www.unipg.it/disabilita-e-dsa	http://www.unipg.it/disabilita-e-dsà	NOUN	S	Number=Sing	14	obj	_	SpacesAfter=\n

# sent_id = 370
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 371
# text = OBJECT ORIENTED PROGRAMMING
1	OBJECT	object	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	ORIENTED	oriented	PROPN	SP	_	1	obj	_	_
3	PROGRAMMING	programming	PROPN	SP	_	1	obl	_	SpacesAfter=\n

# sent_id = 372
# text = Model of objects for reference;
1	Model	model	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	objects	object	NOUN	S	Number=Plur	1	nmod	_	_
4	for	for	ADP	E	_	5	case	_	_
5	reference	reference	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
6	;	;	PUNCT	FC	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 373
# text = Study-unit NUMERICAL ANALYSIS
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	NUMERICAL	NUMERICAL	PROPN	SP	_	3	nmod	_	_
5	ANALYSIS	analysis	PROPN	SP	_	4	flat	_	SpacesAfter=\n

# sent_id = 374
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 375
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 376
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 377
# text = 55007306
1	55007306	55007306	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 378
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 379
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 380
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 381
# text = Bruno Iannazzo
1	Bruno	Bruno	PROPN	SP	_	0	root	_	_
2	Iannazzo	Iannazzo	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 382
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 383
# text = Bruno Iannazzo - Didattica Ufficiale
1	Bruno	Bruno	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Iannazzo	Iannazzo	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 384
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 385
# text = 42 Hours - Didattica Ufficiale - Bruno Iannazzo
1	42	42	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Bruno	Bruno	PROPN	SP	_	2	flat	_	_
8	Iannazzo	Iannazzo	PROPN	SP	_	2	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 386
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 387
# text = 6
1	6	6	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 388
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 389
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 390
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 391
# text = 2021/22
1	2021	2021	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	22	22	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 392
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 393
# text = Coorte 2019 - Will supplied in year 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2019	2019	NUM	N	NumType=Card	4	nummod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Will	will	NOUN	S	Number=Sing	5	nsubj	_	_
5	supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
6	in	in	ADP	E	_	7	case	_	_
7	year	year	NOUN	S	Number=Sing	5	obl	_	_
8	2020	2020	NUM	N	NumType=Card	5	obj	_	SpacesAfter=\n

# sent_id = 394
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 395
# text = Affine/integrativa
1	Affine	Affine	PROPN	SP	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	integrativa	integrativà	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 396
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 397
# text = Attività formative affini o integrative
1	Attività	Attività	NOUN	S	Number=Sing	5	obl	_	_
2	formative	formative	ADJ	A	Degree=Pos	3	amod	_	_
3	affini	affini	X	X	_	5	advmod	_	_
4	o	o	ADV	B	_	5	advmod	_	_
5	integrative	integrative	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 398
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 399
# text = MAT/08
1	MAT	Mat	PRON	PQ	PronType=Int	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	08	08	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 400
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 401
# text = I
1	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 402
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 403
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 404
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 405
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 406
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 407
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 408
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 409
# text = Basics in numerical analysis: numerical stability, computational cost.
1	Basics	Basics	ADV	B	_	4	advmod	_	_
2	in	in	ADP	E	_	4	case	_	_
3	numerical	numerical	ADJ	A	Degree=Pos	4	amod	_	_
4	analysis	analysis	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	7	punct	_	_
6	numerical	numerical	ADJ	A	Degree=Pos	7	amod	_	_
7	stability	stability	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	10	punct	_	_
9	computational	computational	ADJ	A	Degree=Pos	10	amod	_	_
10	cost	cost	NOUN	S	Number=Sing	7	conj	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\s\n

# sent_id = 410
# text = Numerical linear algebra and approximations of functions.
1	Numerical	Numerical	ADJ	A	Degree=Pos	3	amod	_	_
2	linear	linear	NOUN	S	Number=Sing	3	nmod	_	_
3	algebra	algebra	NOUN	S	Number=Sing	0	root	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	approximations	approximation	NOUN	S	Number=Plur	3	conj	_	_
6	of	of	ADP	E	_	7	case	_	_
7	functions	function	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 411
# text = Case study: search engines, computer graphics.
1	Case	case	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	study	study	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	5	punct	_	_
4	search	search	NOUN	S	Number=Sing	5	nmod	_	_
5	engines	engine	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	5	punct	_	_
7	computer	computer	NOUN	S	Number=Sing	8	nmod	_	_
8	graphics	graphics	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 412
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 413
# text = Material provided by the teacher.
1	Material	material	ADJ	A	Degree=Pos	2	amod	_	_
2	provided	provide	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
3	by	by	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	teacher	teacher	NOUN	S	Number=Sing	2	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 414
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 415
# text = To get familiar with numerical algorithms, their analysis, their implementation, their use in model problems.
1	To	to	ADP	E	_	2	mark	_	_
2	get	get	VERB	V	VerbForm=Inf	0	root	_	_
3	familiar	familiar	ADJ	A	Degree=Pos	2	obj	_	_
4	with	with	ADP	E	_	6	case	_	_
5	numerical	numerical	ADJ	A	Degree=Pos	6	amod	_	_
6	algorithms	algorithm	NOUN	S	Number=Plur	2	obl	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	2	punct	_	_
8	their	their	DET	AP	Poss=Yes|PronType=Prs	9	nmod:poss	_	_
9	analysis	analysis	NOUN	S	Gender=Masc|Number=Sing	2	obj	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	9	punct	_	_
11	their	their	DET	AP	Poss=Yes|PronType=Prs	12	nmod:poss	_	_
12	implementation	implementation	NOUN	S	Number=Sing	9	appos	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	12	punct	_	_
14	their	their	DET	AP	Poss=Yes|PronType=Prs	15	nmod:poss	_	_
15	use	use	NOUN	S	Number=Sing	12	nmod	_	_
16	in	in	ADP	E	_	18	case	_	_
17	model	model	ADJ	A	Degree=Pos	18	amod	_	_
18	problems	problem	NOUN	S	Number=Plur	15	nmod	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 416
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 417
# text = Linear algebra.
1	Linear	Linear	ADP	E	_	2	case	_	_
2	algebra	algebra	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 418
# text = Functions of one real variable.
1	Functions	Function	NOUN	S	Number=Plur	0	root	_	_
2	of	of	ADP	E	_	5	case	_	_
3	one	one	NUM	N	NumType=Card	5	nummod	_	_
4	real	real	ADJ	A	Degree=Pos	5	amod	_	_
5	variable	variable	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 419
# text = Basic programming.
1	Basic	basic	ADJ	A	Degree=Pos	2	amod	_	_
2	programming	programming	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 420
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 421
# text = Face-to-face lectures.
1	Face	face	ADV	B	_	5	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	to	to	ADP	E	_	1	fixed	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	face	face	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	6	acl	_	_
6	lectures	lecture	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 422
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 423
# text = Written exam.
1	Written	write	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
2	exam	exam	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 424
# text = Optional oral exam.
1	Optional	Optional	ADJ	A	Degree=Pos	3	amod	_	_
2	oral	oral	ADJ	A	Degree=Pos	3	amod	_	_
3	exam	exam	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 425
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 426
# text = Basics in numerical analysis: numerical stability, computational cost.
1	Basics	Basics	ADV	B	_	4	advmod	_	_
2	in	in	ADP	E	_	4	case	_	_
3	numerical	numerical	ADJ	A	Degree=Pos	4	amod	_	_
4	analysis	analysis	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	7	punct	_	_
6	numerical	numerical	ADJ	A	Degree=Pos	7	amod	_	_
7	stability	stability	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	10	punct	_	_
9	computational	computational	ADJ	A	Degree=Pos	10	amod	_	_
10	cost	cost	NOUN	S	Number=Sing	7	conj	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\s\n

# sent_id = 427
# text = Numerical linear algebra and approximations of functions.
1	Numerical	Numerical	ADJ	A	Degree=Pos	3	amod	_	_
2	linear	linear	NOUN	S	Number=Sing	3	nmod	_	_
3	algebra	algebra	NOUN	S	Number=Sing	0	root	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	approximations	approximation	NOUN	S	Number=Plur	3	conj	_	_
6	of	of	ADP	E	_	7	case	_	_
7	functions	function	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 428
# text = Case study: search engines, computer graphics.
1	Case	case	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	study	study	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	5	punct	_	_
4	search	search	NOUN	S	Number=Sing	5	nmod	_	_
5	engines	engine	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	5	punct	_	_
7	computer	computer	NOUN	S	Number=Sing	8	nmod	_	_
8	graphics	graphics	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 429
# text = Study-unit COMPUTABILITY AND COMPLEXITY
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	COMPUTABILITY	Computability	PROPN	SP	_	3	nmod	_	_
5	AND	and	CCONJ	CC	_	6	cc	_	_
6	COMPLEXITY	Complexity	PROPN	SP	_	4	conj	_	SpacesAfter=\n

# sent_id = 430
# text = Share
1	Share	share	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 431
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 432
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 433
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 434
# text = A002041
1	A002041	A002041	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 435
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 436
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 437
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 438
# text = Arturo Carpi
1	Arturo	Arturo	PROPN	SP	_	0	root	_	_
2	Carpi	Carpi	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 439
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 440
# text = Arturo Carpi - Didattica Ufficiale
1	Arturo	Arturo	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Carpi	Carpi	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 441
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 442
# text = 42 Hours - Didattica Ufficiale - Arturo Carpi
1	42	42	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Arturo	Arturo	PROPN	SP	_	2	flat	_	_
8	Carpi	Carpi	PROPN	SP	_	2	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 443
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 444
# text = 6
1	6	6	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 445
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 446
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 447
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 448
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 449
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 450
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 451
# text = Caratterizzante
1	Caratterizzante	Caratterizzante	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 452
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 453
# text = Discipline informatiche
1	Discipline	discipline	NOUN	S	Number=Sing	2	nmod	_	_
2	informatiche	informatiche	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 454
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 455
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 456
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 457
# text = II
1	II	second	ADJ	NO	Degree=Pos|NumType=Ord	0	root	_	SpacesAfter=\n

# sent_id = 458
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 459
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 460
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 461
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 462
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 463
# text = English
1	English	English	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 464
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 465
# text = Turing machine.
1	Turing	Turing	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	machine	machine	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 466
# text = Goedel coding.
1	Goedel	Goedel	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	2	aux	_	_
2	coding	code	VERB	V	VerbForm=Ger	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 467
# text = Church-Turing thesis.
1	Church	church	PROPN	SP	_	4	nmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	Turing	Turing	PROPN	SP	_	1	flat	_	_
4	thesis	thesis	NOUN	S	Gender=Masc|Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 468
# text = Unsolvable problems.
1	Unsolvable	Unsolvable	ADJ	A	Degree=Pos	2	amod	_	_
2	problems	problem	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 469
# text = Universal Turing machine.
1	Universal	universal	ADJ	A	Degree=Pos	3	amod	_	_
2	Turing	Turing	PROPN	SP	_	3	nmod	_	_
3	machine	machine	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 470
# text = halting problem.
1	halting	halt	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	problem	problem	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 471
# text = Hilbert tenth problem.
1	Hilbert	Hilbert	ADV	B	_	3	advmod	_	_
2	tenth	tenth	ADJ	A	Degree=Pos	3	amod	_	_
3	problem	problem	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 472
# text = Partial recursive functions.
1	Partial	Partial	ADJ	A	Degree=Pos	3	amod	_	_
2	recursive	recursive	ADJ	A	Degree=Pos	3	amod	_	_
3	functions	function	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 473
# text = Edmonds-Cook-Karp thesis.
1	Edmonds	Edmonds	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	Cook	Cook	PROPN	SP	_	6	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
5	Karp	Karp	NOUN	S	Number=Sing	6	nmod	_	_
6	thesis	thesis	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\s\n

# sent_id = 474
# text = Classes P and NP.
1	Classes	class	PROPN	SP	_	0	root	_	_
2	P	P	PROPN	SP	_	1	flat	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	NP	NP	PROPN	SP	_	1	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 475
# text = NP complete problems.
1	NP	Np	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	complete	complete	ADJ	A	Degree=Pos	3	amod	_	_
3	problems	problem	NOUN	S	Number=Plur	1	obj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 476
# text = Classes L, NL, PSPACE, NPSPACE.
1	Classes	class	PROPN	SP	_	0	root	_	_
2	L	L	PROPN	SP	_	1	flat	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	4	punct	_	_
4	NL	NL	PROPN	SP	_	1	conj	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	6	punct	_	_
6	PSPACE	PSPACE	PROPN	SP	_	1	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	8	punct	_	_
8	NPSPACE	NPSPACE	PROPN	SP	_	1	conj	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 477
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 478
# text = C. Toffalori, F. Corradini, S. Leonesi, S. Mancini, Teoria della computabilità e della complessità, McGraw-Hill
1	C	C	PROPN	SP	_	17	nmod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	3	punct	_	_
3	Toffalori	Toffalori	PROPN	SP	_	1	flat	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	F	F	PROPN	SP	_	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	FF	_	7	punct	_	_
7	Corradini	Corradini	PROPN	SP	_	5	flat	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	9	punct	_	_
9	S.	S.	PROPN	SP	_	1	conj	_	_
10	Leonesi	Leonesi	PROPN	SP	_	9	flat	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	S.	S.	PROPN	SP	_	1	conj	_	_
13	Mancini	Mancini	PROPN	SP	_	12	flat	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	1	punct	_	_
15	Teoria	Teoria	PROPN	SP	_	17	nmod	_	_
16	della	della	DET	RI	Definite=Ind|PronType=Art	17	det	_	_
17	computabilità	computabilità	NOUN	S	Number=Sing	0	root	_	_
18	e	e	ADP	E	_	20	case	_	_
19	della	della	DET	RI	Definite=Ind|PronType=Art	20	det	_	_
20	complessità	complessità	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	22	punct	_	_
22	McGraw	McGraw	PROPN	SP	_	17	conj	_	SpaceAfter=No
23	-	-	PUNCT	FF	_	17	punct	_	SpaceAfter=No
24	Hill	Hill	PROPN	SP	_	17	nmod	_	SpacesAfter=\n

# sent_id = 479
# text = J. Hopcroft, R. Motwani, J. Ullman, Automi, linguaggi e calcolabilità, Pearson
1	J	j	PROPN	SP	_	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	3	punct	_	_
3	Hopcroft	Hopcroft	PROPN	SP	_	1	flat	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	R	R	PROPN	SP	_	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	FF	_	7	punct	_	_
7	Motwani	Motwani	PROPN	SP	_	5	flat	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	9	punct	_	_
9	J	j	PROPN	SP	_	1	conj	_	SpaceAfter=No
10	.	.	PUNCT	FF	_	11	punct	_	_
11	Ullman	Ullman	PROPN	SP	_	9	flat	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	Automi	Automi	PROPN	SP	_	1	conj	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	17	punct	_	_
15	linguaggi	flinguaggirst	ADJ	A	Degree=Pos	17	amod	_	_
16	e	e	NOUN	S	Number=Sing	17	nmod	_	_
17	calcolabilità	calcolabilità	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	1	punct	_	_
19	Pearson	Pearson	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 480
# text = M. Davis, Computability and Unsolvability, Dover (ediz. Italiana: Abete, 1974)
1	M.	M.	PROPN	SP	_	0	root	_	_
2	Davis	Davis	PROPN	SP	_	1	flat	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	4	punct	_	_
4	Computability	Computability	NOUN	S	Number=Sing	1	conj	_	_
5	and	and	CCONJ	CC	_	6	cc	_	_
6	Unsolvability	Unsolvability	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	8	punct	_	_
8	Dover	Dover	ADV	B	_	10	advmod	_	_
9	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
10	ediz	ediz	PROPN	SP	_	1	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FF	_	10	punct	_	_
12	Italiana	Italiana	PROPN	SP	_	10	flat	_	SpaceAfter=No
13	:	:	PUNCT	FF	_	14	punct	_	_
14	Abete	Abete	PROPN	SP	_	12	flat	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	10	punct	_	_
16	1974	1974	NUM	N	NumType=Card	10	nummod	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	10	punct	_	SpacesAfter=\n

# sent_id = 481
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 482
# text = The course will furnish to the student the knowledge of the main methods and results of the Computability and Complexity Theory.Moreover it will give the ability to apply this knowledge to identify the complexity of practical problems in various fields.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	S	Number=Sing	4	nsubj	_	_
3	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
4	furnish	furnish	VERB	V	VerbForm=Inf	0	root	_	_
5	to	to	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	student	student	NOUN	S	Number=Sing	24	obl	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	knowledge	knowledge	NOUN	S	Number=Sing	24	nsubj	_	_
10	of	of	ADP	E	_	13	case	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	main	main	ADJ	A	Degree=Pos	13	amod	_	_
13	methods	method	NOUN	S	Number=Plur	9	nmod	_	_
14	and	and	CCONJ	CC	_	15	cc	_	_
15	results	result	NOUN	S	Number=Plur	13	conj	_	_
16	of	of	ADP	E	_	18	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
18	Computability	Computability	NOUN	S	Number=Sing	15	nmod	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	Complexity	Complexity	NOUN	S	Number=Sing	18	conj	_	_
21	Theory.Moreover	Theory.Moreover	ADP	E	_	22	case	_	_
22	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	9	nmod	_	_
23	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	24	aux	_	_
24	give	give	VERB	V	VerbForm=Inf	4	xcomp	_	_
25	the	the	DET	RD	Definite=Def|PronType=Art	26	det	_	_
26	ability	ability	NOUN	S	Number=Sing	24	obj	_	_
27	to	to	PART	PART	_	28	mark	_	_
28	apply	apply	VERB	V	VerbForm=Inf	24	xcomp	_	_
29	this	this	DET	DD	Number=Sing|PronType=Dem	30	det	_	_
30	knowledge	knowledge	NOUN	S	Number=Sing	28	obj	_	_
31	to	to	PART	PART	_	32	mark	_	_
32	identify	identify	VERB	V	VerbForm=Inf	28	advcl	_	_
33	the	the	DET	RD	Definite=Def|PronType=Art	34	det	_	_
34	complexity	complexity	NOUN	S	Number=Sing	32	obj	_	_
35	of	of	ADP	E	_	37	case	_	_
36	practical	practical	ADJ	A	Degree=Pos	37	amod	_	_
37	problems	problem	NOUN	S	Number=Plur	34	nmod	_	_
38	in	in	ADP	E	_	40	case	_	_
39	various	various	ADJ	A	Degree=Pos	40	amod	_	_
40	fields	field	NOUN	S	Number=Plur	32	obl	_	SpaceAfter=No
41	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 483
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 484
# text = In order to attend the course,the student should have some basic knowledge of Formal Language Theory and of algorithm complexity analysis.
1	In	in	ADP	E	_	4	mark	_	_
2	order	order	NOUN	S	Number=Sing	1	fixed	_	_
3	to	to	ADP	E	_	1	fixed	_	_
4	attend	attend	VERB	V	VerbForm=Inf	9	advcl	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
6	course,the	course,the	NOUN	S	Number=Sing	7	nmod	_	_
7	student	student	NOUN	S	Number=Sing	9	nsubj	_	_
8	should	shall	AUX	VM	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	9	aux	_	_
9	have	have	VERB	V	VerbForm=Inf	0	root	_	_
10	some	some	DET	DI	PronType=Ind	12	det	_	_
11	basic	basic	ADJ	A	Degree=Pos	12	amod	_	_
12	knowledge	knowledge	NOUN	S	Number=Sing	9	obj	_	_
13	of	of	ADP	E	_	16	case	_	_
14	Formal	Formal	ADJ	A	Degree=Pos	15	amod	_	_
15	Language	language	NOUN	S	Number=Sing	16	nmod	_	_
16	Theory	theory	NOUN	S	Number=Sing	12	nmod	_	_
17	and	and	CCONJ	CC	_	21	cc	_	_
18	of	of	ADP	E	_	21	case	_	_
19	algorithm	algorithm	ADJ	A	Degree=Pos	21	amod	_	_
20	complexity	complexity	NOUN	S	Number=Sing	21	nmod	_	_
21	analysis	analysis	NOUN	S	Number=Sing	16	conj	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	9	punct	_	SpacesAfter=\n

# sent_id = 485
# text = This notions are present in the fundamental courses of the first level degree courses in Informatics.
1	This	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	notions	notion	NOUN	S	Number=Plur	4	nsubj	_	_
3	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	4	aux	_	_
4	present	present	VERB	V	VerbForm=Inf	0	root	_	_
5	in	in	ADP	E	_	8	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
7	fundamental	fundamental	ADJ	A	Degree=Pos	8	amod	_	_
8	courses	course	NOUN	S	Number=Plur	4	obl	_	_
9	of	of	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	first	first	ADJ	NO	Degree=Pos|NumType=Ord	12	amod	_	_
12	level	level	NOUN	S	Number=Sing	8	nmod	_	_
13	degree	degree	NUM	N	NumType=Card	14	nummod	_	_
14	courses	course	NOUN	S	Number=Plur	12	nmod	_	_
15	in	in	ADP	E	_	16	case	_	_
16	Informatics	Informatics	PROPN	SP	_	14	nmod	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 486
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 487
# text = Lectures
1	Lectures	Lectures	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 488
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 489
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 490
# text = The final evaluation consists is an oral exam.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	final	final	ADJ	A	Degree=Pos	3	amod	_	_
3	evaluation	evaluation	NOUN	S	Number=Sing	4	nmod	_	_
4	consists	consist	NOUN	S	Number=Plur	8	nsubj	_	_
5	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
6	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
7	oral	oral	ADJ	A	Degree=Pos	8	amod	_	_
8	exam	exam	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n

# sent_id = 491
# text = The goal of this exam is to verify the acquisition of the main theoretical aspect of the discipline and the ability to apply such knowledge in order to evaluate the structural complexity of problems in different fields.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	goal	goal	NOUN	S	Number=Sing	6	nsubj	_	_
3	of	of	ADP	E	_	5	case	_	_
4	this	this	DET	DD	Number=Sing|PronType=Dem	5	det	_	_
5	exam	exam	NOUN	S	Number=Sing	2	nmod	_	_
6	is	be	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	to	to	PART	PART	_	8	mark	_	_
8	verify	verify	VERB	V	VerbForm=Inf	6	ccomp	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	acquisition	acquisition	NOUN	S	Number=Sing	8	obj	_	_
11	of	of	ADP	E	_	15	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
13	main	main	ADJ	A	Degree=Pos	15	amod	_	_
14	theoretical	theoretic	ADJ	A	Degree=Pos	15	amod	_	_
15	aspect	aspect	NOUN	S	Number=Sing	10	nmod	_	_
16	of	of	ADP	E	_	18	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
18	discipline	discipline	NOUN	S	Number=Sing	15	nmod	_	_
19	and	and	CCONJ	CC	_	21	cc	_	_
20	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
21	ability	ability	NOUN	S	Number=Sing	15	conj	_	_
22	to	to	PART	PART	_	23	mark	_	_
23	apply	apply	VERB	V	VerbForm=Inf	21	acl	_	_
24	such	such	DET	DD	PronType=Dem	25	det	_	_
25	knowledge	knowledge	NOUN	S	Number=Sing	23	obj	_	_
26	in	in	ADP	E	_	27	case	_	_
27	order	order	NOUN	S	Number=Sing	23	obl	_	_
28	to	to	ADP	E	_	29	mark	_	_
29	evaluate	evaluate	VERB	V	VerbForm=Inf	23	advcl	_	_
30	the	the	DET	RD	Definite=Def|PronType=Art	32	det	_	_
31	structural	structural	ADJ	A	Degree=Pos	32	amod	_	_
32	complexity	complexity	NOUN	S	Number=Sing	29	obj	_	_
33	of	of	ADP	E	_	34	case	_	_
34	problems	problem	NOUN	S	Number=Plur	32	nmod	_	_
35	in	in	ADP	E	_	37	case	_	_
36	different	different	ADJ	A	Degree=Pos	37	amod	_	_
37	fields	field	NOUN	S	Number=Plur	29	obl	_	SpaceAfter=No
38	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n

# sent_id = 492
# text = On student request, exam may be given in Italian, English or French.
1	On	on	ADP	E	_	3	case	_	_
2	student	student	ADJ	A	Degree=Pos	3	amod	_	_
3	request	request	NOUN	S	Number=Sing	8	obl	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	3	punct	_	_
5	exam	exay	NOUN	S	Number=Sing	8	nsubj:pass	_	_
6	may	may	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	be	be	AUX	VA	VerbForm=Inf	8	aux:pass	_	_
8	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
9	in	in	ADP	E	_	10	case	_	_
10	Italian	Italian	PROPN	SP	_	8	obl	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	10	punct	_	_
12	English	English	ADJ	A	Degree=Pos	10	amod	_	_
13	or	or	CCONJ	CC	_	14	cc	_	_
14	French	French	ADJ	A	Degree=Pos	12	conj	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n

# sent_id = 493
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 494
# text = Theory of computability:
1	Theory	theory	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	computability	computability	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 495
# text = Alphabets, strings, languages.
1	Alphabets	Alphabet	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	strings	string	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	languages	language	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 496
# text = Turing machine.
1	Turing	Turing	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	machine	machine	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 497
# text = Turing machines and languages.
1	Turing	Tur	VERB	V	VerbForm=Ger	0	root	_	_
2	machines	machine	NOUN	S	Number=Plur	1	obj	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	languages	language	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 498
# text = Turing machines and functions.
1	Turing	Tur	VERB	V	VerbForm=Ger	0	root	_	_
2	machines	machine	NOUN	S	Number=Plur	1	obj	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	functions	function	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 499
# text = Goedel coding.
1	Goedel	Goedel	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	2	aux	_	_
2	coding	code	VERB	V	VerbForm=Ger	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 500
# text = Church-Turing thesis.
1	Church	church	PROPN	SP	_	4	nmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	Turing	Turing	PROPN	SP	_	1	flat	_	_
4	thesis	thesis	NOUN	S	Gender=Masc|Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 501
# text = Multi-tape Turing machines.
1	Multi-tape	Multi-tape	PROPN	SP	_	3	nsubj	_	_
2	Turing	Turing	PROPN	SP	_	1	flat	_	_
3	machines	machine	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 502
# text = Non deterministic Turing machines.
1	Non	non	ADV	B	_	2	advmod	_	_
2	deterministic	deterministic	ADJ	A	Degree=Pos	3	amod	_	_
3	Turing	Turing	PROPN	SP	_	4	nsubj	_	_
4	machines	machine	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 503
# text = Algorithmically solvable problems and unsolvable problems.
1	Algorithmically	Algorithmically	ADV	B	_	2	advmod	_	_
2	solvable	solvable	ADJ	A	Degree=Pos	3	amod	_	_
3	problems	problem	NOUN	S	Number=Plur	0	root	_	_
4	and	and	CCONJ	CC	_	6	cc	_	_
5	unsolvable	unsolvable	ADJ	A	Degree=Pos	6	amod	_	_
6	problems	problem	NOUN	S	Number=Plur	3	conj	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 504
# text = Universal Turing machines.
1	Universal	universal	ADJ	A	Degree=Pos	2	amod	_	_
2	Turing	Turing	PROPN	SP	_	3	nsubj	_	_
3	machines	machine	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 505
# text = halting problem.
1	halting	halt	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	problem	problem	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 506
# text = Decidable and semi-decidable sets.
1	Decidable	Decidable	ADJ	A	Degree=Pos	4	amod	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	semi-decidable	semi-decidable	ADJ	A	Degree=Pos	1	conj	_	_
4	sets	set	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 507
# text = Hilbert tenth problem.
1	Hilbert	Hilbert	ADV	B	_	3	advmod	_	_
2	tenth	tenth	ADJ	A	Degree=Pos	3	amod	_	_
3	problem	problem	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 508
# text = Recursive function.
1	Recursive	Recursive	ADJ	A	Degree=Pos	2	amod	_	_
2	function	function	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 509
# text = Church-computabilty.
1	Church	church	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	computabilty	computabilty	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 510
# text = Partial recursive functions.
1	Partial	Partial	ADJ	A	Degree=Pos	3	amod	_	_
2	recursive	recursive	ADJ	A	Degree=Pos	3	amod	_	_
3	functions	function	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 511
# text = Complexity theory:
1	Complexity	Complexity	NOUN	S	Number=Sing	2	nmod	_	_
2	theory	theory	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	2	punct	_	SpacesAfter=\n

# sent_id = 512
# text = Time complexity classes.
1	Time	time	ADJ	A	Degree=Pos	3	amod	_	_
2	complexity	complexity	NOUN	S	Number=Sing	3	nmod	_	_
3	classes	class	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 513
# text = The class P and Edmonds-Cook-Karp thesis.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	class	class	NOUN	S	Number=Sing	10	nmod	_	_
3	P	P	PROPN	SP	_	9	nmod	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	Edmonds	Edmonds	PROPN	SP	_	3	conj	_	SpaceAfter=No
6	-	-	PUNCT	FF	_	5	punct	_	SpaceAfter=No
7	Cook	Cook	PROPN	SP	_	5	flat	_	SpaceAfter=No
8	-	-	PUNCT	FF	_	5	punct	_	SpaceAfter=No
9	Karp	Karp	NOUN	S	Number=Sing	10	nmod	_	_
10	thesis	thesis	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	10	punct	_	SpacesAfter=\s\n

# sent_id = 514
# text = The class NP.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	class	class	NOUN	S	Number=Sing	0	root	_	_
3	NP	NP	PROPN	SP	_	2	nmod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 515
# text = The problem P=NP.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	problem	problem	NOUN	S	Number=Sing	0	root	_	_
3	P=NP	P=NP	PROPN	SP	_	2	nmod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 516
# text = NP-completeness.
1	NP	Np	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	completeness	completeness	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 517
# text = Cook-levin theorem.
1	Cook	Cook	PROPN	SP	_	3	nmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	levin	levin	NOUN	S	Number=Sing	4	nmod	_	_
4	theorem	theorey	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 518
# text = Space complexity classes.
1	Space	space	SCONJ	CS	_	3	mark	_	_
2	complexity	complexity	NOUN	S	Number=Sing	3	nmod	_	_
3	classes	class	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 519
# text = The classes L, NL, PSPACE, NPSPACE.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	classes	class	NOUN	S	Number=Plur	3	nmod	_	_
3	L	L	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	NL	NL	PROPN	SP	_	3	conj	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	7	punct	_	_
7	PSPACE	PSPACE	PROPN	SP	_	3	conj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	9	punct	_	_
9	NPSPACE	NPSPACE	PROPN	SP	_	3	conj	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 520
# text = Savitch theorem.
1	Savitch	Savitch	DET	DI	Number=Sing|PronType=Ind	2	det	_	_
2	theorem	theorey	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 521
# text = Study-unit ADVANCED AND DISTRIBUTED ALGORITHMS
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	ADVANCED	advanced	PROPN	SP	_	3	nmod	_	_
5	AND	and	PROPN	SP	_	4	flat	_	_
6	DISTRIBUTED	DISTRIBUTED	PROPN	SP	_	4	flat	_	_
7	ALGORITHMS	ALGORITHMS	PROPN	SP	_	3	nmod	_	SpacesAfter=\n

# sent_id = 522
# text = Share
1	Share	share	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 523
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 524
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 525
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 526
# text = A002042
1	A002042	A002042	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 527
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 528
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 529
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 530
# text = Maria Cristina Pinotti
1	Maria	Maria	PROPN	SP	_	0	root	_	_
2	Cristina	Cristina	PROPN	SP	_	1	flat	_	_
3	Pinotti	Pinotti	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 531
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 532
# text = Maria Cristina Pinotti - Didattica Ufficiale
1	Maria	Maria	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Cristina	Cristina	PROPN	SP	_	1	flat	_	_
3	Pinotti	Pinotti	PROPN	SP	_	1	flat	_	_
4	-	-	PUNCT	FF	_	3	punct	_	_
5	Didattica	Didattica	PROPN	SP	_	3	flat	_	_
6	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 533
# text = Alfredo Navarra - Didattica Ufficiale (Codocenza)
1	Alfredo	Alfredo	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	2	cop	_	SpacesBefore=\s\s\s\s
2	Navarra	Navarra	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 534
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 535
# text = 21 Hours - Didattica Ufficiale - Maria Cristina Pinotti
1	21	21	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Maria	Maria	PROPN	SP	_	4	flat	_	_
8	Cristina	Cristina	PROPN	SP	_	4	flat	_	_
9	Pinotti	Pinotti	PROPN	SP	_	2	flat	_	SpacesAfter=\n

# sent_id = 536
# text = 42 Hours - Didattica Ufficiale (Codocenza) - Alfredo Navarra
1	42	42	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	11	nsubj	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	nmod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	2	punct	_	_
10	Alfredo	Alfredo	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	11	cop	_	_
11	Navarra	Navarra	PROPN	SP	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 537
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 538
# text = 9
1	9	9	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 539
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 540
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 541
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 542
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 543
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 544
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 545
# text = Caratterizzante
1	Caratterizzante	Caratterizzante	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 546
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 547
# text = Discipline informatiche
1	Discipline	discipline	NOUN	S	Number=Sing	2	nmod	_	_
2	informatiche	informatiche	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 548
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 549
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 550
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 551
# text = I
1	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 552
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 553
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 554
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 555
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 556
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 557
# text = Italian/English
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	English	English	ADJ	A	Degree=Pos	1	conj	_	SpacesAfter=\n

# sent_id = 558
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 559
# text = Advanced Combinatorial Algorithms.
1	Advanced	advance	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	Combinatorial	Combinatorial	ADJ	A	Degree=Pos	3	amod	_	_
3	Algorithms	Algorithm	NOUN	S	Number=Plur	1	obj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 560
# text = Introduction to Distributed Systems.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	ADP	E	_	4	case	_	_
3	Distributed	Distribute	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
4	Systems	systems	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 561
# text = Distributed algorithms and cost measures.
1	Distributed	Distribute	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
2	algorithms	algorithms	NOUN	S	Number=Plur	1	obj	_	_
3	and	and	CCONJ	CC	_	5	cc	_	_
4	cost	cost	NOUN	S	Number=Sing	5	nmod	_	_
5	measures	measure	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 562
# text = Classical algorithms revisited for the distributed environment.
1	Classical	classic	ADJ	A	Degree=Pos	2	amod	_	_
2	algorithms	algorithm	NOUN	S	Number=Plur	0	root	_	_
3	revisited	revisit	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
4	for	for	ADP	E	_	7	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
6	distributed	distribute	ADJ	A	Degree=Pos	7	amod	_	_
7	environment	environment	NOUN	S	Number=Sing	3	obl	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 563
# text = Behavior with respect to different graph topologies.
1	Behavior	behavior	NOUN	S	Number=Sing	0	root	_	_
2	with	with	ADP	E	_	3	case	_	_
3	respect	respect	NOUN	S	Number=Sing	1	nmod	_	_
4	to	to	ADP	E	_	7	case	_	_
5	different	different	ADJ	A	Degree=Pos	6	amod	_	_
6	graph	graph	NOUN	S	Number=Sing	7	nmod	_	_
7	topologies	topology	NOUN	S	Number=Plur	3	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 564
# text = In-depth studies about recent research directions and simulation software for distributed systems.
1	In-depth	In-depth	ADJ	A	Degree=Pos	2	amod	_	_
2	studies	study	NOUN	S	Number=Plur	12	nsubj	_	_
3	about	about	ADP	E	_	6	case	_	_
4	recent	recent	ADJ	A	Degree=Pos	6	amod	_	_
5	research	research	NOUN	S	Number=Sing	6	nmod	_	_
6	directions	directions	NOUN	S	Number=Plur	2	nmod	_	_
7	and	and	CCONJ	CC	_	8	cc	_	_
8	simulation	simulation	NOUN	S	Number=Sing	6	conj	_	_
9	software	software	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	12	cop	_	_
10	for	for	ADP	E	_	12	case	_	_
11	distributed	distribute	VERB	V	Tense=Past|VerbForm=Part	12	acl	_	_
12	systems	systems	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	12	punct	_	SpacesAfter=\n

# sent_id = 565
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 566
# text = T. H. CORMEN, C. E. LEISERSON, R. L. RIVEST, C. STEIN Introduction to algorithms, McGraw-Hill, 2010, ISBN: 978-88-386-6515-8.
1	T.	T.	PROPN	SP	_	20	nmod	_	_
2	H.	H.	PROPN	SP	_	1	flat	_	_
3	CORMEN	CORMEN	PROPN	SP	_	1	flat	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	C	C	PROPN	SP	_	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	FF	_	7	punct	_	_
7	E	E	PROPN	SP	_	5	flat	_	SpaceAfter=No
8	.	.	PUNCT	FF	_	9	punct	_	_
9	LEISERSON	LEISERSON	PROPN	SP	_	5	flat	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	11	punct	_	_
11	R	R	PROPN	SP	_	1	conj	_	SpaceAfter=No
12	.	.	PUNCT	FF	_	13	punct	_	_
13	L	L	PROPN	SP	_	20	nmod	_	SpaceAfter=No
14	.	.	PUNCT	FF	_	15	punct	_	_
15	RIVEST	RIVEST	PROPN	SP	_	13	flat	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	13	punct	_	_
17	C	C	PROPN	SP	_	13	flat	_	SpaceAfter=No
18	.	.	PUNCT	FF	_	13	punct	_	_
19	STEIN	STEIN	PROPN	SP	_	20	nmod	_	_
20	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
21	to	to	ADP	E	_	22	case	_	_
22	algorithms	algorithm	NOUN	S	Number=Plur	20	nmod	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	24	punct	_	_
24	McGraw	McGraw	PROPN	SP	_	22	conj	_	SpaceAfter=No
25	-	-	PUNCT	FF	_	26	punct	_	SpaceAfter=No
26	Hill	Hill	PROPN	SP	_	24	flat	_	SpaceAfter=No
27	,	,	PUNCT	FF	_	28	punct	_	_
28	2010	2010	NUM	N	NumType=Card	22	conj	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	30	punct	_	_
30	ISBN	ISBN	PROPN	SP	_	22	conj	_	SpaceAfter=No
31	:	:	PUNCT	FF	_	33	punct	_	_
32	978	978	NUM	N	NumType=Card	33	nummod	_	SpaceAfter=No
33	-88	-88	NUM	N	NumType=Card	22	nummod	_	SpaceAfter=No
34	-	-	PUNCT	FF	_	35	punct	_	SpaceAfter=No
35	386	386	NUM	N	NumType=Card	33	nummod	_	SpaceAfter=No
36	-6515-	-6515-	PUNCT	FF	_	35	punct	_	SpaceAfter=No
37	8	8	NUM	N	NumType=Card	35	nummod	_	SpaceAfter=No
38	.	.	PUNCT	FS	_	20	punct	_	SpacesAfter=\n

# sent_id = 567
# text = N. Santoro: Design and Analysis of Distributed Algorithms. John Wiley & Sons.
1	N	n	ADV	B	_	3	advmod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	3	punct	_	_
3	Santoro	Santoro	PROPN	SP	_	0	root	_	SpaceAfter=No
4	:	:	PUNCT	FF	_	5	punct	_	_
5	Design	design	PROPN	SP	_	3	appos	_	_
6	and	and	CCONJ	CC	_	7	cc	_	_
7	Analysis	analysis	PROPN	SP	_	5	conj	_	_
8	of	of	ADP	E	_	9	case	_	_
9	Distributed	Distributed	PROPN	SP	_	7	nmod	_	_
10	Algorithms	Algorithms	PROPN	SP	_	9	flat	_	SpaceAfter=No
11	.	.	PUNCT	FF	_	5	punct	_	_
12	John	John	PROPN	SP	_	5	nmod	_	_
13	Wiley	Wiley	PROPN	SP	_	12	flat	_	_
14	&	&	PUNCT	FF	_	15	punct	_	_
15	Sons	Sons	PROPN	SP	_	12	flat	_	SpaceAfter=No
16	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 568
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 569
# text = Learning solutions to problems that recur in several applications.
1	Learning	Learn	VERB	V	VerbForm=Ger	0	root	_	_
2	solutions	solution	NOUN	S	Number=Plur	1	obj	_	_
3	to	to	ADP	E	_	4	case	_	_
4	problems	problem	NOUN	S	Number=Plur	1	obl	_	_
5	that	that	PRON	PR	PronType=Rel	6	nsubj	_	_
6	recur	recur	NOUN	S	Number=Sing	4	acl:relcl	_	_
7	in	in	ADP	E	_	9	case	_	_
8	several	several	ADJ	A	Degree=Pos	9	amod	_	_
9	applications	application	NOUN	S	Number=Plur	6	nmod	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 570
# text = Advanced knowledge on distributed algorithm issues.
1	Advanced	advance	ADJ	A	Degree=Pos	2	amod	_	_
2	knowledge	knowledge	NOUN	S	Number=Sing	0	root	_	_
3	on	on	ADP	E	_	6	case	_	_
4	distributed	distribute	VERB	V	Tense=Past|VerbForm=Part	6	acl	_	_
5	algorithm	algorithm	NOUN	S	Number=Sing	6	nmod	_	_
6	issues	issue	NOUN	S	Number=Plur	2	nmod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 571
# text = Increasing critical and application skills
1	Increasing	increas	VERB	V	VerbForm=Ger	0	root	_	_
2	critical	critical	ADJ	A	Degree=Pos	1	amod	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	application	application	NOUN	S	Number=Sing	2	conj	_	_
5	skills	skills	NOUN	S	Number=Plur	1	obj	_	SpacesAfter=\n

# sent_id = 572
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 573
# text = Algorithms at intermediate level
1	Algorithms	Algorithms	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	at	at	ADP	E	_	4	case	_	_
3	intermediate	intermediate	ADJ	A	Degree=Pos	4	amod	_	_
4	level	level	NOUN	S	Number=Sing	1	obl	_	SpacesAfter=\n

# sent_id = 574
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 575
# text = Lectures in class
1	Lectures	Lecture	NOUN	S	Number=Plur	0	root	_	_
2	in	in	ADP	E	_	3	case	_	_
3	class	class	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\n

# sent_id = 576
# text = Seminars
1	Seminars	seminar	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 577
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 578
# text = Oral exam
1	Oral	oral	ADJ	A	Degree=Pos	2	amod	_	_
2	exam	exam	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 579
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 580
# text = The Maximum Flow Problem:
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	Maximum	maximum	PROPN	SP	_	3	nmod	_	_
3	Flow	flow	NOUN	S	Number=Sing	4	nmod	_	_
4	Problem	problem	PROPN	SP	_	0	root	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	4	punct	_	SpacesAfter=\n

# sent_id = 581
# text = Cuts in a Flow Network
1	Cuts	Cut	NOUN	S	Number=Plur	0	root	_	_
2	in	in	ADP	E	_	5	case	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
4	Flow	flow	ADJ	A	Degree=Pos	5	amod	_	_
5	Network	network	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\n

# sent_id = 582
# text = The Preflow-Push Maximum Flow Algorithm
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	Preflow	Preflow	PROPN	SP	_	6	nsubj	_	SpaceAfter=No
3	-	-	PUNCT	FF	_	2	punct	_	SpaceAfter=No
4	Push	push	PROPN	SP	_	2	flat	_	_
5	Maximum	maximum	PROPN	SP	_	2	flat	_	_
6	Flow	flow	VERB	V	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	0	root	_	_
7	Algorithm	Algorithm	PROPN	SP	_	6	obj	_	SpacesAfter=\n

# sent_id = 583
# text = Computational Geometry:
1	Computational	Computational	ADJ	A	Degree=Pos	2	amod	_	_
2	Geometry	Geometry	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	:	:	PUNCT	FC	_	2	punct	_	SpacesAfter=\n

# sent_id = 584
# text = Finding the convex hull
1	Finding	find	VERB	V	VerbForm=Ger	4	csubj	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	convex	convex	NOUN	S	Number=Sing	1	obj	_	_
4	hull	hull	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 585
# text = Finding the closest pair of points
1	Finding	find	VERB	V	VerbForm=Ger	0	root	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	closest	closest	ADJ	A	Degree=Sup	4	amod	_	_
4	pair	pair	NOUN	S	Number=Sing	1	obj	_	_
5	of	of	ADP	E	_	6	case	_	_
6	points	point	NOUN	S	Number=Plur	4	nmod	_	SpacesAfter=\n

# sent_id = 586
# text = Finding Delaunay triangulation
1	Finding	find	VERB	V	VerbForm=Ger	0	root	_	_
2	Delaunay	Delaunay	PROPN	SP	_	1	obj	_	_
3	triangulation	triangulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\n

# sent_id = 587
# text = Speeding-up Dynamic programming:
1	Speeding	Speeding	VERB	V	VerbForm=Ger	0	root	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	up	up	ADP	E	_	1	compound:prt	_	_
4	Dynamic	dynamic	ADJ	A	Degree=Pos	5	amod	_	_
5	programming	programme	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
6	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n

# sent_id = 588
# text = The Monge property
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	Monge	Monge	PROPN	SP	_	3	nmod	_	_
3	property	property	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 589
# text = The SMAWK algorithm
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	SMAWK	SMAWK	PROPN	SP	_	3	nmod	_	_
3	algorithm	algorithm	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 590
# text = Applications.
1	Applications	application	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 591
# text = Introduction to Distributed Systems:
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	ADP	E	_	3	case	_	_
3	Distributed	Distributed	PROPN	SP	_	1	nmod	_	_
4	Systems	systems	PROPN	SP	_	3	flat	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 592
# text = Entities, Events, Actions and Communications.
1	Entities	entities	PROPN	SP	_	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	Events	events	PROPN	SP	_	1	conj	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	Actions	actions	PROPN	SP	_	1	conj	_	_
6	and	and	CCONJ	CC	_	7	cc	_	_
7	Communications	communications	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 593
# text = Axioms and Restrictions.
1	Axioms	Axiom	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Restrictions	restriction	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 594
# text = Costs and Complexity.
1	Costs	cost	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Complexity	Complexity	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 595
# text = The Broadcast as example.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	Broadcast	Broadcast	NOUN	S	Number=Sing	0	root	_	_
3	as	as	ADP	E	_	4	case	_	_
4	example	example	NOUN	S	Number=Sing	2	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 596
# text = Flooding algorithm.
1	Flooding	Flood	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	algorithm	algorithy	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 597
# text = Complexity of Flooding.
1	Complexity	Complexity	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	Flooding	Flooding	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 598
# text = States, Events and Configurations.
1	States	state	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	Events	events	PROPN	SP	_	1	conj	_	_
4	and	and	CCONJ	CC	_	5	cc	_	_
5	Configurations	Configurations	PROPN	SP	_	1	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 599
# text = Problems and Solutions.
1	Problems	problem	NOUN	S	Number=Plur	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Solutions	solution	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 600
# text = Termination and Correctness.
1	Termination	termination	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	Correctness	Correctness	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 601
# text = Lower bounds for the Broadcast.
1	Lower	lower	ADP	E	_	2	case	_	_
2	bounds	bounds	NOUN	S	Number=Plur	0	root	_	_
3	for	for	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	Broadcast	Broadcast	NOUN	S	Number=Sing	2	nmod	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 602
# text = Broadcast over complete graphs.
1	Broadcast	Broadcast	ADV	B	_	4	advmod	_	_
2	over	over	ADP	E	_	4	case	_	_
3	complete	complete	ADJ	A	Degree=Pos	4	amod	_	_
4	graphs	graph	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 603
# text = Hypercube topology.
1	Hypercube	Hypercube	PROPN	SP	_	2	nmod	_	_
2	topology	topology	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 604
# text = Dimensional hypercubes.
1	Dimensional	Dimensional	ADJ	A	Degree=Pos	2	amod	_	_
2	hypercubes	hypercube	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 605
# text = Broadcasting over hypercubes.
1	Broadcasting	Broadcasting	VERB	V	VerbForm=Ger	0	root	_	_
2	over	over	ADP	E	_	3	case	_	_
3	hypercubes	hypercube	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 606
# text = Wake-Up problem.
1	Wake	Wake	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
2	-Up	-Up	ADJ	A	Degree=Pos	3	amod	_	_
3	problem	problem	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 607
# text = Wake-Up over hypercubes.
1	Wake	Wake	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	Up	up	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	1	xcomp	_	_
4	over	over	ADP	E	_	5	case	_	_
5	hypercubes	hypercube	NOUN	S	Number=Plur	3	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 608
# text = Proof about the absence of cycles in Hk(x).
1	Proof	proof	ADP	E	_	4	case	_	_
2	about	about	ADP	E	_	1	fixed	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	absence	absence	NOUN	S	Number=Sing	0	root	_	_
5	of	of	ADP	E	_	6	case	_	_
6	cycles	cycles	NOUN	S	Number=Plur	4	nmod	_	_
7	in	in	ADP	E	_	9	case	_	_
8	Hk(	hk(	NOUN	S	Number=Sing	9	nmod	_	SpaceAfter=No
9	x	x	NOUN	S	Number=Sing	6	nmod	_	SpaceAfter=No
10	)	)	PUNCT	FB	_	4	punct	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 609
# text = Wake-Up over trees.
1	Wake	Wake	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	Up	up	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	1	xcomp	_	_
4	over	over	ADP	E	_	5	case	_	_
5	trees	tree	NOUN	S	Number=Plur	3	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 610
# text = Wake-up over complete graphs.
1	Wake	Wake	PROPN	SP	_	0	root	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	up	up	ADP	E	_	1	compound:prt	_	_
4	over	over	ADP	E	_	6	case	_	_
5	complete	complete	ADJ	A	Degree=Pos	6	amod	_	_
6	graphs	graph	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 611
# text = Adversary technique.
1	Adversary	Adversary	ADJ	A	Degree=Pos	2	amod	_	_
2	technique	technique	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 612
# text = Traversal problem.
1	Traversal	Traversal	ADJ	A	Degree=Pos	2	amod	_	_
2	problem	problem	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 613
# text = DF_Traversal algorithm.
1	DF_Traversal	DF_Traversal	ADJ	A	Degree=Pos	2	amod	_	_
2	algorithm	algorithm	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 614
# text = Improvements for DF_Traversal algorithm: DF+, DF++. Spanning Tree problem.
1	Improvements	improvement	NOUN	S	Number=Plur	0	root	_	_
2	for	for	ADP	E	_	4	case	_	_
3	DF_Traversal	DF_Traversal	ADJ	A	Degree=Pos	4	amod	_	_
4	algorithm	algorithm	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	6	punct	_	_
6	DF+	DF+	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	6	punct	_	_
8	DF++	DF++	NOUN	S	Number=Sing	6	appos	_	SpaceAfter=No
9	.	.	PUNCT	FF	_	8	punct	_	_
10	Spanning	Spanning	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	8	acl	_	_
11	Tree	Tree	NOUN	S	Number=Sing	12	nmod	_	_
12	problem	problem	NOUN	S	Number=Sing	10	obj	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 615
# text = Shout protocol.
1	Shout	Shout	ADP	E	_	2	case	_	_
2	protocol	protocol	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 616
# text = Correctness, computational costs and improvements of the Shout protocol.
1	Correctness	Correctness	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	4	punct	_	_
3	computational	computational	ADJ	A	Degree=Pos	4	amod	_	_
4	costs	cost	NOUN	S	Number=Plur	1	conj	_	_
5	and	and	CCONJ	CC	_	6	cc	_	_
6	improvements	improvement	NOUN	S	Number=Plur	1	conj	_	_
7	of	of	ADP	E	_	10	case	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	Shout	Shout	NOUN	S	Number=Sing	10	nmod	_	_
10	protocol	protocol	NOUN	S	Number=Sing	6	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 617
# text = Anonymous graph exploration by means of a finite state automaton.
1	Anonymous	anonymous	DET	DI	PronType=Ind	3	det	_	_
2	graph	graph	ADJ	A	Degree=Pos	3	amod	_	_
3	exploration	explore	NOUN	S	Number=Sing	0	root	_	_
4	by	by	ADP	E	_	5	case	_	_
5	means	means	NOUN	S	Number=Sing	3	nmod	_	_
6	of	of	ADP	E	_	10	case	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
8	finite	finite	ADJ	A	Degree=Pos	10	amod	_	_
9	state	state	NOUN	S	Number=Sing	10	nmod	_	_
10	automaton	automaton	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 618
# text = Ad-hoc local orientation for the construction of a Spanning Tree.
1	Ad	ad	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	hoc	hoc	X	SW	Foreign=Yes	5	amod	_	_
4	local	local	ADJ	A	Degree=Pos	5	amod	_	_
5	orientation	orientation	NOUN	S	Number=Sing	0	root	_	_
6	for	for	ADP	E	_	8	case	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	construction	construction	NOUN	S	Number=Sing	5	nmod	_	_
9	of	of	ADP	E	_	12	case	_	_
10	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
11	Spanning	Spanning	ADJ	A	Degree=Pos	12	amod	_	_
12	Tree	Tree	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 619
# text = Right-hand rule.
1	Right	right	ADV	B	_	4	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	hand	hand	NOUN	S	Number=Sing	4	nmod	_	_
4	rule	rule	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 620
# text = Spanning tree with multiple initiators.
1	Spanning	Spanning	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	tree	tree	NOUN	S	Number=Sing	1	obj	_	_
3	with	with	ADP	E	_	5	case	_	_
4	multiple	multiple	ADJ	A	Degree=Pos	5	amod	_	_
5	initiators	initiator	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 621
# text = Spanning Tree with unique identifiers.
1	Spanning	Spanning	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	Tree	Tree	NOUN	S	Number=Sing	1	obj	_	_
3	with	with	ADP	E	_	5	case	_	_
4	unique	unique	ADJ	A	Degree=Pos	5	amod	_	_
5	identifiers	identifier	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 622
# text = MultiShout protocol.
1	MultiShout	MultiShout	ADP	E	_	2	case	_	_
2	protocol	protocol	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 623
# text = Introduction to the saturation technique.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	ADP	E	_	5	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
4	saturation	saturation	NOUN	S	Number=Sing	5	nmod	_	_
5	technique	technique	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 624
# text = Saturation technique.
1	Saturation	Saturation	NOUN	S	Number=Sing	2	nmod	_	_
2	technique	technique	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 625
# text = Minimum value search by means of saturation.
1	Minimum	minimum	ADJ	A	Degree=Pos	3	amod	_	_
2	value	value	NOUN	S	Number=Sing	3	nmod	_	_
3	search	search	NOUN	S	Number=Sing	0	root	_	_
4	by	by	ADP	E	_	5	case	_	_
5	means	means	NOUN	S	Number=Sing	3	nmod	_	_
6	of	of	ADP	E	_	7	case	_	_
7	saturation	saturation	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 626
# text = Leader Election: impossibility results, tree topology, ring topology.
1	Leader	leader	ADP	E	_	2	case	_	_
2	Election	election	PROPN	SP	_	8	nmod	_	SpaceAfter=No
3	:	:	PUNCT	FF	_	5	punct	_	_
4	impossibility	impossibility	NOUN	S	Number=Sing	5	nmod	_	_
5	results	result	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	5	punct	_	_
7	tree	tree	NOUN	S	Number=Sing	8	nmod	_	_
8	topology	topology	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	8	punct	_	_
10	ring	r	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	8	acl	_	_
11	topology	topology	NOUN	S	Number=Sing	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\s\n

# sent_id = 627
# text = AsFar protocol.
1	AsFar	AsFar	ADJ	A	Degree=Pos	2	amod	_	_
2	protocol	protocol	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 628
# text = Gathering problem.
1	Gathering	Gather	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	0	root	_	_
2	problem	problem	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 629
# text = Look-Compute-Move Model.
1	Look	look	PROPN	SP	_	0	root	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	Compute	Compute	PROPN	SP	_	1	flat	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	Move	move	PROPN	SP	_	1	flat	_	_
6	Model	model	PROPN	SP	_	1	flat	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 630
# text = Gathering on Rings.
1	Gathering	Gather	VERB	V	VerbForm=Ger	0	root	_	_
2	on	on	ADP	E	_	3	case	_	_
3	Rings	Ring	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 631
# text = Study-unit COMPUTER SCIENCE TEACHING
1	Study	study	ADV	B	_	4	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	COMPUTER	computer	PROPN	SP	_	0	root	_	_
5	SCIENCE	science	PROPN	SP	_	4	nmod	_	_
6	TEACHING	teach	PRON	PI	Number=Sing|PronType=Ind	4	nmod	_	SpacesAfter=\n

# sent_id = 632
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 633
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 634
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 635
# text = A001587
1	A001587	A001587	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 636
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 637
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 638
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 639
# text = Sergio Tasso
1	Sergio	Sergio	PROPN	SP	_	0	root	_	_
2	Tasso	Tasso	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 640
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 641
# text = Sergio Tasso - Didattica Ufficiale
1	Sergio	Sergio	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Tasso	Tasso	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 642
# text = Nicla Palladino - Didattica Ufficiale (Codocenza)
1	Nicla	Niclà	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Palladino	Palladino	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	1	punct	_	SpacesAfter=\n

# sent_id = 643
# text = Stefano Marcugini - Didattica Ufficiale (Codocenza)
1	Stefano	Stefano	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Marcugini	Marcugini	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	1	punct	_	SpacesAfter=\n

# sent_id = 644
# text = Arturo Carpi - Didattica Ufficiale (Codocenza)
1	Arturo	Arturo	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Carpi	Carpi	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	1	punct	_	SpacesAfter=\n

# sent_id = 645
# text = Francesco Santini - Didattica Ufficiale (Codocenza)
1	Francesco	Francesco	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Santini	Santini	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	2	flat	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	2	flat	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 646
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 647
# text = 14 Hours - Didattica Ufficiale - Sergio Tasso
1	14	14	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	4	nmod	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	0	root	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Sergio	Sergio	PROPN	SP	_	4	flat	_	_
8	Tasso	Tasso	PROPN	SP	_	4	flat	_	SpacesAfter=\n

# sent_id = 648
# text = 7 Hours - Didattica Ufficiale (Codocenza) - Nicla Palladino
1	7	7	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	5	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	0	root	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	5	nmod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	7	punct	_	_
10	Nicla	Nicla	PROPN	SP	_	7	flat	_	_
11	Palladino	Palladino	PROPN	SP	_	7	flat	_	SpacesAfter=\n

# sent_id = 649
# text = 7 Hours - Didattica Ufficiale (Codocenza) - Stefano Marcugini
1	7	7	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	5	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	0	root	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	5	nmod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	7	punct	_	_
10	Stefano	Stefano	PROPN	SP	_	7	flat	_	_
11	Marcugini	Marcugini	PROPN	SP	_	7	flat	_	SpacesAfter=\n

# sent_id = 650
# text = 7 Hours - Didattica Ufficiale (Codocenza) - Arturo Carpi
1	7	7	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	5	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	0	root	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	5	nmod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	7	punct	_	_
10	Arturo	Arturo	PROPN	SP	_	7	flat	_	_
11	Carpi	Carpi	PROPN	SP	_	7	flat	_	SpacesAfter=\n

# sent_id = 651
# text = 7 Hours - Didattica Ufficiale (Codocenza) - Francesco Santini
1	7	7	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	5	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	0	root	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	Codocenza	Codocenza	PROPN	SP	_	5	nmod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	_
9	-	-	PUNCT	FF	_	7	punct	_	_
10	Francesco	Francesco	PROPN	SP	_	7	flat	_	_
11	Santini	Santini	PROPN	SP	_	7	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 652
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 653
# text = 6
1	6	6	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 654
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 655
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 656
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 657
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 658
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 659
# text = Coorte 2019 - Will supplied in year 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2019	2019	NUM	N	NumType=Card	4	nummod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Will	will	NOUN	S	Number=Sing	5	nsubj	_	_
5	supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
6	in	in	ADP	E	_	7	case	_	_
7	year	year	NOUN	S	Number=Sing	5	obl	_	_
8	2020	2020	NUM	N	NumType=Card	5	obj	_	SpacesAfter=\n

# sent_id = 660
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 661
# text = Affine/integrativa
1	Affine	Affine	PROPN	SP	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	integrativa	integrativà	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 662
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 663
# text = Attività formative affini o integrative
1	Attività	Attività	NOUN	S	Number=Sing	5	obl	_	_
2	formative	formative	ADJ	A	Degree=Pos	3	amod	_	_
3	affini	affini	X	X	_	5	advmod	_	_
4	o	o	ADV	B	_	5	advmod	_	_
5	integrative	integrative	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 664
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 665
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 666
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 667
# text = I
1	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 668
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 669
# text = Opzionale (Optional)
1	Opzionale	Opzionale	NOUN	S	Number=Sing	0	root	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Optional	Optional	PROPN	SP	_	1	nmod	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 670
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 671
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 672
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 673
# text = Italian
1	Italian	Italian	ADJ	A	Degree=Pos	0	root	_	SpacesAfter=\n

# sent_id = 674
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 675
# text = General didactics and didactics of the discipline.
1	General	general	ADJ	A	Degree=Pos	2	amod	_	_
2	didactics	didactics	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	didactics	didactics	NOUN	S	Number=Plur	2	conj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	discipline	discipline	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 676
# text = Teaching as a transmission of knowledge, the behaviorist model, the constructivist model.
1	Teaching	teaching	VERB	V	VerbForm=Ger	0	root	_	_
2	as	as	ADP	E	_	4	case	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
4	transmission	transmission	NOUN	S	Number=Sing	1	obl	_	_
5	of	of	ADP	E	_	6	case	_	_
6	knowledge	knowledge	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	1	punct	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	behaviorist	behaviorist	NOUN	S	Number=Sing	10	nmod	_	_
10	model	model	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	10	punct	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	constructivist	constructivist	ADJ	A	Degree=Pos	14	amod	_	_
14	model	model	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 677
# text = The most common misconceptions in computer science.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	most	most	ADV	B	_	3	advmod	_	_
3	common	common	ADJ	A	Degree=Pos	4	amod	_	_
4	misconceptions	misconception	NOUN	S	Number=Plur	0	root	_	_
5	in	in	ADP	E	_	7	case	_	_
6	computer	computer	NOUN	S	Number=Sing	7	nmod	_	_
7	science	science	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 678
# text = Problem solving.
1	Problem	problem	PRON	PE	Number=Plur|Person=3|PronType=Prs	2	nsubj	_	_
2	solving	solve	VERB	V	VerbForm=Ger	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 679
# text = Epistemological obstacles.
1	Epistemological	Epistemological	ADJ	A	Degree=Pos	2	amod	_	_
2	obstacles	obstacle	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 680
# text = Collaborative learning.
1	Collaborative	Collaborative	ADJ	A	Degree=Pos	2	amod	_	_
2	learning	learning	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 681
# text = The general principles of peer tutoring.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	general	general	ADJ	A	Degree=Pos	3	amod	_	_
3	principles	principle	NOUN	S	Number=Plur	0	root	_	_
4	of	of	ADP	E	_	6	case	_	_
5	peer	peer	NOUN	S	Number=Sing	6	nmod	_	_
6	tutoring	tutor	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 682
# text = Introduction to the tutoring activity, exploring personal and psychological aspects of the student in difficulty.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	ADP	E	_	5	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
4	tutoring	tutor	NOUN	S	_	5	nmod	_	_
5	activity	activity	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	1	punct	_	_
7	exploring	explore	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	1	acl	_	_
8	personal	personal	ADJ	A	Degree=Pos	11	amod	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	psychological	psychological	ADJ	A	Degree=Pos	8	conj	_	_
11	aspects	aspect	NOUN	S	Number=Plur	7	obj	_	_
12	of	of	ADP	E	_	14	case	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
14	student	student	NOUN	S	Number=Sing	11	nmod	_	_
15	in	in	ADP	E	_	16	case	_	_
16	difficulty	difficulty	NOUN	S	Number=Sing	7	obl	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 683
# text = Procedural programming didactics (C language).
1	Procedural	Procedural	ADJ	A	Degree=Pos	3	amod	_	_
2	programming	programming	NOUN	S	Number=Sing	3	nmod	_	_
3	didactics	didactics	NOUN	S	Number=Plur	0	root	_	_
4	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
5	C	Celsius	PROPN	SP	_	6	nmod	_	_
6	language	language	NOUN	S	Number=Sing	3	appos	_	SpaceAfter=No
7	)	)	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 684
# text = Object-oriented programming didactics (Java language).
1	Object	object	PROPN	SP	_	3	obl	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
3	oriented	orient	VERB	V	Tense=Past|VerbForm=Part	5	acl	_	_
4	programming	programming	NOUN	S	Number=Sing	5	nmod	_	_
5	didactics	didactics	NOUN	S	Number=Plur	0	root	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	Java	Java	PROPN	SP	_	8	nmod	_	_
8	language	language	NOUN	S	Number=Sing	5	appos	_	SpaceAfter=No
9	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 685
# text = Computer architecture didactics.
1	Computer	computer	NOUN	S	Number=Sing	0	root	_	_
2	architecture	architecture	X	SW	Foreign=Yes	1	nmod	_	_
3	didactics	didactics	X	SW	Foreign=Yes	2	flat:foreign	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 686
# text = Design of recovery activities on the topics on which the students encounter most difficulties.
1	Design	design	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	recovery	recovery	NOUN	S	Number=Sing	4	nmod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	_
5	on	on	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	topics	topics	NOUN	S	Number=Sing	4	nmod	_	_
8	on	on	ADP	E	_	9	case	_	_
9	which	which	PRON	PR	PronType=Rel	12	obl	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	students	student	NOUN	S	Number=Plur	12	nsubj	_	_
12	encounter	encounter	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	7	acl:relcl	_	_
13	most	most	ADJ	A	Degree=Sup	14	amod	_	_
14	difficulties	difficulty	NOUN	S	Number=Plur	12	obj	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 687
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 688
# text = Lecture notes provided by the teachers
1	Lecture	Lecture	NOUN	S	Number=Sing	2	nsubj	_	_
2	notes	note	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	provided	provide	VERB	V	Tense=Past|VerbForm=Part	2	xcomp	_	_
4	by	by	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	teachers	teacher	NOUN	S	Number=Plur	3	obl	_	SpacesAfter=\n

# sent_id = 689
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 690
# text = Ability to relate to students in difficulty and to provide effective tutoring, both as regards the specific aspects of the exams of the courses, and as regards personal and psychological difficulties.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	relate	relate	VERB	V	VerbForm=Inf	1	acl	_	_
4	to	to	ADP	E	_	5	case	_	_
5	students	student	NOUN	S	Number=Plur	3	obl	_	_
6	in	in	ADP	E	_	7	case	_	_
7	difficulty	difficulty	NOUN	S	Number=Sing	5	nmod	_	_
8	and	and	CCONJ	CC	_	10	cc	_	_
9	to	to	PART	PART	_	10	mark	_	_
10	provide	provide	VERB	V	VerbForm=Inf	3	conj	_	_
11	effective	effective	ADJ	A	Degree=Pos	12	amod	_	_
12	tutoring	tutor	NOUN	S	Number=Sing	10	obj	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	16	punct	_	_
14	both	both	CCONJ	CC	_	16	cc	_	_
15	as	as	ADP	E	_	16	mark	_	_
16	regards	regard	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	conj	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
18	specific	specific	ADJ	A	Degree=Pos	19	amod	_	_
19	aspects	aspect	NOUN	S	Number=Plur	16	obj	_	_
20	of	of	ADP	E	_	22	case	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
22	exams	exam	NOUN	S	Number=Plur	19	nmod	_	_
23	of	of	ADP	E	_	25	case	_	_
24	the	the	DET	RD	Definite=Def|PronType=Art	25	det	_	_
25	courses	course	NOUN	S	Number=Plur	22	nmod	_	SpaceAfter=No
26	,	,	PUNCT	FF	_	29	punct	_	_
27	and	and	CCONJ	CC	_	29	cc	_	_
28	as	as	ADP	E	_	29	case	_	_
29	regards	regard	NOUN	S	Number=Plur	22	conj	_	_
30	personal	personal	ADJ	A	Degree=Pos	33	amod	_	_
31	and	and	CCONJ	CC	_	32	cc	_	_
32	psychological	psychological	ADJ	A	Degree=Pos	30	conj	_	_
33	difficulties	difficulty	NOUN	S	Number=Plur	29	obj	_	SpaceAfter=No
34	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 691
# text = Ability to create educational material such as exercises and quizzes for e-learning platforms on topics of procedural programming (C language), Object-oriented programming (Java language) and Computer architecture.
1	Ability	ability	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	create	create	VERB	V	VerbForm=Inf	1	acl	_	_
4	educational	education	ADJ	A	Degree=Pos	6	amod	_	_
5	material	material	ADJ	A	Degree=Pos	6	amod	_	_
6	such	such	NOUN	S	Number=Sing	3	obj	_	_
7	as	as	ADP	E	_	8	case	_	_
8	exercises	exercise	NOUN	S	Number=Plur	6	nmod	_	_
9	and	and	CCONJ	CC	_	10	cc	_	_
10	quizzes	quizze	NOUN	S	Number=Plur	8	conj	_	_
11	for	for	ADP	E	_	12	case	_	_
12	e	e	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
13	-	-	PUNCT	FF	_	12	punct	_	SpaceAfter=No
14	learning	learning	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	12	acl	_	_
15	platforms	platform	NOUN	S	Number=Plur	14	obj	_	_
16	on	on	ADP	E	_	17	case	_	_
17	topics	topics	NOUN	S	Number=Plur	14	obl	_	_
18	of	of	ADP	E	_	20	case	_	_
19	procedural	procedural	ADJ	A	Degree=Pos	20	amod	_	_
20	programming	programming	NOUN	S	Number=Sing	17	nmod	_	_
21	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
22	C	Celsius	PROPN	SP	_	23	nmod	_	_
23	language	language	NOUN	S	Number=Sing	20	nmod	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	20	punct	_	_
26	Object	object	PROPN	SP	_	28	obl	_	SpaceAfter=No
27	-	-	PUNCT	FF	_	28	punct	_	SpaceAfter=No
28	oriented	orient	VERB	V	Tense=Past|VerbForm=Part	29	acl	_	_
29	programming	programming	NOUN	S	Number=Sing	20	nmod	_	_
30	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
31	Java	Java	PROPN	SP	_	32	nmod	_	_
32	language	language	NOUN	S	Number=Sing	29	nmod	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	32	punct	_	_
34	and	and	CCONJ	CC	_	36	cc	_	_
35	Computer	computer	ADJ	A	Degree=Cmp	36	amod	_	_
36	architecture	architecture	NOUN	S	Number=Sing	29	conj	_	SpaceAfter=No
37	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 692
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 693
# text = It is useful to have taken the exam of Computer Architecture, Programming I and Programming II.
1	It	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	expl	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	_	_
3	useful	useful	ADJ	A	Degree=Pos	0	root	_	_
4	to	to	PART	PART	_	6	mark	_	_
5	have	have	AUX	VA	VerbForm=Inf	6	aux	_	_
6	taken	take	VERB	V	Tense=Past|VerbForm=Part	3	csubj	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	exam	exam	NOUN	S	Number=Sing	6	obj	_	_
9	of	of	ADP	E	_	10	case	_	_
10	Computer	computer	PROPN	SP	_	8	nmod	_	_
11	Architecture	Architecture	PROPN	SP	_	10	flat	_	SpaceAfter=No
12	,	,	PUNCT	FF	_	13	punct	_	_
13	Programming	programme	PROPN	SP	_	8	conj	_	_
14	I	I	PRON	PE	Number=Sing|Person=1|PronType=Prs	17	nsubj	_	_
15	and	and	CCONJ	CC	_	16	cc	_	_
16	Programming	programme	PROPN	SP	_	14	conj	_	_
17	II	second	ADJ	NO	Degree=Pos|NumType=Ord	13	flat	_	SpaceAfter=No
18	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 694
# text = In particular it is important to be familiar with the basic concepts of programming.
1	In	in	ADP	E	_	2	case	_	_
2	particular	particular	ADJ	A	Number=Sing	5	obl	_	_
3	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	5	expl	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	_	_
5	important	important	ADJ	A	Degree=Pos	0	root	_	_
6	to	to	PART	PART	_	8	mark	_	_
7	be	be	AUX	V	VerbForm=Inf	8	cop	_	_
8	familiar	familiar	ADJ	A	Degree=Pos	5	csubj	_	_
9	with	with	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	basic	basic	ADJ	A	Degree=Pos	12	amod	_	_
12	concepts	concept	NOUN	S	Number=Plur	8	obl	_	_
13	of	of	ADP	E	_	14	case	_	_
14	programming	programming	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 695
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 696
# text = The course avails itself of the collaboration of experts in various sectors, and takes place through lectures, conferences, activities to be experienced in the first person.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	course	course	NOUN	S	Number=Sing	3	nsubj	_	_
3	avails	avail	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	itself	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	obj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	collaboration	collaboration	NOUN	S	Number=Sing	4	nmod	_	_
8	of	of	ADP	E	_	9	case	_	_
9	experts	expert	NOUN	S	Number=Plur	7	nmod	_	_
10	in	in	ADP	E	_	12	case	_	_
11	various	various	ADJ	A	Degree=Pos	12	amod	_	_
12	sectors	sector	NOUN	S	Number=Plur	3	obl	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	15	punct	_	_
14	and	and	CCONJ	CC	_	15	cc	_	_
15	takes	take	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	conj	_	_
16	place	place	NOUN	S	Number=Sing	15	obj	_	_
17	through	through	ADP	E	_	18	case	_	_
18	lectures	lecture	NOUN	S	Number=Plur	15	obl	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	20	punct	_	_
20	conferences	conference	NOUN	S	Number=Plur	18	conj	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	22	punct	_	_
22	activities	activity	NOUN	S	Number=Plur	18	conj	_	_
23	to	to	PART	PART	_	25	mark	_	_
24	be	be	AUX	VA	VerbForm=Inf	25	aux:pass	_	_
25	experienced	experience	VERB	V	Tense=Past|VerbForm=Part	18	acl	_	_
26	in	in	ADP	E	_	29	case	_	_
27	the	the	DET	RD	Definite=Def|PronType=Art	29	det	_	_
28	first	first	ADJ	NO	Degree=Pos|NumType=Ord	29	amod	_	_
29	person	person	NOUN	S	Number=Sing	25	obl	_	SpaceAfter=No
30	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 697
# text = Discussion of material prepared by the students.
1	Discussion	discussion	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	material	material	ADJ	A	Degree=Pos	4	amod	_	_
4	prepared	prepare	VERB	V	Tense=Past|VerbForm=Part	1	acl	_	_
5	by	by	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	students	student	NOUN	S	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 698
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 699
# text = Website: www.unistudium.unipg.it
1	Website	website	ADV	B	_	3	advmod	_	SpaceAfter=No
2	:	:	PUNCT	FF	_	1	punct	_	_
3	www.unistudium.unipg.it	www.unistudium.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 700
# text = For the exam schedule, see: www.dmi.unipg.it
1	For	for	ADP	E	_	4	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	exam	exam	NOUN	S	Number=Sing	4	nmod	_	_
4	schedule	schedule	NOUN	S	Number=Sing	6	obl	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	4	punct	_	_
6	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
7	:	:	PUNCT	FC	_	6	punct	_	_
8	www.dmi.unipg.it	www.dmi.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	6	obj	_	SpacesAfter=\n

# sent_id = 701
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 702
# text = Projects assigned by the teachers.
1	Projects	project	NOUN	S	Number=Plur	0	root	_	_
2	assigned	assign	VERB	V	Tense=Past|VerbForm=Part	1	acl	_	_
3	by	by	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	teachers	teacher	NOUN	S	Number=Plur	2	obl	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 703
# text = Oral talks on the various covered topics.
1	Oral	oral	DET	DI	PronType=Ind	2	det	_	_
2	talks	talk	NOUN	S	Number=Plur	0	root	_	_
3	on	on	ADP	E	_	7	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
5	various	various	ADJ	A	Degree=Pos	7	amod	_	_
6	covered	covere	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	7	acl	_	_
7	topics	topics	NOUN	S	Number=Plur	2	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 704
# text = The development of the projects is aimed at verifying the ability to create teaching material such as exercises and quizzes for an e-learning platform.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	development	development	NOUN	S	Number=Sing	7	nsubj:pass	_	_
3	of	of	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	projects	project	NOUN	S	Number=Plur	2	nmod	_	_
6	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux:pass	_	_
7	aimed	aim	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
8	at	at	ADP	E	_	9	mark	_	_
9	verifying	verify	VERB	V	VerbForm=Ger	7	advcl	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	ability	ability	NOUN	S	Number=Sing	9	obj	_	_
12	to	to	PART	PART	_	13	mark	_	_
13	create	create	VERB	V	VerbForm=Inf	9	xcomp	_	_
14	teaching	teaching	VERB	V	VerbForm=Ger	13	advcl	_	_
15	material	material	ADJ	A	Degree=Pos	18	amod	_	_
16	such	such	ADJ	A	Degree=Pos	18	amod	_	_
17	as	as	ADP	E	_	16	fixed	_	_
18	exercises	exercise	NOUN	S	Number=Plur	14	obj	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	quizzes	quizze	NOUN	S	Number=Plur	18	conj	_	_
21	for	for	ADP	E	_	26	case	_	_
22	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	26	det	_	_
23	e	e	NOUN	S	Number=Sing	25	nmod	_	SpaceAfter=No
24	-	-	PUNCT	FF	_	23	punct	_	SpaceAfter=No
25	learning	learning	NOUN	S	Number=Sing	26	nmod	_	_
26	platform	platform	NOUN	S	Number=Sing	14	obl	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n

# sent_id = 705
# text = At the request of the student the exam may be taken also in English.
1	At	at	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	request	request	NOUN	S	Number=Sing	11	nsubj:pass	_	_
4	of	of	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	student	student	NOUN	S	Number=Sing	3	nmod	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	exam	exam	NOUN	S	Number=Sing	6	nmod	_	_
9	may	may	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	11	aux	_	_
10	be	be	AUX	VA	VerbForm=Inf	11	aux:pass	_	_
11	taken	take	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
12	also	also	ADV	B	_	14	advmod	_	_
13	in	in	ADP	E	_	14	case	_	_
14	English	English	ADJ	A	Degree=Pos	11	xcomp	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	11	punct	_	SpacesAfter=\n

# sent_id = 706
# text = For information on support services for students with disabilities and / or DSA visit the page http://www.unipg.it/disabilita-e-dsa
1	For	for	ADP	E	_	2	case	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	_
3	on	on	ADP	E	_	5	case	_	_
4	support	support	NOUN	S	Number=Sing	5	nmod	_	_
5	services	service	NOUN	S	Number=Plur	2	nmod	_	_
6	for	for	ADP	E	_	7	case	_	_
7	students	student	NOUN	S	Number=Plur	5	nmod	_	_
8	with	with	ADP	E	_	9	case	_	_
9	disabilities	disability	NOUN	S	Number=Plur	7	nmod	_	_
10	and	and	CCONJ	CC	_	14	cc	_	_
11	/	/	PUNCT	FF	_	13	punct	_	_
12	or	or	CCONJ	CC	_	13	cc	_	_
13	DSA	DSA	PROPN	SP	_	10	conj	_	_
14	visit	visit	VERB	V	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	9	conj	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	17	det	_	_
16	page	page	NOUN	S	Number=Sing	17	nmod	_	_
17	http://www.unipg.it/disabilita-e-dsa	http://www.unipg.it/disabilita-e-dsà	NOUN	S	Number=Sing	14	obj	_	SpacesAfter=\n

# sent_id = 707
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 708
# text = General didactics and didactics of the discipline.
1	General	general	ADJ	A	Degree=Pos	2	amod	_	_
2	didactics	didactics	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	didactics	didactics	NOUN	S	Number=Plur	2	conj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	discipline	discipline	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 709
# text = Meaningful learning.
1	Meaningful	Meaningful	ADJ	A	Degree=Pos	2	amod	_	_
2	learning	learning	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 710
# text = Teaching as a transmission of knowledge, the behaviorist model, the constructivist model.
1	Teaching	teaching	VERB	V	VerbForm=Ger	0	root	_	_
2	as	as	ADP	E	_	4	case	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
4	transmission	transmission	NOUN	S	Number=Sing	1	obl	_	_
5	of	of	ADP	E	_	6	case	_	_
6	knowledge	knowledge	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	1	punct	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	behaviorist	behaviorist	NOUN	S	Number=Sing	10	nmod	_	_
10	model	model	NOUN	S	Number=Sing	1	obj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	10	punct	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	constructivist	constructivist	ADJ	A	Degree=Pos	14	amod	_	_
14	model	model	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 711
# text = Avoidable and inevitable misconceptions.
1	Avoidable	Avoidable	ADJ	A	Degree=Pos	4	amod	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	inevitable	inevitable	ADJ	A	Degree=Pos	1	conj	_	_
4	misconceptions	misconception	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 712
# text = The most common misconceptions in computer science.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	most	most	ADV	B	_	3	advmod	_	_
3	common	common	ADJ	A	Degree=Pos	4	amod	_	_
4	misconceptions	misconception	NOUN	S	Number=Plur	0	root	_	_
5	in	in	ADP	E	_	7	case	_	_
6	computer	computer	NOUN	S	Number=Sing	7	nmod	_	_
7	science	science	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 713
# text = Problem solving and teaching characteristics for problems.
1	Problem	problem	PRON	PE	Number=Plur|Person=3|PronType=Prs	2	nsubj	_	_
2	solving	solve	VERB	V	VerbForm=Ger	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	teaching	teach	VERB	V	VerbForm=Ger	2	conj	_	_
5	characteristics	characteristics	NOUN	S	Number=Plur	4	obj	_	_
6	for	for	ADP	E	_	7	case	_	_
7	problems	problem	NOUN	S	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 714
# text = Epistemological obstacles.
1	Epistemological	Epistemological	ADJ	A	Degree=Pos	2	amod	_	_
2	obstacles	obstacle	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 715
# text = The general principles of collaborative learning.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	general	general	ADJ	A	Degree=Pos	3	amod	_	_
3	principles	principle	NOUN	S	Number=Plur	0	root	_	_
4	of	of	ADP	E	_	6	case	_	_
5	collaborative	collaborative	ADJ	A	Degree=Pos	6	amod	_	_
6	learning	learning	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 716
# text = The general principles of peer tutoring.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	general	general	ADJ	A	Degree=Pos	3	amod	_	_
3	principles	principle	NOUN	S	Number=Plur	0	root	_	_
4	of	of	ADP	E	_	6	case	_	_
5	peer	peer	NOUN	S	Number=Sing	6	nmod	_	_
6	tutoring	tutor	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 717
# text = The history of mathematics in computer science teaching.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	history	history	NOUN	S	Number=Sing	0	root	_	_
3	of	of	ADP	E	_	4	case	_	_
4	mathematics	mathematics	NOUN	S	Number=Sing	2	nmod	_	_
5	in	in	ADP	E	_	8	case	_	_
6	computer	computer	NOUN	S	Number=Sing	7	nmod	_	_
7	science	science	NOUN	S	Number=Sing	8	nmod	_	_
8	teaching	teaching	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 718
# text = Working for problems: history, mathematics and computer science in learning.
1	Working	work	VERB	V	VerbForm=Ger	0	root	_	_
2	for	for	ADP	E	_	3	case	_	_
3	problems	problem	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
4	:	:	PUNCT	FC	_	5	punct	_	_
5	history	history	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	7	punct	_	_
7	mathematics	mathematics	NOUN	S	Number=Sing	5	conj	_	_
8	and	and	CCONJ	CC	_	10	cc	_	_
9	computer	computer	NOUN	S	Number=Sing	10	nmod	_	_
10	science	science	NOUN	S	Number=Sing	5	conj	_	_
11	in	in	ADP	E	_	12	case	_	_
12	learning	learning	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 719
# text = Tasks of a tutor.
1	Tasks	Task	NOUN	S	Number=Plur	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
4	tutor	tutor	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 720
# text = Attention and listening skills.
1	Attention	attention	NOUN	S	Number=Sing	0	root	_	_
2	and	and	CCONJ	CC	_	4	cc	_	_
3	listening	listen	ADJ	A	Degree=Pos	4	amod	_	_
4	skills	skills	NOUN	S	Number=Plur	1	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 721
# text = Didactic and psychological aspects in the request and in the activity of help.
1	Didactic	Didactic	ADJ	A	Degree=Pos	4	amod	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	psychological	psychological	ADJ	A	Degree=Pos	1	conj	_	_
4	aspects	aspect	NOUN	S	Number=Plur	0	root	_	_
5	in	in	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	request	request	NOUN	S	Number=Sing	4	nmod	_	_
8	and	and	CCONJ	CC	_	11	cc	_	_
9	in	in	ADP	E	_	11	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	activity	activity	NOUN	S	Number=Sing	7	conj	_	_
12	of	of	ADP	E	_	13	case	_	_
13	help	help	NOUN	S	Number=Sing	11	nmod	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\n

# sent_id = 722
# text = Difficulty in informatics.
1	Difficulty	difficulty	NOUN	S	Number=Sing	0	root	_	_
2	in	in	ADP	E	_	3	case	_	_
3	informatics	informatics	NOUN	S	Number=Plur	1	nmod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 723
# text = Special educational needs.
1	Special	special	PROPN	SP	_	3	nsubj	_	_
2	educational	education	ADJ	A	Degree=Pos	3	amod	_	_
3	needs	need	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\n

# sent_id = 724
# text = Dyslexia and dyscalculia.
1	Dyslexia	Dyslexia	PROPN	SP	_	0	root	_	_
2	and	and	CCONJ	CC	_	3	cc	_	_
3	dyscalculia	dyscalculia	X	SW	Foreign=Yes	1	conj	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 725
# text = A concrete approach to mathematics and computer science: an inclusive teaching tool.
1	A	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	concrete	concrete	ADJ	A	Degree=Pos	3	amod	_	_
3	approach	approach	NOUN	S	Number=Sing	0	root	_	_
4	to	to	ADP	E	_	5	case	_	_
5	mathematics	mathematic	NOUN	S	Number=Plur	3	nmod	_	_
6	and	and	CCONJ	CC	_	8	cc	_	_
7	computer	computer	NOUN	S	Number=Sing	8	nmod	_	_
8	science	science	NOUN	S	Number=Sing	5	conj	_	SpaceAfter=No
9	:	:	PUNCT	FC	_	8	punct	_	_
10	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	det	_	_
11	inclusive	inclusive	ADJ	A	Degree=Pos	13	amod	_	_
12	teaching	teaching	NOUN	S	Number=Sing	13	nmod	_	_
13	tool	tool	NOUN	S	Number=Sing	8	appos	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 726
# text = Review of the fundamental concepts of programming, in particular related to C and Java languages.
1	Review	review	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	5	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
4	fundamental	fundamental	ADJ	A	Degree=Pos	5	amod	_	_
5	concepts	concept	NOUN	S	Number=Plur	1	nmod	_	_
6	of	of	ADP	E	_	7	case	_	_
7	programming	programming	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	7	punct	_	_
9	in	in	ADP	E	_	10	case	_	_
10	particular	particular	ADJ	A	Number=Sing	7	nmod	_	_
11	related	relate	VERB	V	Tense=Past|VerbForm=Part	10	acl	_	_
12	to	to	ADP	E	_	13	case	_	_
13	C	Celsius	PROPN	SP	_	11	obl	_	_
14	and	and	CCONJ	CC	_	16	cc	_	_
15	Java	Java	PROPN	SP	_	16	nmod	_	_
16	languages	language	NOUN	S	Number=Plur	13	conj	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 727
# text = Review of the representation of analog and digital information: counting in binary.
1	Review	review	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	representation	representation	NOUN	S	Number=Sing	1	nmod	_	_
5	of	of	ADP	E	_	6	case	_	_
6	analog	analog	NOUN	S	Number=Sing	4	nmod	_	_
7	and	and	CCONJ	CC	_	9	cc	_	_
8	digital	digital	ADJ	A	Degree=Pos	9	amod	_	_
9	information	information	NOUN	S	Number=Sing	6	conj	_	SpaceAfter=No
10	:	:	PUNCT	FC	_	9	punct	_	_
11	counting	count	VERB	V	VerbForm=Ger	1	acl	_	_
12	in	in	ADP	E	_	13	case	_	_
13	binary	binary	NOUN	S	Number=Sing	11	obl	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 728
# text = Logic connectors, Boolean functions, combinational circuits: from problems concrete to the circuit synthesis.
1	Logic	logic	ADJ	A	Degree=Pos	2	amod	_	_
2	connectors	connector	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	5	punct	_	_
4	Boolean	Boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	functions	function	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	8	punct	_	_
7	combinational	combinational	ADJ	A	Degree=Pos	8	amod	_	_
8	circuits	circuit	NOUN	S	Number=Plur	2	conj	_	SpaceAfter=No
9	:	:	PUNCT	FC	_	11	punct	_	_
10	from	from	ADP	E	_	11	case	_	_
11	problems	problem	NOUN	S	Number=Plur	2	conj	_	_
12	concrete	concrete	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	11	acl	_	_
13	to	to	ADP	E	_	16	case	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
15	circuit	circuit	NOUN	S	Number=Sing	16	nmod	_	_
16	synthesis	synthesis	NOUN	S	Number=Sing	12	obl	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 729
# text = The finite state model: examples and realization of the sequential circuits.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	finite	finite	NOUN	S	Number=Sing	3	nsubj	_	_
3	state	state	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
4	model	model	ADJ	A	Degree=Pos	6	amod	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	6	punct	_	_
6	examples	examples	NOUN	S	Number=Plur	3	obj	_	_
7	and	and	CCONJ	CC	_	8	cc	_	_
8	realization	realization	NOUN	S	Number=Sing	6	conj	_	_
9	of	of	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	sequential	sequential	ADJ	A	Degree=Pos	12	amod	_	_
12	circuits	circuit	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 730
# text = The most frequent mistakes made by students.
1	The	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	most	most	ADV	B	_	3	advmod	_	_
3	frequent	frequent	ADJ	A	Degree=Pos	4	amod	_	_
4	mistakes	mistake	NOUN	S	Number=Plur	0	root	_	_
5	made	make	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
6	by	by	ADP	E	_	7	case	_	_
7	students	student	NOUN	S	Number=Plur	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 731
# text = Design of recovery activities on topics on which students find it most difficult.
1	Design	design	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	recovery	recovery	NOUN	S	Number=Sing	4	nmod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	_
5	on	on	ADP	E	_	6	case	_	_
6	topics	topics	NOUN	S	Number=Plur	4	nmod	_	_
7	on	on	ADP	E	_	8	case	_	_
8	which	which	PRON	PR	PronType=Rel	9	obl	_	_
9	students	student	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	acl:relcl	_	_
10	find	find	NOUN	S	Number=Sing	9	obj	_	_
11	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	13	nsubj	_	_
12	most	most	ADV	B	_	13	advmod	_	_
13	difficult	difficult	ADJ	A	Degree=Pos	10	acl:relcl	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 732
# text = The Moodle platform: activities, quizzes and lessons.
1	The	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	Moodle	Moodle	ADJ	A	Degree=Pos	3	amod	_	_
3	platform	platform	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	:	:	PUNCT	FC	_	5	punct	_	_
5	activities	activity	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	7	punct	_	_
7	quizzes	quizze	NOUN	S	Number=Plur	5	conj	_	_
8	and	and	CCONJ	CC	_	9	cc	_	_
9	lessons	lesson	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 733
# text = Study-unit MACHINE LEARNING
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	0	root	_	_
4	MACHINE	machine	PROPN	SP	_	3	nmod	_	_
5	LEARNING	Learning	PROPN	SP	_	4	flat	_	SpacesAfter=\n

# sent_id = 734
# text = Course name
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	_
2	name	name	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 735
# text = Informatics
1	Informatics	Informatics	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n

# sent_id = 736
# text = Study-unit Code
1	Study	study	ADV	B	_	3	advmod	_	SpaceAfter=No
2	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	unit	unit	NOUN	S	Number=Sing	4	nmod	_	_
4	Code	code	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 737
# text = A002051
1	A002051	A002051	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 738
# text = Curriculum
1	Curriculum	Curriculuy	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 739
# text = Comune a tutti i curricula
1	Comune	Comuno	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	tutti	tutti	X	X	_	1	obj	_	_
4	i	i	X	X	_	3	flat:foreign	_	_
5	curricula	curriculum	X	X	_	1	advmod	_	SpacesAfter=\n

# sent_id = 740
# text = Lecturer
1	Lecturer	Lecturer	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 741
# text = Valentina Poggioni
1	Valentina	Valentina	PROPN	SP	_	0	root	_	_
2	Poggioni	Poggioni	PROPN	SP	_	1	flat	_	SpacesAfter=\n

# sent_id = 742
# text = Lecturers
1	Lecturers	Lecturer	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 743
# text = Valentina Poggioni - Didattica Ufficiale
1	Valentina	Valentinà	PROPN	SP	_	0	root	_	SpacesBefore=\s\s\s\s
2	Poggioni	Poggioni	PROPN	SP	_	1	nmod	_	_
3	-	-	PUNCT	FF	_	2	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	flat	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	1	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 744
# text = Hours
1	Hours	hour	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n\n\n

# newpar
# sent_id = 745
# text = 68 Hours - Didattica Ufficiale - Valentina Poggioni
1	68	68	NUM	N	NumType=Card	2	nummod	_	SpacesBefore=\s\s\s\s
2	Hours	hours	PROPN	SP	_	0	root	_	_
3	-	-	PUNCT	FF	_	4	punct	_	_
4	Didattica	Didattica	PROPN	SP	_	2	nmod	_	_
5	Ufficiale	Ufficiale	PROPN	SP	_	4	flat	_	_
6	-	-	PUNCT	FF	_	4	punct	_	_
7	Valentina	Valentina	PROPN	SP	_	4	flat	_	_
8	Poggioni	Poggioni	PROPN	SP	_	2	flat	_	SpacesAfter=\n\n

# newpar
# sent_id = 746
# text = CFU
1	CFU	Cfu	PRON	PE	Person=2|PronType=Prs	0	root	_	SpacesAfter=\s\n

# sent_id = 747
# text = 9
1	9	9	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 748
# text = Course Regulation
1	Course	course	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	Regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 749
# text = Coorte 2020
1	Coorte	Coorte	ADV	B	_	2	advmod	_	_
2	2020	2020	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n

# sent_id = 750
# text = Supplied
1	Supplied	supply	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 751
# text = 2020/21
1	2020	2020	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	21	21	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 752
# text = Supplied other course regulation
1	Supplied	supplie	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	other	other	ADJ	A	Degree=Pos	4	amod	_	_
3	course	course	ADJ	A	Degree=Pos	4	amod	_	_
4	regulation	regulation	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n\n

# newpar
# sent_id = 753
# text = Learning activities
1	Learning	Learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	activities	activity	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 754
# text = Caratterizzante
1	Caratterizzante	Caratterizzante	PROPN	SP	_	0	root	_	SpacesAfter=\n

# sent_id = 755
# text = Area
1	Area	area	PROPN	SP	_	0	root	_	SpacesAfter=\s\n

# sent_id = 756
# text = Discipline informatiche
1	Discipline	discipline	NOUN	S	Number=Sing	2	nmod	_	_
2	informatiche	informatiche	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 757
# text = Sector
1	Sector	Sector	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 758
# text = INF/01
1	INF	Inf	ADV	B	_	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	01	01	NUM	N	NumType=Card	1	nummod	_	SpacesAfter=\n

# sent_id = 759
# text = Period
1	Period	period	ADV	B	_	0	root	_	SpacesAfter=\s\n

# sent_id = 760
# text = II
1	II	second	ADJ	NO	Degree=Pos|NumType=Ord	0	root	_	SpacesAfter=\n

# sent_id = 761
# text = Type of study-unit
1	Type	type	NOUN	S	Number=Sing	5	nmod	_	_
2	of	of	ADP	E	_	3	case	_	_
3	study	study	NOUN	S	Number=Sing	1	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	unit	unit	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 762
# text = Obbligatorio (Required)
1	Obbligatorio	Obbligatorio	ADV	B	_	3	advmod	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	Required	required	PROPN	SP	_	0	root	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\n

# sent_id = 763
# text = Type of learning activities
1	Type	type	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	4	case	_	_
3	learning	learn	ADJ	A	Degree=Pos	4	amod	_	_
4	activities	activity	NOUN	S	Number=Plur	1	nmod	_	SpacesAfter=\s\n

# sent_id = 764
# text = Attività formativa monodisciplinare
1	Attività	Attività	NOUN	S	Number=Sing	2	nmod	_	_
2	formativa	formativà	NOUN	S	Number=Sing	3	nsubj	_	_
3	monodisciplinare	monodisciplinare	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpacesAfter=\n

# sent_id = 765
# text = Language of instruction
1	Language	language	NOUN	S	Number=Sing	0	root	_	_
2	of	of	ADP	E	_	3	case	_	_
3	instruction	instruction	NOUN	S	Number=Sing	1	nmod	_	SpacesAfter=\s\n

# sent_id = 766
# text = Italiano
1	Italiano	Italiano	DET	DI	PronType=Ind	0	root	_	SpacesAfter=\n

# sent_id = 767
# text = Contents
1	Contents	Content	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 768
# text = Introduction to machine learning.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	machine	machine	VERB	V	VerbForm=Inf	1	acl	_	_
4	learning	learning	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 769
# text = Supervised semi-supervised and unsupervised approaches.
1	Supervised	Supervize	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
2	semi	semi	X	X	_	4	advmod	_	SpaceAfter=No
3	-	-	PUNCT	FF	_	2	punct	_	SpaceAfter=No
4	supervised	supervize	VERB	V	Tense=Past|VerbForm=Part	1	ccomp	_	_
5	and	and	CCONJ	CC	_	7	cc	_	_
6	unsupervised	unsupervize	ADJ	A	Degree=Pos	7	amod	_	_
7	approaches	approach	NOUN	S	Number=Plur	4	conj	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 770
# text = Classification, clustering, anomaly detection.
1	Classification	classification	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	clustering	clustering	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	6	punct	_	_
5	anomaly	anomaly	ADJ	A	Degree=Pos	6	amod	_	_
6	detection	detection	NOUN	S	Number=Sing	1	conj	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 771
# text = Application to computer vision and speech recognition.
1	Application	application	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	computer	computer	VERB	V	VerbForm=Inf	1	acl	_	_
4	vision	vision	NOUN	S	Number=Sing	3	obj	_	_
5	and	and	CCONJ	CC	_	7	cc	_	_
6	speech	speech	NOUN	S	Number=Sing	7	nmod	_	_
7	recognition	recognition	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 772
# text = Introduction to deep learning.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	deep	deep	VERB	V	VerbForm=Inf	1	acl	_	_
4	learning	learning	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 773
# text = Advanced neural network models.
1	Advanced	advance	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	neural	neural	ADJ	A	Degree=Pos	4	amod	_	_
3	network	network	ADJ	A	Degree=Pos	4	amod	_	_
4	models	model	NOUN	S	Number=Plur	1	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 774
# text = Reference texts
1	Reference	reference	NOUN	S	Number=Sing	2	nmod	_	_
2	texts	texts	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 775
# text = Tan, Steinbach, Karpatne, Kumar.
1	Tan	Tan	PROPN	SP	_	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	3	punct	_	_
3	Steinbach	Steinbach	PROPN	SP	_	1	conj	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	5	punct	_	_
5	Karpatne	Karpatne	PROPN	SP	_	1	conj	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	7	punct	_	_
7	Kumar	Kumar	PROPN	SP	_	1	conj	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 776
# text = Introduction to Data Mining, 2nd Edition
1	Introduction	introduction	NOUN	S	Number=Sing	7	nmod	_	_
2	to	to	ADP	E	_	3	case	_	_
3	Data	data	PROPN	SP	_	1	nmod	_	_
4	Mining	Mining	PROPN	SP	_	3	flat	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	1	punct	_	_
6	2nd	2nd	ADJ	A	Degree=Pos	7	amod	_	_
7	Edition	edition	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n

# sent_id = 777
# text = 2019. Pearson
1	2019	2019	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	1	punct	_	_
3	Pearson	Pearson	PROPN	SP	_	0	root	_	SpacesAfter=\n\n

# newpar
# sent_id = 778
# text = Charu C. Aggarwal.
1	Charu	Charu	ADP	E	_	2	case	_	_
2	C	C	PROPN	SP	_	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FF	_	4	punct	_	_
4	Aggarwal	Aggarwal	ADJ	A	Degree=Pos	2	conj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 779
# text = Neural Networks and Deep Learning: a text book. Springer 2018
1	Neural	neural	ADJ	A	Degree=Pos	2	amod	_	_
2	Networks	network	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	Deep	deep	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	2	conj	_	_
5	Learning	Learning	PROPN	SP	_	4	obj	_	SpaceAfter=No
6	:	:	PUNCT	FC	_	9	punct	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
8	text	text	NOUN	S	Number=Sing	9	nmod	_	_
9	book	book	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	9	punct	_	_
11	Springer	Springer	PROPN	SP	_	9	flat	_	_
12	2018	2018	NUM	N	NumType=Card	9	nummod	_	SpacesAfter=\n

# sent_id = 780
# text = Educational objectives
1	Educational	Educational	ADJ	A	Degree=Pos	2	amod	_	_
2	objectives	objectif	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 781
# text = The student will know the fundamentals and most important machine learning methods based on the supervised, semi-supervised and unsupervised approach.
1	The	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	student	student	NOUN	S	Number=Sing	4	nsubj	_	_
3	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
4	know	know	VERB	V	VerbForm=Inf	0	root	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	fundamentals	fundamental	NOUN	S	Number=Plur	4	obj	_	_
7	and	and	CCONJ	CC	_	10	cc	_	_
8	most	most	ADV	B	_	9	advmod	_	_
9	important	important	ADJ	A	Degree=Pos	10	amod	_	_
10	machine	machine	NOUN	S	Number=Sing	6	conj	_	_
11	learning	learn	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	6	acl	_	_
12	methods	method	NOUN	S	Number=Plur	11	obj	_	_
13	based	based	VERB	V	Tense=Past|VerbForm=Part	12	acl	_	_
14	on	on	ADP	E	_	16	case	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
16	supervised	supervized	VERB	V	Tense=Past|VerbForm=Part	13	obl	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	16	punct	_	_
18	semi	fsemirst	X	X	_	20	obl	_	SpaceAfter=No
19	-	-	PUNCT	FF	_	20	punct	_	SpaceAfter=No
20	supervised	supervize	VERB	V	Tense=Past|VerbForm=Part	16	advcl	_	_
21	and	and	CCONJ	CC	_	23	cc	_	_
22	unsupervised	unsupervize	ADJ	A	Degree=Pos	23	amod	_	_
23	approach	approach	NOUN	S	Number=Sing	20	conj	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n

# sent_id = 782
# text = He/she will know also some of the most known methods of deep learning , with a particular focus on computer vision and speech recognition application.
1	He	he	PRON	PE	Gender=Masc|Number=Sing|Person=3|PronType=Prs	5	obl	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	she	she	PRON	PE	Gender=Fem|Number=Sing|Person=3|PronType=Prs	5	nsubj	_	_
4	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	know	know	VERB	V	VerbForm=Inf	0	root	_	_
6	also	also	ADV	B	_	5	advmod	_	_
7	some	some	PRON	PI	PronType=Ind	5	obj	_	_
8	of	of	ADP	E	_	12	case	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
10	most	most	ADV	B	_	11	advmod	_	_
11	known	known	ADJ	A	Degree=Pos	12	amod	_	_
12	methods	method	NOUN	S	Number=Plur	7	nmod	_	_
13	of	of	ADP	E	_	15	case	_	_
14	deep	deep	ADJ	A	Degree=Pos	15	amod	_	_
15	learning	learning	NOUN	S	Number=Sing	12	nmod	_	_
16	,	,	PUNCT	FF	_	5	punct	_	_
17	with	with	ADP	E	_	20	case	_	_
18	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	20	det	_	_
19	particular	particular	ADJ	A	Number=Sing	20	amod	_	_
20	focus	focus	NOUN	S	Gender=Masc|Number=Sing	5	obl	_	_
21	on	on	ADP	E	_	23	case	_	_
22	computer	computer	NOUN	S	Number=Sing	23	nmod	_	_
23	vision	vision	NOUN	S	Number=Sing	20	nmod	_	_
24	and	and	CCONJ	CC	_	27	cc	_	_
25	speech	speech	DET	DI	Number=Sing|PronType=Ind	27	det	_	_
26	recognition	recognition	NOUN	S	Number=Sing	27	nmod	_	_
27	application	application	NOUN	S	Number=Sing	20	conj	_	SpaceAfter=No
28	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\s\n

# sent_id = 783
# text = He/she will able to design, implement, train and test intelligent systems for data classification, clustering and anomaly detection based on advanced neural network models.
1	He	he	PRON	PE	Gender=Masc|Number=Sing|Person=3|PronType=Prs	0	root	_	SpaceAfter=No
2	/	/	PUNCT	FF	_	1	punct	_	SpaceAfter=No
3	she	she	PRON	PE	Gender=Fem|Number=Sing|Person=3|PronType=Prs	5	nsubj	_	_
4	will	will	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	5	cop	_	_
5	able	able	ADJ	A	Degree=Pos	1	acl:relcl	_	_
6	to	to	PART	PART	_	7	mark	_	_
7	design	design	VERB	V	VerbForm=Inf	1	csubj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	7	punct	_	_
9	implement	implement	ADJ	A	Degree=Pos	15	amod	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	11	punct	_	_
11	train	train	VERB	V	VerbForm=Inf	9	conj	_	_
12	and	and	CCONJ	CC	_	13	cc	_	_
13	test	test	VERB	V	VerbForm=Inf	9	conj	_	_
14	intelligent	intelligent	ADJ	A	Degree=Pos	15	amod	_	_
15	systems	system	NOUN	S	Number=Plur	7	obj	_	_
16	for	for	ADP	E	_	18	case	_	_
17	data	data	NOUN	S	Number=Plur	18	nmod	_	_
18	classification	classification	NOUN	S	Number=Sing	15	nmod	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	20	punct	_	_
20	clustering	clustering	NOUN	S	Number=Sing	18	conj	_	_
21	and	and	CCONJ	CC	_	23	cc	_	_
22	anomaly	anomaly	ADV	B	_	23	advmod	_	_
23	detection	detection	NOUN	S	Number=Sing	18	conj	_	_
24	based	based	VERB	V	Tense=Past|VerbForm=Part	23	acl	_	_
25	on	on	ADP	E	_	29	case	_	_
26	advanced	advanced	ADJ	A	Degree=Pos	29	amod	_	_
27	neural	neural	ADJ	A	Degree=Pos	29	amod	_	_
28	network	network	NOUN	S	Number=Sing	29	nmod	_	_
29	models	model	NOUN	S	Number=Plur	24	obl	_	SpaceAfter=No
30	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 784
# text = Prerequisites
1	Prerequisites	prerequisite	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 785
# text = None
1	None	none	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 786
# text = Teaching methods
1	Teaching	teaching	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	2	acl	_	_
2	methods	method	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\s\n

# sent_id = 787
# text = In-class lessons and hands-on in computer lab
1	In-class	In-class	ADJ	A	Degree=Pos	2	amod	_	_
2	lessons	lesson	NOUN	S	Number=Plur	0	root	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	hands-on	hands-on	NOUN	S	Number=Sing	2	conj	_	_
5	in	in	ADP	E	_	7	case	_	_
6	computer	computer	NOUN	S	Number=Sing	7	nmod	_	_
7	lab	lab	NOUN	S	Number=Sing	2	nmod	_	SpacesAfter=\n

# sent_id = 788
# text = Other information
1	Other	other	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	information	information	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 789
# text = For any other information www.unistudium.unipg.it
1	For	for	ADP	E	_	4	case	_	_
2	any	any	DET	DI	PronType=Ind	4	det	_	_
3	other	other	ADJ	A	Degree=Pos	4	amod	_	_
4	information	information	NOUN	S	Number=Sing	5	nmod	_	_
5	www.unistudium.unipg.it	www.unistudium.unipg.it	PRON	PE	Number=Sing|Person=3|PronType=Prs	0	root	_	SpacesAfter=\n

# sent_id = 790
# text = Learning verification modality
1	Learning	Learn	VERB	V	VerbForm=Ger	3	acl	_	_
2	verification	verification	NOUN	S	Number=Sing	1	obj	_	_
3	modality	modality	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\s\n

# sent_id = 791
# text = Oral exam and final project.
1	Oral	oral	ADJ	A	Degree=Pos	2	amod	_	_
2	exam	exam	NOUN	S	Number=Sing	0	root	_	_
3	and	and	CCONJ	CC	_	5	cc	_	_
4	final	final	ADJ	A	Degree=Pos	5	amod	_	_
5	project	project	NOUN	S	Number=Sing	2	conj	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 792
# text = Intermediate exams during the course
1	Intermediate	Intermediate	ADJ	A	Degree=Pos	2	amod	_	_
2	exams	exam	NOUN	S	Number=Plur	0	root	_	_
3	during	during	ADP	E	_	5	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	course	course	NOUN	S	Number=Sing	2	nmod	_	SpacesAfter=\n

# sent_id = 793
# text = Extended program
1	Extended	extend	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	program	program	NOUN	S	Number=Sing	1	obj	_	SpacesAfter=\s\n

# sent_id = 794
# text = Introduction to machine learning.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	machine	machine	VERB	V	VerbForm=Inf	1	acl	_	_
4	learning	learning	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 795
# text = Supervised, semi-supervised and unsupervised approaches.
1	Supervised	Supervised	PROPN	SP	_	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	semi	semi	X	X	_	5	obl	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	5	punct	_	SpaceAfter=No
5	supervised	supervize	VERB	V	Tense=Past|VerbForm=Part	1	acl	_	_
6	and	and	CCONJ	CC	_	8	cc	_	_
7	unsupervised	unsupervize	ADJ	A	Degree=Pos	8	amod	_	_
8	approaches	approach	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 796
# text = Data classification (decision trees, rule-based approach, naive bayes, nearest neighbors, SVM, neural networks, ensemble) , clustering (k-means, hierarchical approaches, density based approaches), anomaly detection. Applications to computer vision and speech recognition.
1	Data	data	DET	RD	Definite=Def|Gender=Fem|Number=Sing|PronType=Art	2	det	_	_
2	classification	classification	NOUN	S	Number=Sing	0	root	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	decision	decision	NOUN	S	Number=Sing	5	nmod	_	_
5	trees	tree	NOUN	S	Number=Plur	2	appos	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	10	punct	_	_
7	rule	rule	NOUN	S	Number=Sing	9	nmod:npmod	_	SpaceAfter=No
8	-	-	PUNCT	FF	_	9	punct	_	SpaceAfter=No
9	based	based	VERB	V	Tense=Past|VerbForm=Part	10	amod	_	_
10	approach	approach	NOUN	S	Number=Sing	5	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	13	punct	_	_
12	naive	naive	ADJ	A	Degree=Pos	13	amod	_	_
13	bayes	bay	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	16	punct	_	_
15	nearest	nearest	ADJ	A	Degree=Sup	16	amod	_	_
16	neighbors	neighbor	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	18	punct	_	_
18	SVM	SVM	PROPN	SP	_	5	conj	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	21	punct	_	_
20	neural	neural	ADJ	A	Degree=Pos	21	amod	_	_
21	networks	networks	NOUN	S	Number=Plur	5	conj	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	23	punct	_	_
23	ensemble	ensemble	ADJ	A	Degree=Pos	5	conj	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	5	punct	_	_
25	,	,	PUNCT	FF	_	2	punct	_	_
26	clustering	cluster	VERB	V	VerbForm=Ger	2	acl	_	_
27	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
28	k-means	k-means	NOUN	S	Number=Plur	41	nmod	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	31	punct	_	_
30	hierarchical	hierarchical	ADJ	A	Degree=Pos	31	amod	_	_
31	approaches	approach	NOUN	S	Number=Plur	28	conj	_	SpaceAfter=No
32	,	,	PUNCT	FF	_	28	punct	_	_
33	density	density	NOUN	S	Number=Sing	35	nmod	_	_
34	based	based	VERB	V	Tense=Past|VerbForm=Part	35	case	_	_
35	approaches	approach	NOUN	S	Number=Plur	28	nmod	_	SpaceAfter=No
36	)	)	PUNCT	FB	_	28	punct	_	SpaceAfter=No
37	,	,	PUNCT	FF	_	39	punct	_	_
38	anomaly	anomaly	ADJ	A	Degree=Pos	39	amod	_	_
39	detection	detection	NOUN	S	Number=Sing	28	conj	_	SpaceAfter=No
40	.	.	PUNCT	FS	_	28	punct	_	_
41	Applications	application	NOUN	S	Number=Plur	26	obj	_	_
42	to	to	PART	PART	_	43	mark	_	_
43	computer	computer	VERB	V	VerbForm=Inf	41	acl	_	_
44	vision	vision	NOUN	S	Number=Sing	43	obj	_	_
45	and	and	CCONJ	CC	_	47	cc	_	_
46	speech	speech	NOUN	S	Number=Sing	47	nmod	_	_
47	recognition	recognition	NOUN	S	Number=Sing	44	conj	_	SpaceAfter=No
48	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\n

# sent_id = 797
# text = Introduction to deep learning.
1	Introduction	introduction	NOUN	S	Number=Sing	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	deep	deep	VERB	V	VerbForm=Inf	1	acl	_	_
4	learning	learning	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\s\n

# sent_id = 798
# text = Advanced neural networks models (convolutional NN, recurrent NN, generative models).
1	Advanced	advance	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
2	neural	neural	ADJ	A	Degree=Pos	4	amod	_	_
3	networks	networks	NOUN	S	Number=Plur	4	nmod	_	_
4	models	model	NOUN	S	Number=Plur	1	obj	_	_
5	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
6	convolutional	convolutional	ADJ	A	Degree=Pos	7	amod	_	_
7	NN	NN	PROPN	SP	_	4	appos	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	10	punct	_	_
9	recurrent	recurrent	ADJ	A	Degree=Pos	10	amod	_	_
10	NN	NN	PROPN	SP	_	7	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	13	punct	_	_
12	generative	generative	ADJ	A	Degree=Pos	13	amod	_	_
13	models	model	NOUN	S	Number=Plur	7	conj	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	7	punct	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

